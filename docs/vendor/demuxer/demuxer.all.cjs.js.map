{"version":3,"file":"demuxer.all.cjs.js","sources":["../src/enum/events.ts","../src/util/event-emitter.ts","../src/types/globals.ts","../src/util/is.ts","../src/util/cache-buffer.ts","../src/util/multi-map.ts","../src/util/event-manager.ts","../src/util/global.ts","../src/util/logger.ts","../src/util/stream.ts","../src/demux-facade.ts","../src/mux-error-code.ts","../src/m2t/structs/patSection.ts","../src/m2t/structs/pmtSection.ts","../src/enum/m2t-pid.ts","../src/m2t/psi.ts","../src/m2t/streams/complex.js","../src/util/platform.ts","../src/codec/aac/aac-config.ts","../src/codec/aac/aac.ts","../src/codec/adts.ts","../src/m2t/streams/adts.ts","../src/util/dv.ts","../src/codec/avc/ep3b.ts","../src/util/exp-golumb.ts","../src/codec/avc/sps.ts","../src/codec/avc/pps.ts","../src/codec/avc/sei.ts","../src/codec/avc/nalu.ts","../src/codec/avc.ts","../src/codec/avc/avc-config.ts","../src/m2t/streams/avc.ts","../src/m2t/streams/elementary.ts","../src/m2t/structs/pes.ts","../src/m2t/streams/pes.ts","../src/m2t/structs/packet.ts","../src/m2t/demux.ts","../src/mp4/mp4-inspector.ts","../src/mp4/demux.ts","../src/flv/flv-const.ts","../src/enum/flv-tag-types.ts","../src/flv/structs/flv-tag.ts","../src/flv/streams/body.ts","../src/flv/structs/flv-amf.ts","../src/flv/types/av-context.ts","../src/flv/structs/flv-tag-aac-audio-data.ts","../src/flv/structs/flv-tag-audio-data.ts","../src/flv/structs/flv-tag-avc-video-packet.ts","../src/flv/structs/flv-tag-video-data.ts","../src/flv/streams/tag.ts","../src/flv/structs/flv-head.ts","../src/flv/demux.ts"],"sourcesContent":["/**\n * @file= events.js, created at Monday, 23rd December 2019 3=47=23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nexport enum Events {\n    ERROR = 'ERROR',\n    INFO = 'INFO',\n    DATA = 'DATA',\n    DEMUX_DATA = 'DEMUX_DATA',\n    DONE = 'DONE'\n}\n","/**\n * @copyright https://github.com/nodejs/node/blob/master/lib/events.js\n */\n/* eslint-disable */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill;\nvar objectKeys = Object.keys || objectKeysPolyfill;\nvar bind = Function.prototype.bind || functionBindPolyfill;\n\n// By default Dispatchers will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nlet defaultMaxListeners = 10;\n\nexport default class EventEmitter {\n    static listenerCount(emitter, type) {\n        if (typeof emitter.listenerCount === 'function') {\n            return emitter.listenerCount(type);\n        } else {\n            return listenerCount.call(emitter, type);\n        }\n    }\n\n    static defaultMaxListeners: number;\n\n    _maxListeners?: number;\n    _eventsCount: number;\n    _events: any;\n\n    constructor() {\n        if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n            this._events = objectCreate(null);\n            this._eventsCount = 0;\n        }\n\n        this._maxListeners = this._maxListeners || undefined;\n    }\n\n    // // Obviously not all Emitters should be limited to 10. This function allows\n    // // that to be increased. Set to zero for unlimited.\n    // setMaxListeners(n) {\n    //     if (typeof n !== 'number' || n < 0 || isNaN(n))\n    //         throw new TypeError('\"n\" argument must be a positive number');\n    //     this._maxListeners = n;\n    //     return this;\n    // }\n    //\n    // getMaxListeners() {\n    //     return $getMaxListeners(this);\n    // }\n\n    emit(type: string, ...rest) {\n        var er, handler, len, args, i, events;\n        var doError = type === 'error';\n\n        events = this._events;\n        if (events) doError = doError && events.error == null;\n        else if (!doError) return false;\n\n        // If there is no 'error' event listener then throw.\n        if (doError) {\n            if (arguments.length > 1) er = arguments[1];\n            if (er instanceof Error) {\n                throw er; // Unhandled 'error' event\n            } else {\n                // At least give some kind of context to the user\n                var err = new Error('Unhandled \"error\" event. (' + er + ')');\n                err['context'] = er;\n                throw err;\n            }\n        }\n\n        handler = events[type];\n\n        if (!handler) return false;\n\n        var isFn = typeof handler === 'function';\n        len = arguments.length;\n        switch (len) {\n            // fast cases\n            case 1:\n                emitNone(handler, isFn, this);\n                break;\n            case 2:\n                emitOne(handler, isFn, this, arguments[1]);\n                break;\n            case 3:\n                emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n                break;\n            case 4:\n                emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n                break;\n            // slower\n            default:\n                args = new Array(len - 1);\n                for (i = 1; i < len; i++) args[i - 1] = arguments[i];\n                emitMany(handler, isFn, this, args);\n        }\n\n        return true;\n    }\n\n    on(type: string, listener: Function) {\n        return _addListener(this, type, listener);\n    }\n\n    once(type, listener) {\n        if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n        this.on(type, _onceWrap(this, type, listener));\n        return this;\n    }\n\n    off(type, listener) {\n        return _removeListener.call(this, type, listener);\n    }\n\n    removeAllListeners(type) {\n        var listeners, events, i;\n\n        events = this._events;\n        if (!events) return this;\n\n        // not listening for off, no need to emit\n        if (!events.off) {\n            if (arguments.length === 0) {\n                this._events = objectCreate(null);\n                this._eventsCount = 0;\n            } else if (events[type]) {\n                if (--this._eventsCount === 0) this._events = objectCreate(null);\n                else delete events[type];\n            }\n            return this;\n        }\n\n        // emit off for all listeners on all events\n        if (arguments.length === 0) {\n            var keys = objectKeys(events);\n            var key;\n            for (i = 0; i < keys.length; ++i) {\n                key = keys[i];\n                if (key === 'off') continue;\n                this.removeAllListeners(key);\n            }\n            this.removeAllListeners('off');\n            this._events = objectCreate(null);\n            this._eventsCount = 0;\n            return this;\n        }\n\n        listeners = events[type];\n\n        if (typeof listeners === 'function') {\n            this.off(type, listeners);\n        } else if (listeners) {\n            // LIFO order\n            for (i = listeners.length - 1; i >= 0; i--) {\n                this.off(type, listeners[i]);\n            }\n        }\n\n        return this;\n    }\n\n    listeners(type) {\n        return _listeners(this, type, true);\n    }\n\n    rawListeners(type) {\n        return _listeners(this, type, false);\n    }\n\n    listenerCount() {\n        return EventEmitter.listenerCount.apply(this, arguments);\n    }\n}\n\nlet hasDefineProperty;\ntry {\n    var o = {};\n    if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n    hasDefineProperty = o['x'] === 0;\n} catch (err) {\n    hasDefineProperty = false;\n}\nif (hasDefineProperty) {\n    Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n        enumerable: true,\n        get: function () {\n            return defaultMaxListeners;\n        },\n        set: function (arg) {\n            // check whether the input is a positive number (whose value is zero or\n            // greater and not a NaN).\n            if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n                throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n            defaultMaxListeners = arg;\n        }\n    });\n} else {\n    EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\nfunction $getMaxListeners(that) {\n    if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n    return that._maxListeners;\n}\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n    if (isFn) handler.call(self);\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i) {\n            try {\n                listeners[i].call(self);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\nfunction emitOne(handler, isFn, self, arg1) {\n    if (isFn) handler.call(self, arg1);\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i) {\n            try {\n                listeners[i].call(self, arg1);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n    if (isFn) handler.call(self, arg1, arg2);\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i) {\n            try {\n                listeners[i].call(self, arg1, arg2);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n    if (isFn) handler.call(self, arg1, arg2, arg3);\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i) {\n            try {\n                listeners[i].call(self, arg1, arg2, arg3);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n    if (isFn) handler.apply(self, args);\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i) {\n            try {\n                listeners[i].apply(self, args);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\nfunction _addListener(target: EventEmitter, type, listener: Function) {\n    var m;\n    var events;\n    var existing;\n\n    if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\n    events = target._events;\n    if (!events) {\n        events = target._events = objectCreate(null);\n        target._eventsCount = 0;\n    } else {\n        // To avoid recursion in the case that type === \"newListener\"! Before\n        // adding it to the listeners, first emit \"newListener\".\n        if (events.newListener) {\n            target.emit('newListener', type, listener['listener'] ? listener['listener'] : listener);\n\n            // Re-assign `events` because a newListener handler could have caused the\n            // this._events to be assigned to a new object\n            events = target._events;\n        }\n        existing = events[type];\n    }\n\n    if (!existing) {\n        // Optimize the case of one listener. Don't need the extra array object.\n        existing = events[type] = listener;\n        ++target._eventsCount;\n    } else {\n        if (typeof existing === 'function') {\n            // Adding the second element, need to change to array.\n            existing = events[type] = [existing, listener];\n        } else {\n            existing.push(listener);\n        }\n\n        // Check for listener leak\n        if (!existing.warned) {\n            m = $getMaxListeners(target);\n            if (m && m > 0 && existing.length > m) {\n                existing.warned = true;\n\n                class CustomError extends Error {\n                    emitter: any;\n                    type: string;\n                    count: number;\n                }\n                let w: CustomError = new CustomError(\n                    'Possible Dispatcher memory leak detected. ' +\n                        existing.length +\n                        ' \"' +\n                        String(type) +\n                        '\" listeners ' +\n                        'added. Use emitter.setMaxListeners() to ' +\n                        'increase limit.'\n                );\n                w.name = 'MaxListenersExceededWarning';\n                w.emitter = target;\n                w.type = type;\n                w.count = existing.length;\n\n                if (typeof console === 'object' && console.warn) {\n                    console.warn('%s: %s', w.name, w.message);\n                }\n            }\n        }\n    }\n\n    return target;\n}\n\nfunction _removeListener(type, listener) {\n    var list, events, position, i, originalListener;\n\n    if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\n    events = this._events;\n    if (!events) return this;\n\n    list = events[type];\n    if (!list) return this;\n\n    if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0) this._events = objectCreate(null);\n        else {\n            delete events[type];\n            if (events.off) this.emit('off', type, list.listener || listener);\n        }\n    } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n            if (list[i] === listener || list[i].listener === listener) {\n                originalListener = list[i].listener;\n                position = i;\n                break;\n            }\n        }\n\n        if (position < 0) return this;\n\n        if (position === 0) list.shift();\n        else spliceOne(list, position);\n\n        if (list.length === 1) events[type] = list[0];\n\n        if (events.off) this.emit('off', type, originalListener || listener);\n    }\n\n    return this;\n}\n\nfunction onceWrapper() {\n    if (!this.fired) {\n        this.target.off(this.type, this.wrapFn);\n        this.fired = true;\n        switch (arguments.length) {\n            case 0:\n                return this.listener.call(this.target);\n            case 1:\n                return this.listener.call(this.target, arguments[0]);\n            case 2:\n                return this.listener.call(this.target, arguments[0], arguments[1]);\n            case 3:\n                return this.listener.call(this.target, arguments[0], arguments[1], arguments[2]);\n            default:\n                var args = new Array(arguments.length);\n                for (var i = 0; i < args.length; ++i) args[i] = arguments[i];\n                this.listener.apply(this.target, args);\n        }\n    }\n}\n\nfunction _onceWrap(target, type, listener) {\n    var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n    var wrapped = bind.call(onceWrapper, state);\n    wrapped.listener = listener;\n    state.wrapFn = wrapped;\n    return wrapped;\n}\n\nfunction _listeners(target, type, unwrap) {\n    var events = target._events;\n\n    if (!events) return [];\n\n    var evlistener = events[type];\n    if (!evlistener) return [];\n\n    if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n    return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nfunction listenerCount(type) {\n    var events = this._events;\n\n    if (events) {\n        var evlistener = events[type];\n\n        if (typeof evlistener === 'function') {\n            return 1;\n        } else if (evlistener) {\n            return evlistener.length;\n        }\n    }\n\n    return 0;\n}\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n    for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) list[i] = list[k];\n    list.pop();\n}\n\nfunction arrayClone(arr, n) {\n    var copy = new Array(n);\n    for (var i = 0; i < n; ++i) copy[i] = arr[i];\n    return copy;\n}\n\nfunction unwrapListeners(arr) {\n    var ret = new Array(arr.length);\n    for (var i = 0; i < ret.length; ++i) {\n        ret[i] = arr[i].listener || arr[i];\n    }\n    return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n    var F = function () {};\n    F.prototype = proto;\n    return new F();\n}\n\nfunction objectKeysPolyfill(obj) {\n    var keys = [];\n    for (var k in obj)\n        if (Object.prototype.hasOwnProperty.call(obj, k)) {\n            keys.push(k);\n        }\n    return k;\n}\n\nfunction functionBindPolyfill(context) {\n    var fn = this;\n    return function () {\n        return fn.apply(context, arguments);\n    };\n}\n","import EventEmitter from '../util/event-emitter';\n\nexport class Context extends EventEmitter {}\n\nexport type PushConf = Partial<{\n    done: boolean;\n    stubTime: number;\n    offsetPos: number; // Represents the start byte of the pushed data relative to the entire file\n}>;\n\nexport type GlobalOptions = Partial<{\n    debug: boolean;\n    decodeCodec: boolean;\n    config: PushConf;\n}>;\n\nexport interface IDemux {\n    /**\n     * Pipe the arrayBuffer to the demuxer.\n     * @param buf\n     * @param conf\n     */\n    push(buf: ArrayBuffer | Uint8Array, conf: PushConf): void;\n\n    reset(): void;\n\n    destroy(): void;\n}\n","/**\n * @file: is.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = Object.prototype.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nexport function isObjectLike(value: any): boolean {\n    return !!value && typeof value == 'object';\n}\n\nexport function isEmptyObject(obj: object): boolean {\n    for (var prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n            return false;\n        }\n    }\n    return JSON.stringify(obj) === JSON.stringify({});\n}\n\n/**\n * @param url\n */\nexport function isHttps(url?: string): boolean {\n    return /^https/gi.test(url || window.location.protocol);\n}\n\n/**\n * @param num\n */\nexport function isNumber(num: any): boolean {\n    return typeof num === 'number' && !isNaN(num);\n}\n\n/**\n * @param value\n */\nexport function isArrayBuffer(value: any): boolean {\n    return isObjectLike(value) && objectToString.call(value).toLowerCase() === '[object arraybuffer]';\n}\n\n/**\n * @param value\n */\nexport function isUint8Array(value: any): boolean {\n    return isObjectLike(value) && objectToString.call(value).toLowerCase() === '[object uint8array]';\n}\n","/**\n * @file: cache-buffer.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport { isNumber } from './is';\n\n/**\n * Cache Buffer util.\n * It's applicable for streaming data cutting and retaining the data,\n * the algorithm minimizes memory application as much as possible.\n */\n\nexport default class CacheBuffer {\n    get byteLength(): number {\n        if (!isNumber(this.byteLength_)) {\n            let len = 0;\n\n            for (let i = 0, item: Uint8Array; i < this.list_.length; i++) {\n                item = this.list_[i];\n                len += item.byteLength;\n            }\n            this.byteLength_ = len;\n        }\n\n        return this.byteLength_;\n    }\n\n    /**\n     * maybe return new allocated memory or original memory\n     */\n    get bytes(): Uint8Array | null {\n        const { bufferList } = this;\n        let bytes = null;\n\n        if (bufferList.length > 0) {\n            if (bufferList.length === 0) {\n                bytes = bufferList[0];\n            } else {\n                bytes = this.toNewBytes();\n            }\n        }\n\n        return bytes;\n    }\n\n    get empty() {\n        return this.list_.length === 0;\n    }\n\n    get bufferList() {\n        return this.list_;\n    }\n\n    /**\n     * Used to cache calculations, reduce the number of CPU calculations.\n     * When internal data changes, the value needs to be cleared and recalculated.\n     */\n    private byteLength_: number | null;\n\n    private list_: Array<Uint8Array> = [];\n\n    clear() {\n        let len = this.list_.length;\n        if (len > 0) {\n            this.list_.splice(0, len);\n        }\n        this.byteLength_ = null;\n    }\n\n    toNewBytes(): Uint8Array | null {\n        let bytes = null;\n        let tryCount: number = 0;\n        let maxTryCount: number = 50;\n\n        // The following retry strategies are provided for failed memory applications\n        // In terms of a better strategy, a failed memory application retry should be\n        // an asynchronous process, which does not return until the application succeeds.\n        // But the original design of the library is synchronous.\n        while (bytes === null) {\n            try {\n                tryCount++;\n                bytes = new Uint8Array(this.byteLength);\n            } catch (e) {\n                if (tryCount > maxTryCount) {\n                    throw e;\n                }\n            }\n        }\n\n        for (let i = 0, offset = 0; i < this.list_.length; i++) {\n            let payload = this.list_[i];\n\n            bytes.set(payload, offset);\n            offset += payload.byteLength;\n        }\n\n        return bytes;\n    }\n\n    append(newBuffer: Uint8Array | CacheBuffer): void {\n        if (newBuffer instanceof CacheBuffer) {\n            this.list_ = this.list_.concat(newBuffer.bufferList);\n        } else {\n            this.list_.push(newBuffer);\n        }\n\n        this.byteLength_ = null;\n    }\n\n    /**\n     * This function cuts a complete TypedArray from CacheBuffer and retains the remainder of CacheBuffer.\n     * The following points should be noted when using this function:\n     * 1. If the cut needs to return the cut-out part, the cut length should be as small as possible to reduce the errors in memory application.\n     * 2. If the cutting is only to preserve the remaining parts, the cutting size is within the total number of bytes, without considering memory applications.\n     * @param {number} fixedLength\n     * @param {boolean} [needCutResult] - If not, just retain the remaining parts after cutting.\n     */\n    cut(fixedLength: number, needCutResult: boolean = true): Uint8Array {\n        let chunk = null;\n\n        if (fixedLength > 0 && !this.empty) {\n            let list = this.list_;\n\n            let offset = 0;\n            let loopIndex = 0;\n\n            while (list.length > 0) {\n                let cur = list.shift();\n\n                if (loopIndex === 0) {\n                    if (cur.byteLength >= fixedLength) {\n                        if (needCutResult) {\n                            // Here is the key point for optimize memory alloc\n                            chunk = cur.subarray(0, fixedLength);\n                        }\n\n                        if (cur.byteLength > fixedLength) {\n                            cur = cur.subarray(fixedLength);\n                            list.unshift(cur);\n                        }\n                        break;\n                    } else {\n                        if (needCutResult) {\n                            try {\n                                chunk = new Uint8Array(fixedLength);\n                            } catch (e) {\n                                throw `alloc_memory_error@ cache buffer: ${fixedLength} ${e.message}`;\n                            }\n\n                            chunk.set(cur, 0);\n                        }\n                        offset += cur.byteLength;\n                    }\n                } else {\n                    let subLen = fixedLength - offset;\n\n                    if (cur.byteLength >= subLen) {\n                        if (needCutResult) {\n                            chunk.set(cur.subarray(0, subLen), offset);\n                        }\n\n                        cur = cur.subarray(subLen);\n\n                        if (cur.byteLength > 0) {\n                            list.unshift(cur);\n                        }\n\n                        break;\n                    } else {\n                        if (needCutResult) {\n                            chunk.set(cur, offset);\n                        }\n                        offset += cur.byteLength;\n                        break;\n                    }\n                }\n\n                loopIndex++;\n            }\n\n            this.byteLength_ = null;\n        }\n\n        return chunk;\n    }\n}\n","/**\n * @fileOverview A simple multimap template.\n */\n\ninterface MapData {\n    [index: string]: Array<any>;\n}\n\nexport default class MultiMap {\n    private map_: MapData;\n\n    constructor() {\n        this.map_ = {};\n    }\n\n    /**\n     * Add a key, value pair to the map.\n     * @param key\n     * @param value\n     */\n    push(key: string, value: any) {\n        if (Object.prototype.hasOwnProperty.call(this.map_, key)) {\n            this.map_[key].push(value);\n        } else {\n            this.map_[key] = [value];\n        }\n    }\n\n    /**\n     * Get a list of values by key.\n     * @param key\n     */\n    get(key: string): Array<any> {\n        let list = this.map_[key];\n        // slice() clones the list so that it and the map can each be modified\n        // without affecting the other.\n        return list ? list.slice() : null;\n    }\n\n    /**\n     * Get a list of all values.\n     */\n    getAll(): Array<any> {\n        let list = [];\n        for (let key in this.map_) {\n            list.push.apply(list, this.map_[key]);\n        }\n        return list;\n    }\n\n    /**\n     * Remove a specific value, if it exists.\n     * @param key\n     * @param value\n     */\n    remove(key: string, value: any): void {\n        let list = this.map_[key];\n        if (list) {\n            for (let i = 0; i < list.length; ++i) {\n                if (list[i] == value) {\n                    list.splice(i, 1);\n                    --i;\n                }\n            }\n        }\n    }\n\n    /**\n     * Clear all keys and values from the multimap.\n     */\n    clear(): void {\n        this.map_ = {};\n    }\n\n    /**\n     * @param callback\n     */\n    forEach(callback: Function): void {\n        for (let key in this.map_) {\n            callback(key, this.map_[key]);\n        }\n    }\n}\n","import MultiMap from './multi-map';\n\n/**\n * Creates a new Binding_ and attaches the event listener to the event target.\n */\nclass Binding_ {\n    target: any;\n    type: string;\n    listener: Function;\n\n    /**\n     * @param target - The event target.\n     * @param type - The event type.\n     * @param listener - The event listener.\n     */\n    constructor(target: any, type: string, listener: Function) {\n        this.target = target;\n        this.type = type;\n        this.listener = listener;\n\n        if (this.target.addEventListener) {\n            this.target.addEventListener(type, listener, false);\n        } else if (this.target.on) {\n            this.target.on(type, listener, false);\n        }\n    }\n\n    /**\n     * Detaches the event listener from the event target.\n     * This does nothing if the event listener is already detached.\n     */\n    off() {\n        if (this.target.removeEventListener) {\n            this.target.removeEventListener(this.type, this.listener, false);\n        } else if (this.target.off) {\n            this.target.off(this.type, this.listener, false);\n        }\n\n        this.target = null;\n        this.listener = null;\n    }\n}\n\n/**\n * Creates a new EventManager.\n * An EventManager maintains a collection of \"event bindings\" between event targets and event listeners.\n */\nexport default class EventManager {\n    private bindingMap_: MultiMap;\n    // static Binding_: Binding;\n\n    constructor() {\n        /**\n         * Maps an event type to an array of event bindings.\n         */\n        this.bindingMap_ = new MultiMap();\n    }\n\n    /**\n     * Detaches all event listeners.\n     * @override\n     */\n    destroy(): void {\n        this.removeAll();\n        this.bindingMap_ = null;\n    }\n\n    /**\n     * Attaches an event listener to an event target.\n     * @param target - The event target.\n     * @param type  - The event type.\n     * @param listener  - The event listener.\n     */\n    on(target: any, type: string, listener: Function): EventManager {\n        if (!this.bindingMap_) return;\n\n        let binding = new Binding_(target, type, listener);\n        this.bindingMap_.push(type, binding);\n\n        return this;\n    }\n\n    /**\n     * Attaches an event listener to an event target.\n     * The listener will be removed when the first instance of the event is fired.\n     * @param {EventTarget} target The event target.\n     * @param {string} type The event type.\n     * @param {function} listener The event listener.\n     */\n    once(target: any, type: string, listener: Function) {\n        // Install a shim listener that will stop listening after the first event.\n        this.on(\n            target,\n            type,\n            function (event: any) {\n                // Stop listening to this event.\n                this.off(target, type);\n                // Call the original listener.\n                listener(event);\n            }.bind(this)\n        );\n    }\n\n    /**\n     * Detaches an event listener from an event target.\n     * @param {EventTarget} target The event target.\n     * @param {string} type The event type.\n     */\n    off(target: any, type: string): void {\n        if (!this.bindingMap_) return;\n\n        let list = this.bindingMap_.get(type) || [];\n\n        for (let i = 0; i < list.length; ++i) {\n            let binding = list[i];\n\n            if (binding.target == target) {\n                binding.off();\n                this.bindingMap_.remove(type, binding);\n            }\n        }\n    }\n\n    /**\n     * Detaches all event listeners from all targets.\n     */\n    removeAll(): void {\n        if (!this.bindingMap_) return;\n\n        let list = this.bindingMap_.getAll();\n\n        for (let i = 0; i < list.length; ++i) {\n            list[i].off();\n        }\n\n        this.bindingMap_.clear();\n    }\n}\n\n// EventManager.Binding_ = Binding;\n","/**\n * @file: global.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * @description provide global scope.\n */\nlet global: any;\n\n// see https://stackoverflow.com/a/11237259/589493\nif (typeof window === 'undefined') {\n    /* eslint-disable-next-line no-undef */\n    global = self;\n} else {\n    global = window;\n}\n\nexport default global;\n","/**\n * @file: logger.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * utils - logger\n */\n/* global WorkerGlobalScope */\nimport global from './global';\nimport EventEmitter from './event-emitter';\n\nlet console = global.console;\nconst isWorker =\n    typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope &&\n    typeof importScripts != 'undefined';\nconst prefix = '>>>';\n\nclass Logger extends EventEmitter {\n    private MSG_NAME: string;\n    private _enable: boolean;\n\n    get enable() {\n        return this._enable;\n    }\n\n    set enable(value: boolean) {\n        this._enable = value;\n\n        this.MSG_NAME = '__log__';\n    }\n\n    constructor() {\n        super();\n        this._enable = false;\n    }\n\n    log(...restArgs: any) {\n        if (isWorker) {\n            logger.emit(this.MSG_NAME, 'log', [...restArgs].join(''));\n        } else {\n            if (this._enable) {\n                console.log.call(console, prefix, ...restArgs);\n            }\n        }\n    }\n\n    debug(...restArgs: any) {\n        if (isWorker) {\n            logger.emit(this.MSG_NAME, 'debug', [...restArgs].join(''));\n        } else {\n            if (this._enable && console.debug) {\n                console.debug.call(console, prefix, ...restArgs);\n            }\n        }\n    }\n\n    assert(...restArgs: any) {\n        if (this._enable && console.assert) {\n            let condition = restArgs[0];\n            let sliceArgs = Array.prototype.slice.call(restArgs, 1);\n            sliceArgs.unshift(prefix);\n\n            console.assert.call(console, condition, ...sliceArgs);\n        }\n    }\n\n    warn(...restArgs: any) {\n        if (isWorker) {\n            logger.emit(this.MSG_NAME, 'warn', [...restArgs].join(''));\n        } else {\n            if (this._enable) {\n                console.warn.call(console, prefix, ...restArgs);\n            }\n        }\n    }\n\n    error(...restArgs: any) {\n        if (isWorker) {\n            logger.emit(this.MSG_NAME, 'error', [...restArgs].join(''));\n        } else {\n            if (this._enable) {\n                console.error.call(console, prefix, ...restArgs);\n            }\n        }\n    }\n}\n\nlet logger = new Logger();\n\n/**\n * @param {Object} obj - custom logger\n */\nexport function setLogger(obj) {\n    console = obj;\n}\n\nexport function getLogger() {\n    return logger;\n}\n\nexport default logger;\n","/**\n * @file: stream.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * simple stream implementation.\n */\n\nimport { PushConf } from '../types/globals';\nimport EventEmitter from './event-emitter';\n\nclass Stream extends EventEmitter {\n    constructor() {\n        super();\n    }\n\n    /**\n     * connect to the next pipeline stream.\n     * @param destination\n     */\n    pipe(destination: Stream): Stream {\n        this.on('reset', function () {\n            destination.reset();\n        });\n\n        this.on('data', function (data) {\n            destination.push(data);\n        });\n\n        this.on('done', function (flushSource) {\n            destination.flush(flushSource);\n        });\n\n        return destination;\n    }\n\n    /**\n     * detaches the next pipeline stream previously attached.\n     */\n    unpipe(): Stream {\n        this.removeAllListeners('reset');\n        this.removeAllListeners('data');\n        this.removeAllListeners('done');\n\n        return this;\n    }\n\n    /**\n     * push data to current pipeline.\n     * @param data\n     */\n    push(data: any, conf?: PushConf): void {\n        if (conf) {\n        }\n        this.emit('data', data);\n    }\n\n    /**\n     * flush current pipeline.\n     * @param flushSource\n     */\n    flush(flushSource: Stream): void {\n        this.emit('done', flushSource);\n    }\n\n    reset(): void {\n        this.emit('reset');\n    }\n}\n\nexport default Stream;\n","/**\n * @file: demuxer.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\nimport { Events } from './enum/events';\nimport { Context, GlobalOptions, IDemux, PushConf } from './types/globals';\nimport CacheBuffer from './util/cache-buffer';\nimport EventManager from './util/event-manager';\nimport { isArrayBuffer, isUint8Array } from './util/is';\nimport logger from './util/logger';\nimport Stream from './util/stream';\n\nexport default abstract class DemuxFacade extends Stream implements IDemux {\n    readonly endStream?: Stream;\n    protected eventManager_: EventManager;\n    protected ctx_: Context;\n    protected options_: GlobalOptions;\n    protected cache_buffer_: CacheBuffer;\n\n    protected listenEndStream_(): void {\n        this.eventManager_ = new EventManager();\n\n        this.eventManager_\n            .on(this.endStream, 'data', (data) => {\n                this.emit(Events.DEMUX_DATA, data);\n            })\n            .on(this.endStream, 'done', (data) => {\n                this.emit(Events.DONE, data);\n            })\n            .on(this.ctx_, 'error', (data) => {\n                this.emit(Events.ERROR, data);\n            });\n    }\n\n    constructor(options: GlobalOptions = {}) {\n        super();\n\n        if (options.debug) {\n            logger.enable = true;\n        }\n\n        this.ctx_ = new Context();\n        this.options_ = options;\n        this.cache_buffer_ = new CacheBuffer();\n    }\n\n    /**\n     * Pipe the arrayBuffer to the demuxer.\n     * @param buf\n     * @param conf\n     */\n    abstract push(buf: ArrayBuffer | Uint8Array, conf: PushConf): void;\n\n    /**\n     * transfer data to Uint8Array\n     * @param buf\n     */\n    protected constraintPushData_(buf: ArrayBuffer | Uint8Array): Uint8Array | null {\n        let newBuf = null;\n        if (!isArrayBuffer(buf) && !isUint8Array(buf)) {\n            logger.error(`Data pushed is not an ArrayBuffer or Uint8Array: ${buf}`);\n            return newBuf;\n        }\n\n        if (isArrayBuffer(buf)) {\n            newBuf = new Uint8Array(buf);\n        } else {\n            newBuf = buf;\n        }\n\n        return newBuf;\n    }\n\n    reset(): void {}\n\n    destroy(): void {\n        this.unpipe();\n        this.endStream.unpipe();\n\n        this.eventManager_.removeAll();\n    }\n}\n","/**\n * @file: mux-error-code.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * @readonly\n * @enum {Number}\n */\nenum codes {\n    WORKER_EXCEPTION = 0,\n    WORKER_MSG_EXCEPTION,\n    TS_SYNC_BYTE,\n    FLV_HEAD_SIGNATURE,\n    FLV_NOT_EXPECTED_ADJACENT_DATA\n}\n\nexport default codes;\n","/**\n * @file: patSection.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport logger from '../../util/logger';\n\n/**\n * Structure for pat.\n */\nexport class PATSection {\n    // table_id: number;\n    // section_syntax_indicator: number;\n    // section_length: number;\n    // transport_stream_id: number;\n    // version_number: number;\n    // current_next_indicator: number;\n    // section_number: number;\n    // last_section_number: number;\n    // network_PID: number;\n    pmtTable: Array<M2TS.PMTTableItem>;\n    // CRC_32: number;\n\n    constructor(buffer: Uint8Array) {\n        // program_association_section 0x00\n        // this.table_id = buffer[0];\n\n        // this.section_syntax_indicator = buffer[1] >> 7;\n\n        // this.zero = (buffer[1] >> 6) & 0x1;\n\n        // this.reserved_0 = (buffer[1] >> 4) & 0x3;\n\n        // the number of bytes of the section\n        // starting immediately following the section_length field, and including the CRC.\n        let section_length = ((buffer[1] & 0x0f) << 8) | buffer[2];\n\n        // this.transport_stream_id = (buffer[3] << 8) | buffer[4];\n\n        // this.reserved_1 = buffer[5] >> 6;\n\n        // this.version_number = (buffer[5] >> 1) & 0x1f;\n\n        // this.current_next_indicator = buffer[5] && 0x01;\n\n        // The section_number of the first section in the Program Association Table shall be 0x00.\n        // It shall be incremented by 1 with each additional section in the PAT.\n        // this.section_number = buffer[6];\n\n        // The number of the last section (that is, the section with the highest section_number) of the complete PAT.\n        // this.last_section_number = buffer[7];\n\n        // this.network_PID = 0x00;\n\n        var n = 0,\n            program_num;\n        // reserved_3;\n        var len = section_length - 4 - 5; // 4: crc32, 5: bytes followed by section_length\n\n        this.pmtTable = [];\n        /* loop by 4 bytes, during  */\n        for (; n < len; n += 4) {\n            program_num = (buffer[n + 8] << 8) | buffer[n + 9];\n            // reserved_3 = buffer[10 + n] >> 5;\n\n            if (program_num == 0x00) {\n                let network_PID = ((buffer[10 + n] & 0x1f) << 8) | buffer[11 + n];\n\n                // 记录该TS流的网络PID\n                // TS_network_Pid = this.network_PID;\n\n                logger.log('packet->network_PID %0x /n/n', network_PID);\n            } else {\n                this.pmtTable.push({\n                    programNum: program_num,\n                    program_map_PID: ((buffer[10 + n] & 0x1f) << 8) | buffer[11 + n]\n                });\n\n                // TS_PAT_Program\n                // PAT_program;\n                // PAT_program.program_map_PID = (buffer[10 + n] & 0x1F) << 8 | buffer[11 + n];\n                // PAT_program.program_number = program_num;\n                // this.program.push_back(PAT_program);\n                // TS_program.push_back(PAT_program);//向全局PAT节目数组中添加PAT节目信息\n            }\n        }\n\n        // var crcLength = this.section_length + 3;\n        // this.CRC_32 =\n        //     ((buffer[crcLength - 4] & 0x000000ff) << 24) |\n        //     ((buffer[crcLength - 3] & 0x000000ff) << 16) |\n        //     ((buffer[crcLength - 2] & 0x000000ff) << 8) |\n        //     (buffer[crcLength - 1] & 0x000000ff);\n    }\n}\n","/**\n * @file: pmtSection.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * Structure for pat.\n */\nimport logger from '../../util/logger';\n\n/**\n * Structure for PMT.\n */\nexport class PMTSection {\n    // table_id: number;\n    // section_syntax_indicator: number;\n    // section_length: number;\n    // program_number: number;\n    // version_number: number;\n    // current_next_indicator: number;\n    // section_number: number;\n    // last_section_number: number;\n    // PCR_PID: number;\n    pes_table: Array<M2TS.PESTableItem>;\n    // CRC_32: number;\n\n    constructor(buffer: Uint8Array) {\n        // program_map_section  0x02\n        // this.table_id = buffer[0];\n\n        // this.section_syntax_indicator = buffer[1] >> 7;\n\n        // this.zero = (buffer[1] >> 6) & 0x1;\n\n        // this.reserved_0 = (buffer[1] >> 4) & 0x3;\n\n        // the number of bytes of the section\n        // starting immediately following the section_length field, and including the CRC.\n        let section_length = ((buffer[1] & 0x0f) << 8) | buffer[2];\n\n        // It specifies the program to which the program_map_PID is applicable.\n        // this.program_number = (buffer[3] << 8) | buffer[4];\n\n        // this.reserved_1 = buffer[5] >> 6;\n\n        // this.version_number = (buffer[5] >> 1) & 0x1f;\n\n        // this.current_next_indicator = buffer[5] && 0x01;\n\n        // The section_number of the first section in the Program Association Table shall be 0x00.\n        // It shall be incremented by 1 with each additional section in the PAT.\n        // this.section_number = buffer[6];\n\n        // The number of the last section (that is, the section with the highest section_number) of the complete PAT.\n        // this.last_section_number = buffer[7];\n\n        // contain the PCR fields valid for the program specified by program_number.\n        // this.PCR_PID = ((buffer[8] & 0x1f) << 8) | buffer[9];\n\n        // this.reserved_2 = buffer[10] >> 4;\n\n        // The number of bytes of the descriptors immediately following the program_info_length field.\n        const program_info_length = ((buffer[10] & 0x0f) << 8) | buffer[11];\n\n        if (program_info_length < 0) {\n            return;\n        } else if (program_info_length > 2) {\n            let i = 0;\n\n            while (i < program_info_length) {\n                // let descriptor_tag = buffer[12 + i];\n                let descriptor_length = buffer[13 + i];\n\n                // \tlogger.log('descriptor_tag', descriptor_tag, descriptor_length);\n                i += descriptor_length;\n            }\n        }\n\n        var es_section_pos = 12 + program_info_length;\n        var es_section_len = section_length - program_info_length - 9 - 4; // 9: bytes followed by section_length, 4: crc32\n        var es_section_end = es_section_pos + es_section_len;\n\n        if (es_section_pos >= es_section_end) {\n            logger.warn(`es_section_pos < es_section_end ${es_section_pos}, ${es_section_end}`);\n            return;\n        }\n\n        this.pes_table = [];\n\n        let j = 0;\n        while (j < es_section_len) {\n            let basePos = es_section_pos + j;\n            let stream_type = buffer[basePos];\n            let elementary_PID = ((buffer[basePos + 1] << 8) | buffer[basePos + 2]) & 0x1fff;\n            let ES_info_length = ((buffer[basePos + 3] << 8) | buffer[basePos + 4]) & 0x0fff;\n\n            this.pes_table.push({\n                streamType: stream_type,\n                PID: elementary_PID\n            });\n\n            // if (ES_info_length > 2) {\n            //     let k = 0;\n            //     let es_pos = basePos + 5;\n\n            //     while (k < ES_info_length) {\n            //         // let descriptor_tag = buffer[es_pos + k];\n            //         let descriptor_length = buffer[es_pos + k];\n\n            //         // if (descriptor_tag === )\n            //         k += descriptor_length;\n            //     }\n            // }\n\n            j += ES_info_length + 5;\n        }\n\n        // var crcLength = this.section_length + 3;\n        // this.CRC_32 =\n        //     ((buffer[crcLength - 4] & 0x000000ff) << 24) |\n        //     ((buffer[crcLength - 3] & 0x000000ff) << 16) |\n        //     ((buffer[crcLength - 2] & 0x000000ff) << 8) |\n        //     (buffer[crcLength - 1] & 0x000000ff);\n    }\n}\n","/**\n * @file: m2t-pid.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * @overview Program and program element descriptors.\n * @see ISO/IEC 13818-1: Table 2-3 – PID table\n * @see DVB SI: 5.1.3 Coding of PID and table_id fields\n */\n\n/**\n * @readonly\n * @enum {number}\n * @export\n */\nexport const PAT_PID = 0x0000;\nexport const CAT_PID = 0x0001;\nexport const TSDT_PID = 0x0002;\n/* reserved 0x0003 to 0x000F */\nexport const SDT_PID = 0x0011;\n","/**\n * @file: psi.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * PSI(Program Specific Information)\n */\n// import { HevcPPSProps, HevcSPSProps, HevcVPSProps } from '../codec/avc';\nimport { PATSection } from './structs/patSection';\nimport { PMTSection } from './structs/pmtSection';\n// import { SDTSection } from './structs/sdtSection';\nimport { PAT_PID, CAT_PID, TSDT_PID, SDT_PID } from '../enum/m2t-pid';\n// import { Context } from '../types/globals';\nimport { Packet } from './structs/packet';\n// import StreamTypes from '../enum/stream-types';\nimport { StreamTypes } from '../enum/stream-types';\nimport { GOPVector, AACFrameVector } from './types/pipeline';\n\n// const MAX_PIDS_PER_PROGRAM = 64;\n\ntype TrackType = 'video' | 'audio' | 'caption';\n\nexport interface Track {\n    id: number;\n    type: TrackType;\n    stream_type: StreamTypes;\n    duration: number;\n    width?: number;\n    height?: number;\n    codec: string;\n    realCodec?: string;\n    firstDTS: number;\n    firstPTS: number;\n\n    // Video\n    gops: GOPVector;\n    profileIdc?: number;\n    profileCompatibility?: number;\n    levelIdc?: number;\n    pixelRatio?: [number, number];\n    timescale: number; // (in TS timescale = 90kHz)\n    inputTimeScale?: number;\n    sps: Array<Uint8Array>;\n    pps: Array<Uint8Array>;\n    vps: Array<Uint8Array>;\n    // hevc_vps: HevcVPSProps;\n    // hevc_sps: HevcSPSProps;\n    // hevc_pps: HevcPPSProps;\n\n    // Audio\n    isAAC?: boolean;\n    frames: AACFrameVector;\n    sampleRate?: number;\n    channelCount?: number;\n    config?: any;\n}\n\n// class Metadata {\n//     service_name: string;\n//     service_provider: string;\n// }\n\nexport class PSI {\n    constructor(ctx) {\n        // this.context = ctx;\n        // this.metadata = new Metadata();\n        this.pat_table = [];\n        this.pes_streams = [];\n    }\n\n    // private context: AVFormatContext;\n    // private metadata: Metadata; // Specify by SDT Packet\n    private pat_table: Array<M2TS.PATTableItem>; // Specify by PMT Packet\n    private pes_streams: Array<M2TS.PSI_PES_Stream>; // Specify by PES stream\n\n    /**\n     * program PID\n     */\n    get currentProgramPID(): number {\n        let _pmtIds = [];\n\n        for (let i = 0; i < this.pat_table.length; i++) {\n            _pmtIds.push(this.pat_table[i].pid);\n        }\n\n        return _pmtIds.length > 0 ? _pmtIds[0] : -1;\n    }\n\n    get tracks() {\n        return this.pes_streams;\n    }\n\n    // get pmtTable() {\n    //     return this.pat_table;\n    // }\n\n    /**\n     * 目前对于PSI的信息，持久化保留在内存中\n     * 对于同一个片子，HLS规范会规定只能有一个 PMT/PAT 表\n     * 所以一部片子的PSI信息应该是保持不变的，换片子后PSI信息的销毁通过 mux 重新实例化产生新的信息，不需要调用reset\n     * 有些 TS 文件在HLS切片器切割的时候，没有带上PAT/PMT等表，需要相邻 TS 给定的表信息\n     */\n    reset(): void {\n        // this.metadata = new Metadata();\n        this.pat_table.splice(0, this.pat_table.length);\n        this.pes_streams.splice(0, this.pes_streams.length);\n    }\n\n    /**\n     * @param packet\n     */\n    parse(packet: Packet): void {\n        const self = this;\n\n        // ISO13818-1: Table 2-3 – PID table\n        if (PAT_PID === packet.PID) {\n            /* PAT PID */\n            this._parsePat(packet);\n        } else if (CAT_PID === packet.PID) {\n            /* CAT PID */\n        } else if (TSDT_PID === packet.PID) {\n            /* Transport Stream Description Table */\n        } else if (0x0003 <= packet.PID && packet.PID <= 0x000f) {\n            /* Reserved */\n        } else if (SDT_PID === packet.PID) {\n            /* Service Description Table */\n            // this._parseSdt(packet);\n        } else if (packet.PID === self.currentProgramPID) {\n            /* PMT PID */\n            this._parsePmt(packet);\n        }\n        // else if (this.findTrack(packet.PID)) {\n        // \t/* Reserved */\n        // } else {\n        // \tlogger.warn(`psi unknown packet PID ${packet.PID}`);\n        // }\n    }\n\n    // findPmtProgram(PID) {\n    // \tlet program = null;\n    //\n    // \tfor (let i = 0; i < this.pat_table.length; i++) {\n    // \t\tif (this.pat_table[i].pid === PID) {\n    // \t\t\tprogram = this.pat_table[i].id;\n    // \t\t\tbreak;\n    // \t\t}\n    // \t}\n    //\n    // \treturn program;\n    // }\n\n    /**\n     * @param PID\n     */\n    findTrack(PID: number): Track {\n        let program = null;\n        let streams = this.pes_streams;\n\n        for (let i = 0; i < streams.length; i++) {\n            if (streams[i].id === PID) {\n                program = streams[i];\n                break;\n            }\n        }\n\n        return program;\n    }\n\n    /**\n     * Parse PAT Packet\n     * @param pack\n     */\n    private _parsePat(pack: Packet): PATSection {\n        let data: Uint8Array;\n\n        if (pack.payload_unit_start_indicator) {\n            // psi has pointer_field\n            let pointer = pack.payload[0];\n\n            data = pack.payload.subarray(pointer + 1);\n        } else {\n            data = pack.payload;\n        }\n\n        let pat = new PATSection(data);\n\n        // https://tools.ietf.org/html/rfc8216#section-3.2\n        // Transport Stream Segments MUST contain a single MPEG-2 Program;\n        for (var i = 0; i < pat.pmtTable.length; i++) {\n            this._add_pid_to_pmt(pat.pmtTable[i].programNum, pat.pmtTable[i].program_map_PID);\n        }\n\n        return pat;\n    }\n\n    /**\n     * Associates Program Number and Program Map Table(PMT) PID\n     * @param programId\n     * @param pid\n     */\n    private _add_pid_to_pmt(programId: number, pid: number): void {\n        let table = this.pat_table;\n\n        function get_pmt(id: number) {\n            for (let i = 0, item: M2TS.PATTableItem; i < table.length; i++) {\n                item = table[i];\n                if (item.id === id) {\n                    return {\n                        idx: i,\n                        item\n                    };\n                }\n            }\n            return null;\n        }\n\n        let p = get_pmt(programId);\n        if (!p) {\n            table.push({\n                id: programId,\n                pid: pid\n            });\n        }\n    }\n\n    /**\n     * Parse PMT Packet\n     * @param pack\n     */\n    private _parsePmt(pack: Packet): PMTSection {\n        let data: Uint8Array;\n\n        if (pack.payload_unit_start_indicator) {\n            // psi has pointer_field\n            let pointer = pack.payload[0];\n\n            data = pack.payload.subarray(pointer + 1);\n        } else {\n            data = pack.payload;\n        }\n\n        let pmt = new PMTSection(data);\n\n        for (var i = 0; i < pmt.pes_table.length; i++) {\n            this._add_pes_stream(pmt.pes_table[i], pmt);\n        }\n\n        return pmt;\n    }\n\n    /**\n     * @param stream\n     * @param pmt\n     */\n    private _add_pes_stream(stream: M2TS.PESTableItem, pmt: PMTSection): void {\n        let streams = this.pes_streams;\n\n        function get_program(id: number) {\n            for (let i = 0, item: M2TS.PSI_PES_Stream; i < streams.length; i++) {\n                item = streams[i];\n                if (item.id === id) {\n                    return {\n                        idx: i,\n                        item\n                    };\n                }\n            }\n            return null;\n        }\n\n        let p = get_program(stream.PID);\n        if (!p) {\n            streams.push({\n                id: stream.PID,\n                stream_type: stream.streamType,\n                duration: 0,\n                sps: [],\n                pps: [],\n                pixelRatio: [1, 1],\n                timescale: 90000, // (in TS timescale = 90kHz)\n                width: 0,\n                height: 0\n            });\n        }\n    }\n\n    /**\n     * Parse SDT Packet\n     * @param pack\n     */\n    // private _parseSdt(pack: Packet): SDTSection {\n    //     let data: Uint8Array;\n\n    //     if (pack.payload_unit_start_indicator) {\n    //         // psi has pointer_field\n    //         let pointer = pack.payload[0];\n\n    //         data = pack.payload.subarray(pointer + 1);\n    //     } else {\n    //         data = pack.payload;\n    //     }\n\n    //     let sdt = new SDTSection(data);\n\n    //     if (sdt.service_table.length > 0) {\n    //         this.metadata.service_name = sdt.service_table[0].name;\n    //         this.metadata.service_provider = sdt.service_table[0].provider_name;\n    //     }\n\n    //     return sdt;\n    // }\n}\n","/**\n * @file: complex.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * Complex Stream.\n *\n * Combine Video, Audio, Caption c and other data.\n */\nimport Stream from '../../util/stream';\n\nclass M2TSComplexStream extends Stream {\n    constructor(ctx, psi) {\n        super();\n\n        /** @private */\n        this.context = ctx;\n\n        /** @private {PSI} */\n        this.PSI = psi;\n\n        /** @private {Object} */\n        this.videoTrack = null;\n\n        /** @private {Object} */\n        this.audioTrack = null;\n\n        /** @private {Object} */\n        this.captionTrack = null;\n\n        // pipe specified by outside.\n    }\n\n    push(data) {\n        let tracks = data;\n\n        for (let i = 0, track; i < tracks.length; i++) {\n            track = tracks[i];\n\n            switch (track.type) {\n                case 'video':\n                    // data -> GOPs\n                    this._complexVideo(track);\n                    break;\n                case 'audio':\n                    this._complexAudio(track);\n                    break;\n                case 'caption':\n                    this._complexCaption(track);\n                    break;\n            }\n        }\n    }\n\n    flush() {\n        this.emit('done');\n\n        this._clearStream();\n    }\n\n    reset() {\n        this._clearStream();\n\n        // This is demux end stream, so don't emit reset.\n        // this.emit('reset');\n    }\n\n    _clearStream() {\n        this.videoTrack = null;\n        this.audioTrack = null;\n        this.captionTrack = null;\n    }\n\n    _complexVideo(gops) {\n        let track = this.PSI.findTrack(gops.trackId);\n\n        if (track) {\n            track.type = 'video';\n            track.gops = gops;\n            track.firstDTS = gops[0][0].dts;\n            track.firstPTS = gops[0][0].pts;\n            // set duration to Infinity(POSITIVE_INFINITY) can be useful for live.\n            // If Infinity it will loose the ability to seek.\n            track.duration = Number.POSITIVE_INFINITY;\n\n            this.videoTrack = track;\n\n            this.emit('data', {\n                videoTrack: this.videoTrack\n            });\n        }\n    }\n\n    _complexAudio(frames) {\n        let track = this.PSI.findTrack(frames.trackId);\n\n        if (track) {\n            track.type = 'audio';\n            track.frames = frames;\n            track.firstPTS = track.firstDTS = frames[0].dts;\n\n            // set duration to Infinity(POSITIVE_INFINITY) can be useful for live.\n            // If Infinity it will loose the ability to seek.\n            track.duration = Number.POSITIVE_INFINITY;\n\n            this.audioTrack = track;\n\n            this.emit('data', {\n                audioTrack: this.audioTrack\n            });\n        }\n    }\n\n    _complexCaption() {}\n}\n\nexport default M2TSComplexStream;\n","/**\n * @file: platform.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * @description device\n */\nconst os = {\n    mac: false,\n    iphone: false,\n    android: false\n};\nconst browser = {\n    version: false,\n    CHROME: false,\n    SAFARI: false,\n    FIREFOX: false,\n    IE11: false,\n    IE: false,\n    EDGE: false,\n    WECHAT: false\n};\n\nlet nav = navigator;\n// let platform = nav.platform;\nlet ua = nav.userAgent.toLowerCase();\n\nvar match =\n    /(edge)\\/([\\w.]+)/.exec(ua) ||\n    /(opr)[/]([\\w.]+)/.exec(ua) ||\n    /(chrome)[ /]([\\w.]+)/.exec(ua) ||\n    /(firefox)[ /]([\\w.]+)/.exec(ua) ||\n    /(iemobile)[/]([\\w.]+)/.exec(ua) ||\n    /(version)(applewebkit)[ /]([\\w.]+).*(safari)[ /]([\\w.]+)/.exec(ua) ||\n    /(webkit)[ /]([\\w.]+).*(version)[ /]([\\w.]+).*(safari)[ /]([\\w.]+)/.exec(ua) ||\n    /(webkit)[ /]([\\w.]+)/.exec(ua) ||\n    /(opera)(?:.*version|)[ /]([\\w.]+)/.exec(ua) ||\n    /(msie) ([\\w.]+)/.exec(ua) ||\n    (ua.indexOf('trident') >= 0 && /(rv)(?::| )([\\w.]+)/.exec(ua)) ||\n    (ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua)) ||\n    [];\n\nvar platform_match =\n    /(ipad)/.exec(ua) ||\n    /(ipod)/.exec(ua) ||\n    /(windows phone)/.exec(ua) ||\n    /(iphone)/.exec(ua) ||\n    /(kindle)/.exec(ua) ||\n    /(silk)/.exec(ua) ||\n    /(android)/.exec(ua) ||\n    /(win)/.exec(ua) ||\n    /(mac)/.exec(ua) ||\n    /(linux)/.exec(ua) ||\n    /(cros)/.exec(ua) ||\n    /(playbook)/.exec(ua) ||\n    /(bb)/.exec(ua) ||\n    /(blackberry)/.exec(ua) ||\n    [];\n\nvar result = {\n    version: undefined\n};\nvar matched = {\n    browser: match[5] || match[3] || match[1] || '',\n    version: match[2] || match[4] || '0',\n    versionNumber: match[4] || match[2] || '0',\n    platform: platform_match[0] || ''\n};\n\nif (matched.browser) {\n    result[matched.browser] = true;\n    // result.version = matched.version;\n    // result.versionNumber = parseInt(matched.versionNumber, 10);\n\n    let versionArray = matched.versionNumber.split('.');\n    result.version = {\n        major: parseInt(matched.versionNumber, 10),\n        string: matched.version\n    };\n    if (versionArray.length > 1) {\n        result.version.minor = parseInt(versionArray[1], 10);\n    }\n    if (versionArray.length > 2) {\n        result.version.build = parseInt(versionArray[2], 10);\n    }\n}\n\n// -------------------------------------- browser --------------------------------------\nbrowser.version = result.version;\nbrowser.CHROME = !!result['chrome'];\nbrowser.SAFARI = !!result['safari'] && !browser.CHROME;\nbrowser.FIREFOX = !!result['firefox'];\nbrowser.IE11 = /rv:11/.test(ua);\nbrowser.IE = !!result['msie'] || browser.IE11;\nbrowser.EDGE = !!result['edge'];\nbrowser.WECHAT = /(wechat)|(micromessenger)/.test(ua);\n\n// -------------------------------------- os --------------------------------------\n\nos.mac = !!matched.platform['mac'];\nos.iphone = !!matched.platform['iphone'];\nos.android = !!matched.platform['android'];\n\nexport default {\n    browser: browser,\n    os: os\n};\n","/**\n * @file: aac-config.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * Audio Config Helper\n * Accord audioObjectType/samplingFrequencyIndex/channelCount, generate mimeType info.\n */\nimport platform from '../../util/platform';\nimport logger from '../../util/logger';\n\n/*\n    sampling freq,\n    0: 96000 Hz\n    1: 88200 Hz\n    2: 64000 Hz\n    3: 48000 Hz\n    4: 44100 Hz\n    5: 32000 Hz\n    6: 24000 Hz\n    7: 22050 Hz\n    8: 16000 Hz\n    9: 12000 Hz\n    10: 11025 Hz\n    11: 8000 Hz\n    12: 7350 Hz\n    13: Reserved\n    14: Reserved\n    15: frequency is written explictly\n */\nconst samplingRates = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\nexport default (audioObjectType: number, samplingFrequencyIndex: number, channelCount: number) => {\n    let adtsExtensionSamplingIndex;\n    let realAudioObjectType = audioObjectType;\n    let config;\n\n    if (samplingFrequencyIndex > samplingRates.length - 1) {\n        logger.error(`invalid sampling index:${samplingFrequencyIndex}`);\n        return;\n    }\n\n    // firefox: freq less than 24kHz = AAC SBR (HE-AAC)\n    if (platform.browser.FIREFOX) {\n        if (samplingFrequencyIndex >= 6) {\n            audioObjectType = 5;\n            config = new Array(4);\n            // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n            // there is a factor 2 between frame sample rate and output sample rate\n            // multiply frequency by 2 (see table below, equivalent to substract 3)\n            adtsExtensionSamplingIndex = samplingFrequencyIndex - 3;\n        } else {\n            audioObjectType = 2;\n            config = new Array(2);\n            adtsExtensionSamplingIndex = samplingFrequencyIndex;\n        }\n        // Android : always use AAC\n    } else if (platform.os.android) {\n        audioObjectType = 2;\n        config = new Array(2);\n        adtsExtensionSamplingIndex = samplingFrequencyIndex;\n    } else {\n        /*  for other browsers (Chrome/Vivaldi/Opera ...)\n\t\t\t\talways force audio type to be HE-AAC SBR, as some browsers do not support audio codec switch properly (like Chrome ...)\n\t\t\t*/\n        audioObjectType = 5;\n        config = new Array(4);\n        // if (manifest codec is HE-AAC or HE-AACv2) OR (manifest codec not specified AND frequency less than 24kHz)\n        if (samplingFrequencyIndex >= 6) {\n            // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n            // there is a factor 2 between frame sample rate and output sample rate\n            // multiply frequency by 2 (see table below, equivalent to substract 3)\n            adtsExtensionSamplingIndex = samplingFrequencyIndex - 3;\n        } else {\n            // if (manifest codec is AAC) AND (frequency less than 24kHz AND nb channel is 1) OR (manifest codec not specified and mono audio)\n            // Chrome fails to play back with low frequency AAC LC mono when initialized with HE-AAC.  This is not a problem with stereo.\n            if (channelCount === 1) {\n                audioObjectType = 2;\n                config = new Array(2);\n            }\n            adtsExtensionSamplingIndex = samplingFrequencyIndex;\n        }\n    }\n    /* \n        refer to http://wiki.multimedia.cx/index.php?title=MPEG-4_Audio#Audio_Specific_Config ISO 14496-3 (AAC).pdf \n            - Table 1.13 — Syntax of AudioSpecificConfig()\n\t\t  Audio Profile / Audio Object Type\n\t\t  0: Null\n\t\t  1: AAC Main\n\t\t  2: AAC LC (Low Complexity)\n\t\t  3: AAC SSR (Scalable Sample Rate)\n\t\t  4: AAC LTP (Long Term Prediction)\n\t\t  5: SBR (Spectral Band Replication)\n\t\t  6: AAC Scalable\n\n\t\t  Channel Configurations\n\t\t  These are the channel configurations:\n\t\t  0: Defined in AOT Specifc Config\n\t\t  1: 1 channel: front-center\n\t\t  2: 2 channels: front-left, front-right\n\t\t*/\n    // audioObjectType = profile => profile, the MPEG-4 Audio Object Type minus 1\n    config[0] = audioObjectType << 3;\n    // samplingFrequencyIndex\n    config[0] |= (samplingFrequencyIndex & 0x0e) >> 1;\n    config[1] |= (samplingFrequencyIndex & 0x01) << 7;\n    // channelConfiguration\n    config[1] |= channelCount << 3;\n    if (audioObjectType === 5) {\n        // adtsExtensionSamplingIndex\n        config[1] |= (adtsExtensionSamplingIndex & 0x0e) >> 1;\n        config[2] = (adtsExtensionSamplingIndex & 0x01) << 7;\n        // audioObjectType (force to 2, chrome is checking that object type is less than 5 ???\n        //    https://chromium.googlesource.com/chromium/src.git/+/master/media/formats/mp4/aac.cc\n        config[2] |= 2 << 2;\n        config[3] = 0;\n    }\n\n    return {\n        config: config,\n        sampleRate: samplingRates[samplingFrequencyIndex],\n        channelCount: channelCount,\n        codec: 'mp4a.40.' + audioObjectType,\n        realCodec: 'mp4a.40.' + realAudioObjectType\n    };\n};\n","/**\n * @file: created at Saturday, 9th May 2020 11:13:19 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n// The AudioSpecificConfig is explained in ISO 14496-3.\nexport interface AudioSpecificConfig {\n    audioObjectType: number;\n    sampleCount: number;\n    channelConfiguration: number;\n    sampleRate: number;\n    samplingFrequencyIndex: number;\n    // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n}\n\nexport interface AACFrame extends Omit<AudioSpecificConfig, 'channelConfiguration'> {\n    pts: number;\n    dts: number;\n    data: Uint8Array;\n    channelCount: number; // equal to channelConfiguration\n    sampleSize: number;\n}\n\nexport const AAC_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n];\n","/**\n * @file: adts.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * ADTS codec\n * Wiki Refer: https://wiki.multimedia.cx/index.php?title=ADTS\n */\nimport EventEmitter from '../util/event-emitter';\nimport { AACFrame, AAC_SAMPLING_FREQUENCIES } from './aac/aac';\n\nexport type AACCodecData = {\n    pts: number;\n    dts: number;\n    payload: Uint8Array;\n};\n\n/**\n * @extends EventEmitter\n */\nclass ADTSCodec extends EventEmitter {\n    constructor() {\n        super();\n    }\n\n    push(data: AACCodecData) {\n        let { pts, dts, payload } = data;\n        let data_byte = payload;\n        let i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            sampleCount,\n            adtsFrameDuration;\n\n        while (i + 5 < data_byte.length) {\n            // Look for the start of an ADTS header..\n            if (data_byte[i] !== 0xff || (data_byte[i + 1] & 0xf6) !== 0xf0) {\n                // If a valid header was not found,  jump one forward and attempt to\n                // find a valid ADTS header starting at the next byte\n                i++;\n                continue;\n            }\n\n            // The protection skip bit tells us if we have 2 bytes of CRC data at the\n            // end of the ADTS header\n            protectionSkipBytes = (~data_byte[i + 1] & 0x01) * 2;\n\n            // Frame length is a 13 bit integer starting 16 bits from the\n            // end of the sync sequence\n            frameLength =\n                ((data_byte[i + 3] & 0x03) << 11) | (data_byte[i + 4] << 3) | ((data_byte[i + 5] & 0xe0) >> 5);\n\n            sampleCount = ((data_byte[i + 6] & 0x03) + 1) * 1024;\n            adtsFrameDuration = (sampleCount * 90000) / AAC_SAMPLING_FREQUENCIES[(data_byte[i + 2] & 0x3c) >>> 2];\n\n            frameEnd = i + frameLength;\n\n            // If we don't have enough data to actually finish this ADTS frame, return\n            // and wait for more data\n            if (data_byte.byteLength < frameEnd) {\n                return;\n            }\n\n            let aacFrame: AACFrame = {\n                pts: pts + frameNum * adtsFrameDuration,\n                dts: dts + frameNum * adtsFrameDuration,\n                sampleCount: sampleCount,\n                audioObjectType: ((data_byte[i + 2] >>> 6) & 0x03) + 1,\n                channelCount: ((data_byte[i + 2] & 1) << 2) | ((data_byte[i + 3] & 0xc0) >>> 6),\n                sampleRate: AAC_SAMPLING_FREQUENCIES[(data_byte[i + 2] & 0x3c) >>> 2],\n                samplingFrequencyIndex: (data_byte[i + 2] & 0x3c) >>> 2,\n                // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n                sampleSize: 16,\n                data: data_byte.subarray(i + 7 + protectionSkipBytes, frameEnd)\n            };\n            // Otherwise, deliver the complete AAC frame\n            this.emit('frame', aacFrame);\n\n            // If the data_byte is empty, clear it and return\n            if (data_byte.byteLength === frameEnd) {\n                data_byte = undefined;\n\n                this.emit('done');\n                return;\n            }\n\n            frameNum++;\n\n            // Remove the finished frame from the data_byte and start the process again\n            data_byte = data_byte.subarray(frameEnd);\n        }\n    }\n}\n\nexport default ADTSCodec;\n","/**\n * @file: adts.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * ADTS(Audio Data Transport Stream) Stream.\n */\nimport { AACFrame } from '../../codec/aac/aac';\nimport getAudioConfig from '../../codec/aac/aac-config';\nimport ADTSCodec from '../../codec/adts';\nimport { StreamTypes } from '../../enum/stream-types';\nimport Stream from '../../util/stream';\nimport { PSI } from '../psi';\nimport { AACFrameVector, PESStreamEmitData } from '../types/pipeline';\n\nclass ADTSStream extends Stream {\n    private PSI: PSI;\n    private trackId?: number;\n    private codec: ADTSCodec;\n    private frames: AACFrameVector;\n\n    constructor(psi: PSI) {\n        super();\n\n        this.PSI = psi;\n        this.trackId = null;\n\n        /** @private {ADTSCodec} */\n        this.codec = new ADTSCodec();\n\n        this.codec.on('frame', (frame: AACFrame) => {\n            this.frames.push(frame);\n            this.frames.byteLength += frame.data.byteLength;\n            this.frames.trackId = this.trackId;\n        });\n\n        this._newFrames();\n    }\n\n    push(data: PESStreamEmitData) {\n        if (data.stream_type === StreamTypes.ADTS) {\n            this.trackId = data.pid;\n\n            this.codec.push({\n                dts: data.pes.DTS,\n                pts: data.pes.PTS,\n                payload: data.pes.data_byte\n            });\n        }\n    }\n\n    flush() {\n        if (this.frames.length > 0) {\n            let count = this.frames.length;\n            let firstFrame = this.frames[0];\n            let lastFrame = this.frames[count - 1];\n            let lastDuration = (lastFrame.sampleRate * lastFrame.sampleCount) / 90000;\n\n            this.frames.firstDTS = firstFrame.dts;\n            this.frames.firstPTS = firstFrame.pts;\n\n            if (count === 1) {\n                this.frames.duration = lastDuration;\n            } else {\n                this.frames.duration = lastDuration + (lastFrame.pts - firstFrame.pts);\n            }\n\n            // To prevent information mismatch leading to next pipeline decoding errors\n            // Every audio frame list assembly needs to update track meta.\n            this._updateTrackMeta(firstFrame);\n\n            this.emit('data', this.frames);\n\n            this.reset();\n            this.emit('done');\n        }\n    }\n\n    reset() {\n        this.trackId = null;\n        this._newFrames();\n    }\n\n    _newFrames() {\n        this.frames = []; // aac frames\n        this.frames.type = 'audio';\n        this.frames.byteLength = 0;\n        this.frames.duration = 0;\n        this.frames.firstDTS = 0;\n        this.frames.firstPTS = 0;\n    }\n\n    /**\n     * @param {Object} frame\n     */\n    _updateTrackMeta(frame: AACFrame) {\n        let track = this.PSI.findTrack(this.trackId);\n        let config = getAudioConfig(frame.audioObjectType, frame.samplingFrequencyIndex, frame.channelCount);\n        track.config = config.config;\n        track.sampleRate = config.sampleRate;\n        track.inputTimeScale = track.inputTimeScale || track.timescale;\n        track.timescale = config.sampleRate;\n        track.channelCount = config.channelCount;\n        track.codec = config.codec;\n        track.realCodec = config.realCodec;\n        track.isAAC = true;\n    }\n}\n\nexport default ADTSStream;\n","/**\n * @file: dv.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * Bit buffer reader like DataView.\n */\n\nfunction read(buf: ArrayBuffer | Uint8Array): DataView {\n    let byteOffset = 0;\n\n    if (ArrayBuffer.isView(buf)) {\n        byteOffset = buf.byteOffset;\n        buf = buf.buffer;\n    }\n\n    return new DataView(buf, byteOffset);\n}\n\nclass DataViewReader {\n    constructor() {}\n\n    /**\n     * Gets an unsigned 8-bit integer (unsigned byte).\n     * @param buffer\n     * @param byteOffset    The offset, in byte, from the start of the view where to read the data.\n     * @returns {number}    An unsigned 8-bit integer number.\n     */\n    readUint8(buffer: ArrayBuffer | Uint8Array, byteOffset: number): number {\n        return read(buffer).getUint8(byteOffset);\n    }\n\n    /**\n     * Gets an unsigned 16-bit integer (unsigned long).\n     * @param buffer\n     * @param byteOffset     The offset, in byte, from the start of the view where to read the data.\n     * @param littleEndian   Indicates whether the 16-bit int is stored in little- or big-endian format.\n     * @returns {number}     An unsigned 16-bit integer number.\n     */\n    readUint16(buffer: ArrayBuffer | Uint8Array, byteOffset, littleEndian: boolean = false): number {\n        return read(buffer).getUint16(byteOffset, littleEndian);\n    }\n\n    /**\n     * Gets an unsigned 32-bit integer (unsigned long).\n     * @param buffer\n     * @param byteOffset        The offset, in byte, from the start of the view where to read the data.\n     * @param littleEndian      Indicates whether the 32-bit int is stored in little- or big-endian format.\n     * @returns {number}        An unsigned 32-bit integer number.\n     */\n    readUint32(buffer: ArrayBuffer | Uint8Array, byteOffset: number, littleEndian: boolean = false): number {\n        return read(buffer).getUint32(byteOffset, littleEndian);\n    }\n}\n\nexport default DataViewReader;\n","/**\n * @file: ep3b.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * discard the emulation_prevention_three_byte\n * @param data\n */\nexport default function discardEP3B(data: Uint8Array): Uint8Array {\n    let length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength: number,\n        newData = new Uint8Array(0);\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n        } else {\n            i++;\n        }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n\n    try {\n        newData = new Uint8Array(newLength);\n    } catch (e) {\n        throw `epsb alloc mem error ${newLength}`;\n    }\n    let sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++;\n            // Remove this position index\n            emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n}\n","/**\n * @file: exp-golumb.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * exp golumb algorithm.\n * codeNum = 2leadingZeroBits – 1 + read_bits( leadingZeroBits )\n * @see https://en.wikipedia.org/wiki/Exponential-Golomb_coding\n */\n\n/**\n * read n bit.\n * @param buffer\n * @param bitOffset\n * @param length\n * @private\n */\nexport function readBit(buffer: Uint8Array, bitOffset: number = 0, length: number = 1): number {\n    let startByte = 0;\n    let startByteBitPos = 0;\n    let val = 0;\n    let bitStr = '',\n        bitVal = 0;\n\n    for (let j = bitOffset; j < bitOffset + length; j++) {\n        startByte = Math.floor(j / 8);\n        startByteBitPos = 7 - (j % 8);\n        bitVal = (buffer[startByte] >> startByteBitPos) & 0x01;\n\n        bitStr += bitVal;\n    }\n\n    val = parseInt(bitStr, 2);\n\n    return val;\n}\n\n/**\n * read 1 byte.\n * @param buffer\n * @param bitOffset\n */\nexport function readByte(buffer: Uint8Array, bitOffset: number = 0) {\n    return readBit(buffer, bitOffset, 8);\n}\n\n/**\n * Unsigned Integer Exp-Golomb Coded.\n * @param buffer\n * @param bitOffset\n */\nexport function readUEV(buffer: Uint8Array, bitOffset: number = 0) {\n    let leadingZeros = [];\n    let bitLength = buffer.byteLength * 8;\n    let readBit1 = false;\n    let startByte = 0;\n    let startByteBitPos = 0;\n    let bitVal = 0;\n    let value = '';\n\n    // 1. 计算 leadingZeros\n    for (let i = bitOffset; i < bitLength; i++) {\n        startByte = Math.floor(i / 8);\n        startByteBitPos = 7 - (i % 8);\n\n        bitVal = (buffer[startByte] >> startByteBitPos) & 0x01;\n\n        if (!readBit1) {\n            if (bitVal === 0) {\n                leadingZeros.push(0);\n            } else {\n                readBit1 = true;\n                bitOffset = i;\n                break;\n            }\n        }\n    }\n\n    let codeNumLength = leadingZeros.length + 1;\n\n    // 2. 计算有效位数值\n    for (let j = bitOffset; j < bitOffset + codeNumLength; j++) {\n        startByte = Math.floor(j / 8);\n        startByteBitPos = 7 - (j % 8);\n        bitVal = (buffer[startByte] >> startByteBitPos) & 0x01;\n\n        value += bitVal;\n    }\n\n    return {\n        bitLength: leadingZeros.length + codeNumLength,\n        value: parseInt(value, 2) - 1\n    };\n}\n\n/**\n * Signed Integer Exp-Golomb Coded.\n * @param buffer\n * @param bitOffset\n */\nexport function readSEV(buffer: Uint8Array, bitOffset: number = 0) {\n    let uev = readUEV(buffer, bitOffset);\n    let codeNum = uev.value;\n\n    let signedValue = Math.pow(-1, codeNum + 1) * Math.ceil(codeNum / 2);\n\n    return {\n        bitLength: uev.bitLength,\n        value: signedValue\n    };\n}\n\nexport default {\n    readUEV,\n    readSEV,\n    readBit,\n    readByte\n};\n","/**\n * @file: sps.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport ExpGolomb from '../../util/exp-golumb';\n\nlet bitOffset = 0;\n\nexport type SPSProps = {\n    profile_idc: number;\n    profile_compatibility: number;\n    level_idc: number;\n    sps_id: number;\n    log2_max_frame_num_minus4: number;\n    pic_order_cnt_type: number;\n    log2_max_pic_order_cnt_lsb_minus4: number;\n\n    width: number;\n    height: number;\n\n    pixelRatio: [number, number];\n    payload: Uint8Array;\n\n    video_format: number;\n\n    fps: number;\n    fixedFPS: boolean;\n};\n\n/**\n * 7.3.2.1.1.1 Scaling list syntax\n * @param scalingList\n * @param size\n */\nfunction scaling_list(scalingList, size) {\n    let lastScale = 8;\n    let nextScale = 8;\n    let delta_scale;\n\n    for (var j = 0; j < size; j++) {\n        if (nextScale != 0) {\n            delta_scale = ExpGolomb.readUEV(scalingList, bitOffset);\n            bitOffset += delta_scale.bitLength;\n\n            nextScale = (lastScale + delta_scale.value + 256) % 256;\n        }\n\n        lastScale = scalingList[j];\n    }\n}\n\n/**\n * decode (SPS)Sequence parameter set\n * @param payload\n */\nexport function decodeSPS(payload: Uint8Array): SPSProps {\n    bitOffset = 0;\n\n    let profile_idc = payload[0];\n    let profile_compatibility = payload[1];\n    let level_idc = payload[2];\n    let golombBuffer = payload.subarray(3);\n    let //separate_colour_plane_flag = 0,\n        // qpprime_y_zero_transform_bypass_flag = 0,\n        seq_scaling_matrix_present_flag = 0;\n    let lmpoclmUEV;\n    let //delta_pic_order_always_zero_flag = 0,\n        ofnrpSEV,\n        ofttbfSEV,\n        nrfipoccUEV;\n    let pixelRatio: [number, number] = [1, 1],\n        pixelScale = 1;\n    let video_format: number;\n    let fps = 0,\n        num_units_in_tick: number,\n        time_scale: number,\n        fixed_frame_rate_flag: boolean = true;\n\n    // seq_parameter_set_id\n    let spsUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += spsUEV.bitLength;\n\n    if (\n        profile_idc == 100 ||\n        profile_idc == 110 ||\n        profile_idc == 122 ||\n        profile_idc == 244 ||\n        profile_idc == 44 ||\n        profile_idc == 83 ||\n        profile_idc == 86 ||\n        profile_idc == 118 ||\n        profile_idc == 128\n    ) {\n        // chroma_format_idc\n        let chromaFIUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += chromaFIUEV.bitLength;\n\n        if (chromaFIUEV.value == 3) {\n            // separate_colour_plane_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n            bitOffset += 1;\n        }\n\n        // bit_depth_luma_minus8\n        let bitdlmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += bitdlmUEV.bitLength;\n\n        // bit_depth_chroma_minus8\n        let bitdcmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += bitdcmUEV.bitLength;\n\n        // qpprime_y_zero_transform_bypass_flag\n        // qpprime_y_zero_transform_bypass_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        // seq_scaling_matrix_present_flag\n        seq_scaling_matrix_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        if (seq_scaling_matrix_present_flag) {\n            for (let i = 0; i < (chromaFIUEV.value != 3 ? 8 : 12); i++) {\n                let seq_scaling_list_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n                bitOffset += 1;\n\n                if (seq_scaling_list_present_flag) {\n                    if (i < 6) {\n                        scaling_list(golombBuffer, 16);\n                    } else {\n                        scaling_list(golombBuffer, 64);\n                    }\n                }\n            }\n        }\n    }\n\n    // log2_max_frame_num_minus4\n    let lmfnmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += lmfnmUEV.bitLength;\n\n    // pic_order_cnt_type\n    let poctUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    let pic_order_cnt_type = poctUEV.value;\n    bitOffset += poctUEV.bitLength;\n\n    if (pic_order_cnt_type === 0) {\n        // log2_max_pic_order_cnt_lsb_minus4\n        lmpoclmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += lmpoclmUEV.bitLength;\n    } else if (pic_order_cnt_type === 1) {\n        // delta_pic_order_always_zero_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        // offset_for_non_ref_pic\n        ofnrpSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n        bitOffset += ofnrpSEV.bitLength;\n\n        // offset_for_top_to_bottom_field\n        ofttbfSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n        bitOffset += ofttbfSEV.bitLength;\n\n        // num_ref_frames_in_pic_order_cnt_cycle\n        nrfipoccUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += nrfipoccUEV.bitLength;\n\n        // let offset_for_ref_frames = [];\n        for (let i = 0, item; i < nrfipoccUEV.value; i++) {\n            item = ExpGolomb.readSEV(golombBuffer, bitOffset);\n            bitOffset += item.bitLength;\n\n            // offset_for_ref_frames.push(item);\n        }\n    }\n\n    // max_num_ref_frames\n    // 指定参考帧队列可能达到的最大长度，解码器依照这个句法元素的值开辟存储区，这个存储区用于存放已解码的参考帧，\n    // H.264 规定最多可用 16 个参考帧，本句法元素的值最大为 16。值得注意的是这个长度以帧为单位，如果在场模式下，应该相应地扩展一倍\n    let mnrfUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += mnrfUEV.bitLength;\n\n    // gaps_in_frame_num_value_allowed_flag\n    // let gaps_in_frame_num_value_allowed_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    // pic_width_in_mbs_minus1\n    let picWidthUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += picWidthUEV.bitLength;\n\n    // pic_height_in_map_units_minus1\n    let picHeightUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += picHeightUEV.bitLength;\n\n    // frame_mbs_only_flag\n    // 本句法元素等于 1 时, 表示本序列中所有图像的编码模式都是帧编码；\n    // 本句法元素等于 0 时, 表示本序列中图像的编码模式可能是帧，也可能是场或帧场自适应，某个图像具体是哪一种要由其他句法元素决定。\n    let frame_mbs_only_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    if (!frame_mbs_only_flag) {\n        // mb_adaptive_frame_field_flag (Unused, Unnecessary to read it.)\n        // ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n    }\n\n    // direct_8x8_inference_flag,  用于指明 B 片的直接 和 skip 模式下运动矢量的预测方法\n    // let direct_8x8_inference_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    // frame_cropping_flag, 用于指明解码器是否要将图像裁剪后输出，如果是的话，后面紧跟着的四个句法元素分别指出左右、上下裁剪的宽度\n    let frame_cropping_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    let cropLeft = 0,\n        cropRight = 0,\n        cropTop = 0,\n        cropBottom = 0;\n    if (frame_cropping_flag) {\n        let fcloUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += fcloUEV.bitLength;\n        cropLeft = fcloUEV.value;\n\n        let fcroUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += fcroUEV.bitLength;\n        cropRight = fcroUEV.value;\n\n        let fctoUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += fctoUEV.bitLength;\n        cropTop = fctoUEV.value;\n\n        let fcboUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += fcboUEV.bitLength;\n        cropBottom = fcboUEV.value;\n    }\n\n    // vui_parameters_present_flag\n    let vui_parameters_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    if (vui_parameters_present_flag) {\n        // Annex E, E.1.1 VUI parameters syntax\n        // VUI 用以表征视频格式等额外信息\n        // aspect_ratio, video_format\n\n        let aspect_ratio_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        if (aspect_ratio_info_present_flag) {\n            const aspectRatioIdc = ExpGolomb.readByte(golombBuffer, bitOffset);\n            bitOffset += 8;\n\n            switch (aspectRatioIdc) {\n                case 1:\n                    pixelRatio = [1, 1];\n                    break;\n                case 2:\n                    pixelRatio = [12, 11];\n                    break;\n                case 3:\n                    pixelRatio = [10, 11];\n                    break;\n                case 4:\n                    pixelRatio = [16, 11];\n                    break;\n                case 5:\n                    pixelRatio = [40, 33];\n                    break;\n                case 6:\n                    pixelRatio = [24, 11];\n                    break;\n                case 7:\n                    pixelRatio = [20, 11];\n                    break;\n                case 8:\n                    pixelRatio = [32, 11];\n                    break;\n                case 9:\n                    pixelRatio = [80, 33];\n                    break;\n                case 10:\n                    pixelRatio = [18, 11];\n                    break;\n                case 11:\n                    pixelRatio = [15, 11];\n                    break;\n                case 12:\n                    pixelRatio = [64, 33];\n                    break;\n                case 13:\n                    pixelRatio = [160, 99];\n                    break;\n                case 14:\n                    pixelRatio = [4, 3];\n                    break;\n                case 15:\n                    pixelRatio = [3, 2];\n                    break;\n                case 16:\n                    pixelRatio = [2, 1];\n                    break;\n                case 255: {\n                    let width0 = ExpGolomb.readByte(golombBuffer, bitOffset);\n                    bitOffset += 8;\n                    let width1 = ExpGolomb.readByte(golombBuffer, bitOffset);\n                    bitOffset += 8;\n                    let height0 = ExpGolomb.readByte(golombBuffer, bitOffset);\n                    bitOffset += 8;\n                    let height1 = ExpGolomb.readByte(golombBuffer, bitOffset);\n                    bitOffset += 8;\n                    pixelRatio = [(width0 << 8) | width1, (height0 << 8) | height1];\n                    break;\n                }\n            }\n\n            if (pixelRatio) {\n                pixelScale = pixelRatio[0] / pixelRatio[1];\n            }\n\n            if (aspectRatioIdc === 255) {\n                // sar_width\n                bitOffset += 16;\n                // sar_height\n                bitOffset += 16;\n            }\n        }\n\n        let overscan_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        if (overscan_info_present_flag) {\n            bitOffset += 1;\n            // overscan_appropriate_flag;\n        }\n\n        let video_signal_type_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        if (video_signal_type_present_flag) {\n            /*\n                Table E-2 – Meaning of video_format\n                video_format    Meaning\n                0               Component\n                1               PAL\n                2               NTSC\n                3               SECAM\n                4               MAC\n                5               Unspecified video format\n                6               Reserved\n                7               Reserved\n             */\n            video_format = ExpGolomb.readBit(golombBuffer, bitOffset, 3);\n            bitOffset += 3;\n\n            // switch (video_format) {\n            // }\n\n            // let video_full_range_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n            bitOffset += 1;\n\n            let colour_description_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n            bitOffset += 1;\n\n            if (colour_description_present_flag) {\n                // colour_primaries            u(8)\n                // transfer_characteristics    u(8)\n                // matrix_coefficients         u(8)\n                bitOffset += 24;\n            }\n        }\n\n        let chroma_loc_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        if (chroma_loc_info_present_flag) {\n            let chroma_sample_loc_type_top_field = ExpGolomb.readUEV(golombBuffer, bitOffset);\n            bitOffset += chroma_sample_loc_type_top_field.bitLength;\n\n            let chroma_sample_loc_type_bottom_field = ExpGolomb.readUEV(golombBuffer, bitOffset);\n            bitOffset += chroma_sample_loc_type_bottom_field.bitLength;\n        }\n\n        let timing_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n        bitOffset += 1;\n\n        if (timing_info_present_flag) {\n            num_units_in_tick = ExpGolomb.readBit(golombBuffer, bitOffset, 32);\n            bitOffset += 32;\n\n            time_scale = ExpGolomb.readBit(golombBuffer, bitOffset, 32);\n            bitOffset += 32;\n\n            fixed_frame_rate_flag = !!ExpGolomb.readBit(golombBuffer, bitOffset);\n            bitOffset += 1;\n\n            fps = time_scale / (num_units_in_tick * 2);\n        }\n\n        // There is left VUI other's parameters to be decoded ...\n        // For now, it is useless, so don't pass them.\n    }\n\n    // let FrameHeightInMbs = (2 - frame_mbs_only_flag) * (picHeightUEV.value + 1);\n    // PicSizeInMapUnits = PicWidthInMbs * PicHeightInMapUnits\n\n    return {\n        payload: golombBuffer,\n\n        profile_idc,\n        profile_compatibility,\n        level_idc,\n        sps_id: spsUEV.value, // ue(v)\n        log2_max_frame_num_minus4: poctUEV.value, // ue(v)\n        pic_order_cnt_type, // ue(v)\n        log2_max_pic_order_cnt_lsb_minus4: lmpoclmUEV ? lmpoclmUEV.value : 0, // ue(v)\n\n        width: Math.ceil(((picWidthUEV.value + 1) * 16 - cropLeft * 2 - cropRight * 2) * pixelScale), // PicWidthInSamplesL = PicWidthInMbs * 16\n        height: (2 - frame_mbs_only_flag) * (picHeightUEV.value + 1) * 16 - cropTop * 2 - cropBottom * 2,\n\n        pixelRatio,\n        video_format,\n\n        fps,\n        fixedFPS: fixed_frame_rate_flag\n    };\n}\n","/**\n * @file: pps.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport ExpGolomb from '../../util/exp-golumb';\n\nexport type PPSProps = {\n    sliceGroupNum: number;\n};\n\n/**\n * decode (PPS)Picture parameter set\n * @param payload\n */\nexport function decodePPS(payload: Uint8Array): PPSProps {\n    let bitOffset = 0;\n\n    let golombBuffer = payload;\n    let //slice_group_change_direction_flag = 0,\n        sliceGroupIds = [];\n    let sgcdfUEV, picSizeUEV;\n    let i = 0;\n\n    // pic_parameter_set_id\n    let ppsUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += ppsUEV.bitLength;\n\n    // seq_parameter_set_id\n    let spsUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += spsUEV.bitLength;\n\n    // entropy_coding_mode_flag\n    // 0: Exp-Golomb coded, see subclause 9.1 or CAVLC, see subclause 9.2\n    // 1: CABAC, see subclause 9.3\n    // let entropy_coding_mode_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    // bottom_field_pic_order_in_frame_present_flag\n    // let bottom_field_pic_order_in_frame_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    // num_slice_groups_minus1,\n    let sliceGroupUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += sliceGroupUEV.bitLength;\n\n    if (sliceGroupUEV.value > 0) {\n        // slice_group_map_type\n        let sgmtUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n        bitOffset += sgmtUEV.bitLength;\n\n        let iGroup = 0,\n            itemUev;\n\n        switch (sgmtUEV.value) {\n            case 0:\n                for (iGroup = 0; iGroup <= sgmtUEV.value; iGroup++) {\n                    // run_length_minus1\n                    itemUev = ExpGolomb.readUEV(golombBuffer, bitOffset);\n                    bitOffset += itemUev.bitLength;\n                }\n                break;\n            case 2:\n                for (iGroup = 0; iGroup <= sgmtUEV.value; iGroup++) {\n                    // top_left\n                    itemUev = ExpGolomb.readUEV(golombBuffer, bitOffset);\n                    bitOffset += itemUev.bitLength;\n                    // bottom_right\n                    itemUev = ExpGolomb.readUEV(golombBuffer, bitOffset);\n                    bitOffset += itemUev.bitLength;\n                }\n                break;\n            case 3:\n            case 4:\n            case 5:\n                // slice_group_change_direction_flag\n                // slice_group_change_direction_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n                bitOffset += 1;\n                // slice_group_change_rate_minus1\n                sgcdfUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n                bitOffset += sgcdfUEV.bitLength;\n                break;\n            case 6:\n                {\n                    // pic_size_in_map_units_minus1\n                    picSizeUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n                    bitOffset += picSizeUEV.bitLength;\n\n                    let length = Math.ceil(Math.log2(sliceGroupUEV.value + 1));\n                    for (i = 0; i <= picSizeUEV.value; i++) {\n                        // pic_size_in_map_units_minus1\n                        sliceGroupIds.push(ExpGolomb.readBit(golombBuffer, bitOffset, length));\n                        bitOffset += length;\n                    }\n                }\n                break;\n        }\n    }\n\n    // num_ref_idx_l0_default_active_minus1\n    let nril0dcmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += nril0dcmUEV.bitLength;\n\n    // num_ref_idx_l1_default_active_minus1\n    let nril1dcmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\n    bitOffset += nril1dcmUEV.bitLength;\n\n    // weighted_pred_flag\n    // let weighted_pred_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    // weighted_bipred_idc\n    // let weighted_bipred_idc = ExpGolomb.readBit(golombBuffer, bitOffset, 2);\n    bitOffset += 1;\n\n    // pic_init_qp_minus26\n    let piqpSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n    bitOffset += piqpSEV.bitLength;\n    // pic_init_qs_minus26\n    let piqsSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n    bitOffset += piqsSEV.bitLength;\n    // chroma_qp_index_offset\n    let cqioSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\n    bitOffset += cqioSEV.bitLength;\n\n    // let deblocking_filter_control_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n    // let constrained_intra_pred_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n    // let redundant_pic_cnt_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\n    bitOffset += 1;\n\n    // if( more_rbsp_data( ) ) {\n    //     // Unused data...\n    // }\n\n    return {\n        sliceGroupNum: sliceGroupUEV.value + 1\n    };\n}\n","/**\n * @file: pps.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nexport type SEIProps = {};\n\n/**\n * decode (SEI)Supplemental enhancement information\n * @param payload\n */\nexport function decodeSEI(payload: Uint8Array): SEIProps {\n    payload;\n    return {};\n}\n","/**\n * @file: nalu.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport DataViewReader from '../../util/dv';\nimport NaluTypes from '../../enum/nalu-types';\nimport discardEP3B from './ep3b';\nimport { decodeSPS, SPSProps } from './sps';\nimport { decodePPS, PPSProps } from './pps';\nimport { decodeSEI, SEIProps } from './sei';\n\n/**\n * decode (AUD)Access unit delimiter\n * @param payload\n * @private\n */\nfunction _decodeAUD(payload: Uint8Array): number {\n    // var primary_pic_type_table = {\n    //     0x084, // 2, 7\n    //     0x0a5, // 0, 2, 5, 7\n    //     0x0e7, // 0, 1, 2, 5, 6, 7\n    //     0x210, // 4, 9\n    //     0x318, // 3, 4, 8, 9\n    //     0x294, // 2, 4, 7, 9\n    //     0x3bd, // 0, 2, 3, 4, 5, 7, 8, 9\n    //     0x3ff, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9\n    // }\n\n    return payload[0] >> 5;\n}\n\nexport default class NALU extends DataViewReader {\n    forbidden_zero_bit: number;\n    ref_idc: number;\n    unit_type: number;\n    data: Uint8Array;\n    rawData: Uint8Array;\n    sps: SPSProps;\n    pps: PPSProps;\n    sei: SEIProps;\n    primary_pic_type: number;\n    pts?: number;\n    dts?: number;\n\n    constructor(buffer: Uint8Array) {\n        super();\n\n        this.forbidden_zero_bit = buffer[0] >> 7;\n\n        // nalu priority.\n        this.ref_idc = (buffer[0] >> 5) & 0x03;\n\n        // specifies the type of RBSP data structure. see in mux-nalu-types.js\n        this.unit_type = buffer[0] & 0x1f;\n\n        this.data = discardEP3B(buffer.subarray(1));\n        this.rawData = buffer;\n\n        switch (this.unit_type) {\n            case NaluTypes.NON_IDR_SLICE:\n                break;\n            case NaluTypes.DPA_SLICE:\n            case NaluTypes.DPB_SLICE:\n            case NaluTypes.DPC_SLICE:\n                // TODO decode A/B/C Partition Slice.\n                break;\n            case NaluTypes.IDR_SLICE:\n                // this.data = decodeSlice(this.data).data;\n                break;\n            case NaluTypes.SPS:\n                this.sps = decodeSPS(this.data);\n                break;\n            case NaluTypes.PPS:\n                this.pps = decodePPS(this.data);\n                break;\n            case NaluTypes.SEI:\n                this.sei = decodeSEI(this.data);\n                break;\n            case NaluTypes.AUD:\n                this.primary_pic_type = _decodeAUD(this.data);\n                break;\n        }\n    }\n}\n","/**\n * @file: avc.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * h.264/AVC codec\n */\nimport CacheBuffer from '../util/cache-buffer';\nimport EventEmitter from '../util/event-emitter';\nimport logger from '../util/logger';\nimport NALU from './avc/nalu';\n\nexport type AVCCodecData = {\n    pts: number;\n    dts: number;\n    naluSizeLength?: number;\n    payload: Uint8Array;\n};\n\nexport interface AVCDecoderConfigurationRecord {\n    version: number;\n    profile: number;\n    profileCompatibility: number;\n    level: number;\n    naluSizeLength: number;\n    spsNalus: Uint8Array[];\n    ppsNalus: Uint8Array[];\n}\n\ntype ParsePesState = 0 | 1 | 2 | 3;\n\nexport class AVCCodec extends EventEmitter {\n    private lastState: ParsePesState = null;\n    private lastNALu: NALU = null;\n    private lastNALuState: ParsePesState = null;\n\n    private spitNalu_(bytes: Uint8Array, pts: number, dts: number) {\n        let nalu: NALU = new NALU(bytes);\n\n        nalu.pts = pts;\n        nalu.dts = dts;\n\n        this.lastNALu = nalu;\n        this.emit('nalu', nalu);\n    }\n\n    push(data: AVCCodecData) {\n        const { lastState, lastNALuState } = this;\n        let i = 0,\n            lastNALuOffset = -1,\n            { pts, dts, payload, naluSizeLength } = data;\n\n        if (!naluSizeLength) {\n            // Start parse Annex-B Byte stream format\n            let j = payload.byteLength - 1;\n            let dropZerosLength = 0;\n\n            // Collect tailing zeros.\n            // end with 0x000000 and more...\n            do {\n                if (payload[j] === 0x00) {\n                    dropZerosLength++;\n                } else {\n                    break;\n                }\n\n                j--;\n            } while (j > 0);\n\n            if (dropZerosLength >= 3) {\n                // drop tailing zeros.\n                payload = payload.subarray(0, j + 1);\n            }\n\n            const len = payload.length;\n\n            let state: ParsePesState = 0;\n            do {\n                let value = payload[i++];\n\n                // loop optimization.\n                if (state === 0) {\n                    state = value ? 0 : 1;\n                    continue;\n                } else if (state === 1) {\n                    state = value ? 0 : 2;\n                    continue;\n                }\n\n                // value will be 2 or 3\n                if (!value) {\n                    state = 3;\n                } else if (value === 1) {\n                    if (lastNALuOffset >= 0) {\n                        this.lastNALuState = state;\n                        this.spitNalu_(payload.subarray(lastNALuOffset, i - 1 - state), pts, dts);\n                    } else {\n                        // naluOffset is undefined => this is the first start code found in this PES packet\n                        // first check if start code delimiter is overlapping between 2 PES packets,\n                        // ie it started in last packet (lastState not zero)\n                        // and ended at the beginning of this PES packet (i <= 4 - lastState)\n                        const lastUnit = this.lastNALu;\n                        if (lastUnit) {\n                            if (lastState && i <= 4 - lastState) {\n                                // start delimiter overlapping between PES packets\n                                // strip start delimiter bytes from the end of last NAL unit\n                                // check if lastUnit had a state different from zero\n                                if (lastNALuState) {\n                                    // strip last bytes\n                                    lastUnit.rawData = lastUnit.rawData.subarray(\n                                        0,\n                                        lastUnit.rawData.byteLength - lastState\n                                    );\n                                }\n                            }\n\n                            // If NAL units are not starting right at the\n                            // beginning of the PES packet, push preceding data\n                            // into previous NAL unit.\n                            let overflow = i - state - 1;\n                            if (overflow > 0) {\n                                logger.log(`overflow NALU found: ${overflow}/${pts}/${dts}`);\n                                let cb = new CacheBuffer();\n\n                                cb.append(lastUnit.rawData);\n                                cb.append(payload.subarray(0, overflow));\n                                let bytes = cb.toNewBytes();\n                                cb.clear(); // gc\n\n                                lastUnit.rawData = bytes;\n                            }\n                        }\n                    }\n\n                    // reset state & record last unit start byte offset.\n                    if (i < len) {\n                        // console.log(`'find NALU @ offset: ${i}`);\n                        lastNALuOffset = i;\n                        state = 0;\n                    }\n                } else {\n                    state = 0;\n                }\n            } while (i < len);\n\n            if (lastNALuOffset >= 0 && state >= 0) {\n                this.lastNALuState = state;\n                this.spitNalu_(payload.subarray(lastNALuOffset, len), pts, dts);\n            }\n\n            this.lastState = state;\n        } else {\n            let startPos = 0,\n                size = 0,\n                endPos = 0,\n                byteLength = payload.length;\n            do {\n                size = 0;\n                for (let k = 0; k < naluSizeLength; k++) {\n                    size = size | (payload[startPos + k] << ((naluSizeLength - k - 1) * 8));\n                }\n                // size = (data_byte[i] << 24) | (data_byte[i + 1] << 16) | (data_byte[i + 2] << 8) | data_byte[i + 3];\n                startPos += naluSizeLength;\n                endPos = startPos + size;\n                if (endPos > byteLength) {\n                    endPos = byteLength;\n                }\n\n                this.spitNalu_(payload.subarray(startPos, endPos), pts, dts);\n                startPos = endPos;\n            } while (startPos < byteLength);\n        }\n\n        this.emit('done');\n    }\n\n    reset() {\n        this.lastState = null;\n        this.lastNALu = null;\n        this.lastNALuState = null;\n    }\n}\n","/**\n * @file: avc-config.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport { SPSProps } from './sps';\n// import { PPSProps } from './pps';\n\n/**\n * AVC Config Helper\n * Accord sps/pps, generate mimeType info.\n */\nexport default (sps: SPSProps /*, pps?: PPSProps*/) => {\n    let profile_idc = sps.profile_idc;\n    let profile_compatibility = sps.profile_compatibility;\n    let level_idc = sps.level_idc;\n    let codecString = 'avc1.';\n\n    let arr = [profile_idc, profile_compatibility, level_idc];\n    for (let j = 0; j < arr.length; j++) {\n        let h = arr[j].toString(16);\n        if (h.length < 2) {\n            h = '0' + h;\n        }\n        codecString += h;\n    }\n\n    return {\n        codec: codecString\n    };\n};\n","/**\n * @file: avc.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * H.264/AVC/HEVC Stream.\n */\nimport { AVCCodec, AVCCodecData } from '../../codec/avc';\nimport getAVCConfig from '../../codec/avc/avc-config';\nimport NALU from '../../codec/avc/nalu';\nimport NaluTypes from '../../enum/nalu-types';\nimport { StreamTypes } from '../../enum/stream-types';\nimport logger from '../../util/logger';\nimport Stream from '../../util/stream';\nimport { PSI } from '../psi';\nimport { AVCFrame, GOP, GOPVector, PESStreamEmitData } from '../types/pipeline';\n\nclass H264Stream extends Stream {\n    private PSI: PSI;\n    private trackId?: number;\n    private currentFrame: AVCFrame;\n    private prevFrame: AVCFrame;\n    private codec: AVCCodec;\n    private gop: GOP;\n    private gops: GOPVector;\n\n    constructor(psi: PSI) {\n        super();\n\n        this.PSI = psi;\n        this.trackId = null;\n\n        /** @private {Array} */\n        this.currentFrame = []; // a group of nalu\n\n        /** @private {AVCCodec} */\n        this.codec = new AVCCodec();\n\n        this._newGop();\n        this._newGops();\n\n        this.codec.on('nalu', (nalu: NALU) => {\n            if (nalu.unit_type === NaluTypes.SPS) {\n                let track = this.PSI.findTrack(this.trackId);\n                let config = getAVCConfig(nalu.sps);\n\n                // write sps info to video track.\n                track.codec = config.codec;\n                track.width = nalu.sps.width;\n                track.height = nalu.sps.height;\n                track.profileIdc = nalu.sps.profile_idc;\n                track.profileCompatibility = nalu.sps.profile_compatibility;\n                track.levelIdc = nalu.sps.level_idc;\n                track.pixelRatio = nalu.sps.pixelRatio;\n                track.sps = [nalu.rawData];\n            } else if (nalu.unit_type === NaluTypes.PPS) {\n                let track = this.PSI.findTrack(this.trackId);\n                track.pps = [nalu.rawData];\n            }\n\n            this._grouping(nalu);\n        });\n    }\n\n    /**\n     * Push a complete pes\n     * @param data\n     */\n    push(data: PESStreamEmitData) {\n        const { stream_type, pes, pid } = data;\n        if (stream_type === StreamTypes.H264 || stream_type === StreamTypes.HEVC) {\n            this.trackId = pid;\n\n            let rawData: AVCCodecData = {\n                pts: pes.PTS,\n                dts: pes.DTS,\n                payload: pes.data_byte\n            };\n\n            this.codec.push(rawData);\n        }\n    }\n\n    flush() {\n        // Push last frame into gop.\n        if (this.currentFrame.length > 0) {\n            // If the last frame has valid duration, use the duration of the previous frame\n            if (!this.currentFrame.duration || this.currentFrame.duration <= 0) {\n                this.currentFrame.duration = this.prevFrame.duration || 0;\n            }\n\n            this._pushFrameIntoGop();\n            this.currentFrame = [];\n        }\n\n        // Push last gop.\n        if (this.gop.length > 0) {\n            this._pushGopIntoGroup();\n        }\n    }\n\n    reset() {\n        this.codec.reset();\n\n        this.currentFrame = [];\n        this._newGop();\n        this._newGops();\n    }\n\n    /**\n     * Group nalu into frame & gop.\n     * @param currentNal\n     * @private\n     */\n    _grouping(currentNal) {\n        if (currentNal.unit_type === NaluTypes.AUD) {\n            if (this.currentFrame.length > 0) {\n                this.currentFrame.duration = currentNal.dts - this.currentFrame.dts;\n\n                if (this.gop.length > 0 && this.currentFrame.keyframe) {\n                    this.gop.trackId = this.trackId;\n\n                    this._pushGopIntoGroup();\n                }\n\n                // the gop should commence with a key frame,\n                // or the frame will be dropped until finding one that contains a key frame.\n                if (this.currentFrame.keyframe || this.gop.length > 0) {\n                    this._pushFrameIntoGop();\n                } else {\n                    logger.warn(`h264 codec drop frame`);\n                }\n            }\n\n            this.prevFrame = this.currentFrame;\n\n            // end a frame.\n            this.currentFrame = [];\n            this.currentFrame.keyframe = false;\n            this.currentFrame.byteLength = 0;\n            this.currentFrame.naluCount = 0;\n            this.currentFrame.pts = currentNal.pts;\n            this.currentFrame.dts = currentNal.dts;\n        } else {\n            if (currentNal.unit_type === NaluTypes.IDR_SLICE) {\n                this.currentFrame.keyframe = true;\n            }\n\n            this.currentFrame.byteLength += currentNal.rawData.byteLength;\n            this.currentFrame.naluCount++;\n            this.currentFrame.push(currentNal);\n        }\n\n        this.currentFrame.duration = currentNal.dts - this.currentFrame.dts;\n    }\n\n    _newGop() {\n        this.gop = []; // a group of idr-start-frame sequence\n\n        this.gop.duration = 0;\n        this.gop.naluCount = 0;\n        this.gop.byteLength = 0;\n    }\n\n    _pushFrameIntoGop() {\n        // Gop\n        this.gop.push(this.currentFrame);\n        this.gop.duration += this.currentFrame.duration;\n        this.gop.byteLength += this.currentFrame.byteLength;\n        this.gop.naluCount += this.currentFrame.naluCount;\n    }\n\n    _newGops() {\n        this.gops = []; // a group of gop\n        this.gops.type = 'video';\n        this.gops.duration = 0;\n        this.gops.naluCount = 0;\n        this.gops.byteLength = 0;\n        this.gops.frameLength = 0;\n        this.gops.firstDTS = 0;\n    }\n\n    _pushGopIntoGroup() {\n        let firstFrame = this.gop[0];\n        // GOPs\n        this.gops.trackId = this.trackId;\n        this.gops.duration += this.gop.duration;\n        this.gops.byteLength += this.gop.byteLength;\n        this.gops.naluCount += this.gop.naluCount;\n        this.gops.frameLength += this.gop.length;\n        this.gops.firstDTS = firstFrame.dts;\n        this.gops.firstPTS = firstFrame.pts;\n\n        this.gops.push(this.gop);\n\n        this.emit('data', this.gops);\n\n        this._newGop();\n        this._newGops();\n\n        this.emit('done');\n    }\n}\n\nexport default H264Stream;\n","/**\n * @file: elementary.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * Elementary Stream.\n * @summary An elementary stream (ES) as defined by the MPEG communication protocol is usually the output of an audio or video encoder.\n *      ES contains only one kind of data, e.g. audio, video or closed caption.\n * @description  https://en.wikipedia.org/wiki/Elementary_stream\n */\nimport { StreamTypes } from '../../enum/stream-types';\nimport { Context, GlobalOptions } from '../../types/globals';\nimport { isNumber } from '../../util/is';\nimport logger from '../../util/logger';\nimport Stream from '../../util/stream';\nimport { PSI } from '../psi';\nimport { PESStreamEmitData, GOPVector } from '../types/pipeline';\nimport ADTSStream from './adts';\nimport AVCStream from './avc';\n\nclass ElementaryStream extends Stream {\n    private context: Context;\n    private PSI: PSI;\n    private options: GlobalOptions;\n    private tracks: Array<GOPVector>;\n    private adtsStream: ADTSStream;\n    private avcStream: AVCStream;\n    private streams: [ADTSStream, AVCStream];\n\n    constructor(ctx: Context, psi: PSI, options: GlobalOptions = {}) {\n        super();\n\n        this.context = ctx;\n        this.PSI = psi;\n        this.options = options;\n        this.tracks = [];\n        this.adtsStream = new ADTSStream(psi);\n        this.avcStream = new AVCStream(psi);\n        this.streams = [this.adtsStream, this.avcStream];\n\n        if (options.decodeCodec) {\n            this.avcStream.on('data', (data: GOPVector) => {\n                let stubTime = options.config.stubTime;\n\n                if (isNumber(stubTime)) {\n                    let end = (data.firstPTS + data.duration) / 90000;\n                    if (end < stubTime) {\n                        logger.warn(`drop avc gop, start/end/stubTime(${data.firstPTS}/${end}/${stubTime})`);\n                        return;\n                    }\n                }\n\n                this.tracks.push(data);\n                this.emit('data', this.tracks);\n                this.tracks = [];\n                this.adtsStream.flush();\n            });\n\n            this.adtsStream.on('data', (data) => {\n                let stubTime = options.config.stubTime;\n\n                if (isNumber(stubTime)) {\n                    let end = (data.firstPTS + data.duration) / 90000;\n                    if (end < stubTime) {\n                        logger.warn(`drop adts, start/end/stubTime(${data.firstPTS}/${end}/${stubTime})`);\n                        return;\n                    }\n                }\n\n                this.tracks.push(data);\n                this.emit('data', this.tracks);\n                this.tracks = [];\n            });\n        }\n    }\n\n    /**\n     * Push a complete pes\n     * @param data\n     */\n    push(data: PESStreamEmitData): void {\n        const { options, adtsStream, avcStream } = this;\n        let { stream_type } = data;\n\n        if (options.decodeCodec) {\n            switch (stream_type) {\n                case StreamTypes.H264:\n                case StreamTypes.HEVC:\n                    avcStream.push(data);\n                    break;\n                case StreamTypes.ADTS:\n                    adtsStream.push(data);\n                    break;\n                default:\n                    logger.warn(`ts elementary encounter unknown stream type ${stream_type}`);\n            }\n        } else {\n            this.emit('data', data);\n        }\n    }\n\n    flush(): void {\n        let { streams, tracks } = this;\n        for (let i = 0; i < this.streams.length; i++) {\n            let stream = streams[i];\n\n            stream.flush();\n        }\n\n        if (tracks.length > 0) {\n            this.emit('data', tracks);\n        }\n\n        this.emit('done');\n\n        tracks.splice(0, tracks.length);\n    }\n\n    reset(): void {\n        this.tracks = [];\n\n        for (let i = 0; i < this.streams.length; i++) {\n            let stream = this.streams[i];\n\n            stream.reset();\n        }\n\n        this.emit('reset');\n    }\n}\n\nexport default ElementaryStream;\n","/**\n * @file: pes.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * Structure for Pes.\n */\nexport class Pes {\n    // private start_code_prefix: number;\n    // stream_id: number;\n    // packet_length: number;\n    // data_alignment_indicator: number;\n    // copyright: number;\n    // ESCR_flag: number;\n    // ES_rate_flag: number;\n    // trick_mode_flag: number;\n    // additional_copy_info_flag: number;\n    // CRC_flag: number;\n    // extension_flag: number;\n    PTS: number;\n    DTS: number;\n    data_byte: Uint8Array;\n\n    constructor(buffer: Uint8Array) {\n        // The packet_start_code_prefix is a 24-bit code.\n        // this.start_code_prefix = (buffer[0] << 16) | (buffer[1] << 8) | buffer[2];\n\n        // In Transport Streams,\n        // the stream_id may be set to any valid value which correctly describes the elementary stream type.\n        // the elementary stream type is specified in the PSI(Program Specific Information).\n        // this.stream_id = buffer[3];\n\n        // A 16-bit field specifying the number of bytes in the PES packet.\n        // this.packet_length = (buffer[4] << 8) | buffer[5];\n\n        // this.data_alignment_indicator = buffer[6] & 0x04;\n\n        // this.copyright = buffer[6] & 0x02;\n\n        // PTS (presentation time stamp)\n        // DTS (decoding time stamp)\n        let PTS_DTS_flags = buffer[7] >> 6;\n\n        // ESCR (Elementary Stream Clock Reference system):\n        // A time stamp in the PES Stream from which decoders of PES streams may derive timing.\n        // this.ESCR_flag = buffer[7] & 0x20;\n\n        // this.ES_rate_flag = buffer[7] & 0x10;\n\n        // this.trick_mode_flag = buffer[7] & 0x08;\n\n        // this.additional_copy_info_flag = buffer[7] & 0x04;\n\n        // this.CRC_flag = buffer[7] & 0x02;\n\n        // this.extension_flag = buffer[7] & 0x01;\n\n        let header_data_length = buffer[8];\n\n        this.PTS = 0;\n        if ((PTS_DTS_flags & 0x02) == 0x02) {\n            this.PTS = this.calcTimestamp_(buffer, 9);\n        }\n\n        // if there is no dts, let DTS=PTS\n        // See Annex D - D.0.2 Audio and Video Presentation Synchronization\n        this.DTS = this.PTS;\n\n        if ((PTS_DTS_flags & 0x01) == 0x01) {\n            this.DTS = this.calcTimestamp_(buffer, 14);\n        }\n\n        // if (this.ESCR_flag === 1) {\n        // }\n        //\n        // if (this.ES_rate_flag === 1) {\n        // }\n        //\n        //\n        // if (this.trick_mode_flag === 1) {\n        //\n        // }\n        //\n        // if (this.ESCR_flag === 1) {\n        // }\n\n        this.data_byte = buffer.subarray(9 + header_data_length);\n\n        // this.isStartPes = (buffer[0] << 16 | buffer[1] << 8 | buffer[2]) & 0xffffff === 0x000001;\n    }\n\n    /**\n     * @param buffer\n     * @param start\n     */\n    private calcTimestamp_(buffer: Uint8Array, start: number): number {\n        // PTS / DTS is 33 bit\n        return (\n            // JS Bitwise operators treat their operands as a sequence of 32 bits,\n            // We cannot use bitwise operator in JS beyond 32bits\n            (buffer[start] & 0x0e) * 536870912 + // Math.pow(2, 29) === 536870912\n            (buffer[start + 1] << 22) +\n            ((buffer[start + 2] >> 1) << 15) +\n            (buffer[start + 3] << 7) +\n            (buffer[start + 4] >> 1)\n        );\n    }\n\n    // valid(): boolean {\n    //     let start_code_prefix = this.start_code_prefix;\n\n    //     return (\n    //         start_code_prefix[0] === 0x00 &&\n    //         start_code_prefix[1] === 0x00 &&\n    //         start_code_prefix[2] === 0x01\n    //     );\n    // }\n}\n","/**\n * @file: pes.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * Packetized Elementary Stream.\n */\nimport { Context } from '../../types/globals';\nimport CacheBuffer from '../../util/cache-buffer';\nimport Stream from '../../util/stream';\nimport { PSI } from '../psi';\nimport { Packet } from '../structs/packet';\nimport { Pes } from '../structs/pes';\nimport { PESStreamEmitData } from '../types/pipeline';\n\nclass PesStream extends Stream {\n    private context: Context;\n    private PSI: PSI;\n    private PID?: number;\n    private cache_buffer: CacheBuffer;\n\n    constructor(ctx: Context, psi: PSI) {\n        super();\n\n        this.context = ctx;\n        this.PSI = psi;\n        this.PID = null;\n        this.cache_buffer = new CacheBuffer();\n    }\n\n    /**\n     * @param packet\n     */\n    push(packet: Packet) {\n        const self = this;\n\n        // PES PID\n        // 0x20 - 0xff is reserved for dvb etc. (https://en.wikipedia.org/wiki/Program-specific_information#PSI_labels)\n        // but this is not strict restriction.\n        if (packet.PID > 0x001f && packet.PID < 0x1fff) {\n            if (this.PSI.currentProgramPID == -1) {\n                self._pushPacket(packet);\n            } else if (this.PSI.currentProgramPID !== packet.PID) {\n                if (packet.payload_unit_start_indicator === 1) {\n                    self._assembleOnePES();\n                }\n\n                self._pushPacket(packet);\n            }\n        }\n    }\n\n    flush() {\n        const self = this;\n\n        // 组装最后一个PES\n        self._assembleOnePES();\n\n        self.emit('done');\n    }\n\n    reset() {\n        this._clearCached();\n\n        this.emit('reset');\n    }\n\n    _clearCached() {\n        this.PID = null;\n        this.cache_buffer.clear();\n    }\n\n    _pushPacket(p) {\n        let empty = this.cache_buffer.empty;\n\n        // Make first packet in cache is start unit.\n        if (empty && p.payload_unit_start_indicator === 0) {\n            return;\n        }\n\n        if (empty) {\n            this.PID = p.PID;\n        }\n\n        this.cache_buffer.append(p.payload);\n    }\n\n    _assembleOnePES() {\n        const self = this;\n\n        if (!this.cache_buffer.empty) {\n            let bytes;\n\n            try {\n                bytes = this.cache_buffer.toNewBytes();\n            } catch (e) {\n                throw `pes alloc mem err ${this.cache_buffer.byteLength}`;\n            }\n\n            let pesData = new Pes(bytes);\n            let track = this.PSI.findTrack(this.PID);\n\n            // console.log(`stream_id: ${pesData.stream_id}, PTS: ${pesData.PTS}, DTS: ${pesData.DTS}`);\n\n            if (track) {\n                let data: PESStreamEmitData = {\n                    pid: track.id,\n                    stream_type: track.stream_type,\n                    // pcr_pid: track.pcr_pid,\n                    pes: pesData\n                };\n                // Assemble one pes packet, emit it to next stream.\n                self.emit('data', data);\n            }\n\n            self._clearCached();\n        }\n    }\n}\n\nexport default PesStream;\n","/**\n * @file: packet.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nconst SYNC_BYTE = 0x47; // The sync_byte is a fixed 8-bit field whose value is '0100 0111' (0x47).\n\n/**\n * packet structure.\n */\nexport class Packet {\n    sync_byte: number;\n    // transport_error_indicator: number;\n    payload_unit_start_indicator: number;\n    // transport_priority: number;\n    PID: number;\n    // tsc: number;\n    afc: number;\n    // continuity_counter: number;\n    has_payload: number;\n    has_adaptation: number;\n    // is_discontinuity: boolean;\n    payload: Uint8Array;\n\n    /**\n     * @param buffer\n     */\n    constructor(buffer: Uint8Array) {\n        this.sync_byte = buffer[0];\n\n        // this.transport_error_indicator = buffer[1] >> 7;\n\n        // Indicating transport stream packets carry PES packets or PSI data\n        // PES: 1 -> commence with the first byte of a PES packet,  0 -> no PES packet shall start in this packet.\n        // PSI: 1 -> carries the first byte of a PSI section, 0 -> no pointer_field in the payload.\n        this.payload_unit_start_indicator = (buffer[1] >> 6) & 1;\n\n        // this.transport_priority = (buffer[1] >>> 5) & 1;\n\n        // The PID(Packet ID) is a 13-bit field, indicating the type of the data stored in the packet payload.\n        // NOTE – The transport packets with PID values 0x0000, 0x0001, and 0x0010-0x1FFE are allowed to carry a PCR.\n        // ISO/IEC 13818-1 : 2000 (E)\n        // Value                  Description\n        // 0x0000                 Program Association Table\n        // 0x0001                 Conditional Access Table\n        // 0x0002                 Transport Stream Description Table\n        // 0x0003-0x000F          Reserved\n        // 0x0010 ... 0x1FFE      May be assigned as network_PID, Program_map_PID, elementary_PID, or for other purposes\n        // https://www.dvb.org/resources/public/standards/a38_dvb-si_specification.pdf\n        // 0x0040                 Network_information_section-actual_network\n        // 0x0041                 Network_information_section-other_network\n        // 0x0042                 Service_description_section-actual_transport_stream\n        // 0x0043                 TO 0x45 Reserved for future use\n        // 0x0046                 Service_description_section-other_transport_stream\n        // 0x0047                 TO 0x49 Reserved for future use\n        // 0x004A                 Bouquet_association_section\n        // 0x004B                 TO 0x4D Reserved for future use\n        // 0x004E                 Event_information_section-actual_transport_stream,P/F\n        // 0x004F                 Event_information_section-other_transport_stream,P/F\n        // 0x0050                 TO 0x5F Event_information_section-actual_transport_stream,schedule\n        // 0x0060                 TO 0x6F Event_information_section-other_transport_stream,schedule\n        // 0x0070                 Time_data_section\n        // 0x0071                 Running_status_section\n        // 0x0072                 Stuffing_section\n        // 0x0073                 Time_offset_section\n        // 0x0074                 TO 0x007D Reserved for future use\n        // 0x007E                 Discontinuity_information_section\n        // 0x007F                 Selection_information_section\n        // 0x0080                 TO 0x00FE User defined\n        // 0x00FF                 Reserved\n        // 0x1FFF                 Null packet\n        this.PID = ((buffer[1] << 8) | buffer[2]) & 0x1fff;\n\n        // transport_scrambling_control\n        // this.tsc = buffer[3] >> 6;\n\n        // adaptation_field_control\n        // Value  Description\n        // 00     Reserved for future use by ISO/IEC\n        // 01     No adaptation_field, payload only\n        // 10     Adaptation_field only, no payload\n        // 11     Adaptation_field followed by payload\n        this.afc = (buffer[3] >> 4) & 3;\n\n        // '1' indicates that the discontinuity state is true for the current Transport Stream packet.\n        // this.continuity_counter = buffer[3] & 0xf;\n\n        // self defines.\n        this.has_payload = this.afc & 1;\n        this.has_adaptation = this.afc & 2;\n        // this.is_discontinuity = this.has_adaptation && buffer[4] != 0 /* with length > 0 */ && buffer[5] & 0x80;\n        /* and discontinuity indicated */\n\n        if (this.has_payload) {\n            if (this.has_adaptation) {\n                let adaptation_field_length = buffer[4];\n                this.payload = buffer.subarray(5 + adaptation_field_length);\n            } else {\n                this.payload = buffer.subarray(4);\n            }\n        }\n    }\n\n    valid() {\n        return this.sync_byte === SYNC_BYTE && this.has_payload === 1;\n    }\n}\n","/**\n * @file: demux.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * MPEG-2 transport stream demuxer.\n */\nimport DemuxFacade from '../demux-facade';\nimport muxErrorCode from '../mux-error-code';\nimport { GlobalOptions, PushConf } from '../types/globals';\nimport logger from '../util/logger';\nimport { PSI } from './psi';\nimport M2TSComplexStream from './streams/complex';\nimport ElementaryStream from './streams/elementary';\nimport PesStream from './streams/pes';\nimport { Packet } from './structs/packet';\n\nconst CHUNK_BYTE_LENGTH = 188; // Transport Stream chunks shall be 188 bytes long.\n\ntype InterfaceStream = M2TSComplexStream | ElementaryStream;\n\nexport class TSDemux extends DemuxFacade {\n    private psi_: PSI;\n    private pesStream_: PesStream;\n    private elementaryStream_: ElementaryStream;\n    private complexStream_: M2TSComplexStream;\n\n    constructor(options: GlobalOptions = {}) {\n        super(options);\n\n        this.psi_ = new PSI(this.ctx_);\n        this.pesStream_ = new PesStream(this.ctx_, this.psi_);\n        this.elementaryStream_ = new ElementaryStream(this.ctx_, this.psi_, options);\n        this.complexStream_ = new M2TSComplexStream(this.ctx_, this.psi_);\n\n        // Compose pipeline\n        this.pipe(this.pesStream_);\n        this.pesStream_.pipe(this.elementaryStream_);\n        this.elementaryStream_.pipe(this.complexStream_);\n\n        super.listenEndStream_();\n    }\n\n    /**\n     * This is end pipeline stream\n     */\n    get endStream(): InterfaceStream {\n        let stream: InterfaceStream = this.elementaryStream_;\n\n        if (this.options_.decodeCodec) {\n            stream = this.complexStream_;\n        }\n\n        return stream;\n    }\n\n    /**\n     * TS push support streaming incomplete data push.\n     * @param buffer\n     * @param conf\n     * @param conf.done - If you need the done event, this boolean needs to be set\n     */\n    push(buffer: ArrayBuffer | Uint8Array, conf: PushConf) {\n        const { done } = conf;\n        const { options_, ctx_, cache_buffer_, psi_ } = this;\n        let newBuf: Uint8Array = super.constraintPushData_(buffer);\n        let cacheByteLength = cache_buffer_.byteLength;\n        let byteOffset = null;\n\n        options_.config = conf;\n\n        logger.log(\n            `hls demux received ${newBuf.byteLength} bytes, cache ${cacheByteLength} bytes. ${done ? 'chunk done' : ''}`\n        );\n\n        cache_buffer_.append(newBuf);\n\n        while (cache_buffer_.byteLength >= CHUNK_BYTE_LENGTH) {\n            let chunk = cache_buffer_.cut(CHUNK_BYTE_LENGTH);\n\n            // The pushed buffer may be so small that can't cut a ts chunk.\n            if (chunk) {\n                let packet = new Packet(chunk);\n\n                if (packet.valid()) {\n                    psi_.parse(packet);\n\n                    this.emit('data', packet);\n                } else {\n                    let errMsg = `Encounter invalid ts packet, packet_length(${chunk.length}), cache_length(${this.cache_buffer_.byteLength}), has_payload(${packet.has_payload}), data(${chunk})`;\n\n                    logger.error(errMsg);\n\n                    this.reset();\n\n                    ctx_.emit('error', muxErrorCode.TS_SYNC_BYTE, errMsg, {\n                        startByte: byteOffset,\n                        endByte: byteOffset + chunk.byteLength\n                    });\n                    break;\n                }\n\n                byteOffset += chunk.byteLength;\n            }\n        }\n\n        if (cache_buffer_.empty && done) {\n            // logger.log('mux packet done!');\n            this.emit('done');\n        }\n    }\n\n    reset() {\n        this.cache_buffer_.clear();\n\n        this.emit('reset');\n    }\n}\n","/**\n * @file: mp4-inspector.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/* eslint-disable */\nlet /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer - a four-byte buffer to translate\n     * @return the corresponding string\n     */\n    parseType = function (buffer: Uint8Array): string {\n        let result = '';\n        result += String.fromCharCode(buffer[0]);\n        result += String.fromCharCode(buffer[1]);\n        result += String.fromCharCode(buffer[2]);\n        result += String.fromCharCode(buffer[3]);\n        return result;\n    },\n    parseMp4Date = function (seconds: number): Date {\n        return new Date(seconds * 1000 - 2082844800000);\n    },\n    parseSampleFlags = function (flags: Uint8Array) {\n        return {\n            isLeading: (flags[0] & 0x0c) >>> 2,\n            dependsOn: flags[0] & 0x03,\n            isDependedOn: (flags[1] & 0xc0) >>> 6,\n            hasRedundancy: (flags[1] & 0x30) >>> 4,\n            paddingValue: (flags[1] & 0x0e) >>> 1,\n            isNonSyncSample: flags[1] & 0x01,\n            degradationPriority: (flags[2] << 8) | flags[3]\n        };\n    },\n    nalParse = function (avcStream) {\n        let avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n            result = [],\n            i,\n            length;\n        for (i = 0; i < avcStream.length; i += length) {\n            length = avcView.getUint32(i);\n            i += 4;\n            switch (avcStream[i] & 0x1f) {\n                case 0x01:\n                    result.push('NDR');\n                    break;\n                case 0x05:\n                    result.push('IDR');\n                    break;\n                case 0x06:\n                    result.push('SEI');\n                    break;\n                case 0x07:\n                    result.push('SPS');\n                    break;\n                case 0x08:\n                    result.push('PPS');\n                    break;\n                case 0x09:\n                    result.push('AUD');\n                    break;\n                default:\n                    result.push(avcStream[i] & 0x1f);\n                    break;\n            }\n        }\n        return result;\n    },\n    // registry of handlers for individual mp4 box types\n    parse = {\n        // codingname, not a first-class box type. stsd entries share the\n        // same format as real boxes so the parsing infrastructure can be\n        // shared\n        avc1: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n            return {\n                dataReferenceIndex: view.getUint16(6),\n                width: view.getUint16(24),\n                height: view.getUint16(26),\n                horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n                vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n                frameCount: view.getUint16(40),\n                depth: view.getUint16(74),\n                config: mp4toJSON(data.subarray(78, data.byteLength))\n            };\n        },\n        avcC: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result = {\n                    configurationVersion: data[0],\n                    avcProfileIndication: data[1],\n                    profileCompatibility: data[2],\n                    avcLevelIndication: data[3],\n                    lengthSizeMinusOne: data[4] & 0x03,\n                    sps: [],\n                    pps: []\n                },\n                numOfSequenceParameterSets = data[5] & 0x1f,\n                numOfPictureParameterSets,\n                nalSize,\n                offset,\n                i;\n\n            // iterate past any SPSs\n            offset = 6;\n            for (i = 0; i < numOfSequenceParameterSets; i++) {\n                nalSize = view.getUint16(offset);\n                offset += 2;\n                result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n                offset += nalSize;\n            }\n            // iterate past any PPSs\n            numOfPictureParameterSets = data[offset];\n            offset++;\n            for (i = 0; i < numOfPictureParameterSets; i++) {\n                nalSize = view.getUint16(offset);\n                offset += 2;\n                result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n                offset += nalSize;\n            }\n            return result;\n        },\n        btrt: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n            return {\n                bufferSizeDB: view.getUint32(0),\n                maxBitrate: view.getUint32(4),\n                avgBitrate: view.getUint32(8)\n            };\n        },\n        esds: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4)),\n                esId: (data[6] << 8) | data[7],\n                streamPriority: data[8] & 0x1f,\n                decoderConfig: {\n                    objectProfileIndication: data[11],\n                    streamType: (data[12] >>> 2) & 0x3f,\n                    bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n                    maxBitrate: (data[16] << 24) | (data[17] << 16) | (data[18] << 8) | data[19],\n                    avgBitrate: (data[20] << 24) | (data[21] << 16) | (data[22] << 8) | data[23],\n                    decoderConfigDescriptor: {\n                        tag: data[24],\n                        length: data[25],\n                        // audioObjectType: (data[26] >>> 3) & 0x1f,\n                        // samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n                        //   ((data[27] >>> 7) & 0x01),\n                        // channelConfiguration: (data[27] >>> 3) & 0x0f,\n                        // FIXME\n                        audioObjectType: (data[35] >>> 3) & 0x1f,\n                        samplingFrequencyIndex: ((data[35] & 0x07) << (8 + (data[36] & 0x80))) >> 7,\n                        channelConfiguration: (data[36] & 0x78) >> 3\n                    }\n                }\n            };\n        },\n        ftyp: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result = {\n                    majorBrand: parseType(data.subarray(0, 4)),\n                    minorVersion: view.getUint32(4),\n                    compatibleBrands: []\n                },\n                i = 8;\n            while (i < data.byteLength) {\n                result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n                i += 4;\n            }\n            return result;\n        },\n        dinf: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        dref: function (data) {\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4)),\n                dataReferences: mp4toJSON(data.subarray(8))\n            };\n        },\n        hdlr: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result = {\n                    version: view.getUint8(0),\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    handlerType: parseType(data.subarray(8, 12)),\n                    name: ''\n                },\n                i = 8;\n\n            // parse out the name field\n            for (i = 24; i < data.byteLength; i++) {\n                if (data[i] === 0x00) {\n                    // the name field is null-terminated\n                    i++;\n                    break;\n                }\n                result.name += String.fromCharCode(data[i]);\n            }\n            // decode UTF-8 to javascript's internal representation\n            // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n            result.name = decodeURIComponent(decodeURIComponent(result.name));\n\n            return result;\n        },\n        // mdat: function(data) {\n        // \treturn {\n        // \t\tbyteLength: data.byteLength,\n        // \t\tnals: nalParse(data),\n        // \t\trealData: data\n        // \t};\n        // },\n        mdhd: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                i = 4,\n                language,\n                result = {\n                    version: view.getUint8(0),\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    language: '',\n                    creationTime: new Date(),\n                    modificationTime: new Date(),\n                    timescale: 0,\n                    duration: 0\n                };\n            if (result.version === 1) {\n                i += 4;\n                result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n                i += 8;\n                result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n                i += 4;\n                result.timescale = view.getUint32(i);\n                i += 8;\n                result.duration = view.getUint32(i); // truncating top 4 bytes\n            } else {\n                result.creationTime = parseMp4Date(view.getUint32(i));\n                i += 4;\n                result.modificationTime = parseMp4Date(view.getUint32(i));\n                i += 4;\n                result.timescale = view.getUint32(i);\n                i += 4;\n                result.duration = view.getUint32(i);\n            }\n            i += 4;\n            // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n            // each field is the packed difference between its ASCII value and 0x60\n            language = view.getUint16(i);\n            result.language += String.fromCharCode((language >> 10) + 0x60);\n            result.language += String.fromCharCode(((language & 0x03c0) >> 5) + 0x60);\n            result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n            return result;\n        },\n        mdia: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        mfhd: function (data) {\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4)),\n                sequenceNumber: (data[4] << 24) | (data[5] << 16) | (data[6] << 8) | data[7]\n            };\n        },\n        minf: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        // codingname, not a first-class box type. stsd entries share the\n        // same format as real boxes so the parsing infrastructure can be\n        // shared\n        mp4a: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result = {\n                    // 6 bytes reserved\n                    dataReferenceIndex: view.getUint16(6),\n                    // 4 + 4 bytes reserved\n                    channelcount: view.getUint16(16),\n                    samplesize: view.getUint16(18),\n                    // 2 bytes pre_defined\n                    // 2 bytes reserved\n                    samplerate: view.getUint16(24) + view.getUint16(26) / 65536,\n                    streamDescriptor: undefined\n                };\n\n            // if there are more bytes to process, assume this is an ISO/IEC\n            // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n            if (data.byteLength > 28) {\n                result.streamDescriptor = mp4toJSON(data.subarray(28))[0];\n            }\n            return result;\n        },\n        moof: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        moov: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        mvex: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        mvhd: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                i = 4,\n                result = {\n                    version: view.getUint8(0),\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    creationTime: new Date(),\n                    modificationTime: new Date(),\n                    timescale: 0,\n                    duration: 0,\n                    rate: 0,\n                    volume: 0,\n                    matrix: new Uint32Array(0),\n                    nextTrackId: 0\n                };\n\n            if (result.version === 1) {\n                i += 4;\n                result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n                i += 8;\n                result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n                i += 4;\n                result.timescale = view.getUint32(i);\n                i += 8;\n                result.duration = view.getUint32(i); // truncating top 4 bytes\n            } else {\n                result.creationTime = parseMp4Date(view.getUint32(i));\n                i += 4;\n                result.modificationTime = parseMp4Date(view.getUint32(i));\n                i += 4;\n                result.timescale = view.getUint32(i);\n                i += 4;\n                result.duration = view.getUint32(i);\n            }\n            i += 4;\n\n            // convert fixed-point, base 16 back to a number\n            result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n            i += 4;\n            result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n            i += 2;\n            i += 2;\n            i += 2 * 4;\n            result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n            i += 9 * 4;\n            i += 6 * 4;\n            result.nextTrackId = view.getUint32(i);\n            return result;\n        },\n        pdin: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n            return {\n                version: view.getUint8(0),\n                flags: new Uint8Array(data.subarray(1, 4)),\n                rate: view.getUint32(4),\n                initialDelay: view.getUint32(8)\n            };\n        },\n        sdtp: function (data) {\n            let result = {\n                    version: data[0],\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    samples: []\n                },\n                i;\n\n            for (i = 4; i < data.byteLength; i++) {\n                result.samples.push({\n                    dependsOn: (data[i] & 0x30) >> 4,\n                    isDependedOn: (data[i] & 0x0c) >> 2,\n                    hasRedundancy: data[i] & 0x03\n                });\n            }\n            return result;\n        },\n        sidx: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result = {\n                    version: data[0],\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    references: [],\n                    referenceId: view.getUint32(4),\n                    timescale: view.getUint32(8),\n                    earliestPresentationTime: view.getUint32(12),\n                    firstOffset: view.getUint32(16)\n                },\n                referenceCount = view.getUint16(22),\n                i;\n\n            for (i = 24; referenceCount; i += 12, referenceCount--) {\n                result.references.push({\n                    referenceType: (data[i] & 0x80) >>> 7,\n                    referencedSize: view.getUint32(i) & 0x7fffffff,\n                    subsegmentDuration: view.getUint32(i + 4),\n                    startsWithSap: !!(data[i + 8] & 0x80),\n                    sapType: (data[i + 8] & 0x70) >>> 4,\n                    sapDeltaTime: view.getUint32(i + 8) & 0x0fffffff\n                });\n            }\n\n            return result;\n        },\n        stbl: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        stco: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n            let entryCount = view.getUint32(4);\n            let result = {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4)),\n                entryCount: entryCount,\n                chunkOffsets: []\n            };\n            for (let i = 8; entryCount; i += 4, entryCount--) {\n                result.chunkOffsets.push(view.getUint32(i));\n            }\n            return result;\n        },\n        stsc: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                entryCount = view.getUint32(4),\n                result = {\n                    version: data[0],\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    sampleToChunks: []\n                },\n                i;\n            for (i = 8; entryCount; i += 12, entryCount--) {\n                result.sampleToChunks.push({\n                    firstChunk: view.getUint32(i),\n                    samplesPerChunk: view.getUint32(i + 4),\n                    sampleDescriptionIndex: view.getUint32(i + 8)\n                });\n            }\n            return result;\n        },\n        stsd: function (data) {\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4)),\n                boxes: mp4toJSON(data.subarray(8))\n            };\n        },\n        stsz: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result = {\n                    version: data[0],\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    sampleSize: view.getUint32(4),\n                    entries: []\n                },\n                i;\n            for (i = 12; i < data.byteLength; i += 4) {\n                result.entries.push(view.getUint32(i));\n            }\n            return result;\n        },\n        stts: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result = {\n                    version: data[0],\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    timeToSamples: []\n                },\n                entryCount = view.getUint32(4),\n                i;\n\n            for (i = 8; entryCount; i += 8, entryCount--) {\n                result.timeToSamples.push({\n                    sampleCount: view.getUint32(i),\n                    sampleDelta: view.getUint32(i + 4)\n                });\n            }\n            return result;\n        },\n        styp: function (data) {\n            return parse.ftyp(data);\n        },\n        tfdt: function (data) {\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4)),\n                baseMediaDecodeTime: (data[4] << 24) | (data[5] << 16) | (data[6] << 8) | data[7]\n            };\n        },\n        tfhd: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result: {\n                    version: number;\n                    flags: Uint8Array;\n                    trackId: number;\n                    baseDataOffset?: number;\n                    sampleDescriptionIndex?: number;\n                    defaultSampleDuration?: number;\n                    defaultSampleSize?: number;\n                    defaultSampleFlags?: number;\n                } = {\n                    version: data[0],\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    trackId: view.getUint32(4)\n                },\n                baseDataOffsetPresent = result.flags[2] & 0x01,\n                sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n                defaultSampleDurationPresent = result.flags[2] & 0x08,\n                defaultSampleSizePresent = result.flags[2] & 0x10,\n                defaultSampleFlagsPresent = result.flags[2] & 0x20,\n                i;\n\n            i = 8;\n            if (baseDataOffsetPresent) {\n                i += 4; // truncate top 4 bytes\n                result.baseDataOffset = view.getUint32(12);\n                i += 4;\n            }\n            if (sampleDescriptionIndexPresent) {\n                result.sampleDescriptionIndex = view.getUint32(i);\n                i += 4;\n            }\n            if (defaultSampleDurationPresent) {\n                result.defaultSampleDuration = view.getUint32(i);\n                i += 4;\n            }\n            if (defaultSampleSizePresent) {\n                result.defaultSampleSize = view.getUint32(i);\n                i += 4;\n            }\n            if (defaultSampleFlagsPresent) {\n                result.defaultSampleFlags = view.getUint32(i);\n            }\n            return result;\n        },\n        tkhd: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                i = 4,\n                result = {\n                    version: view.getUint8(0),\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    creationTime: new Date(),\n                    modificationTime: new Date(),\n                    trackId: 0,\n                    duration: 0,\n                    layer: 0,\n                    alternateGroup: 0,\n                    volume: 0,\n                    width: 0,\n                    height: 0,\n                    matrix: new Uint32Array(0)\n                };\n            if (result.version === 1) {\n                i += 4;\n                result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n                i += 8;\n                result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n                i += 4;\n                result.trackId = view.getUint32(i);\n                i += 4;\n                i += 8;\n                result.duration = view.getUint32(i); // truncating top 4 bytes\n            } else {\n                result.creationTime = parseMp4Date(view.getUint32(i));\n                i += 4;\n                result.modificationTime = parseMp4Date(view.getUint32(i));\n                i += 4;\n                result.trackId = view.getUint32(i);\n                i += 4;\n                i += 4;\n                result.duration = view.getUint32(i);\n            }\n            i += 4;\n            i += 2 * 4;\n            result.layer = view.getUint16(i);\n            i += 2;\n            result.alternateGroup = view.getUint16(i);\n            i += 2;\n            // convert fixed-point, base 16 back to a number\n            result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n            i += 2;\n            i += 2;\n            result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n            i += 9 * 4;\n            result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n            i += 4;\n            result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n            return result;\n        },\n        traf: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        trak: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        trex: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4)),\n                trackId: view.getUint32(4),\n                defaultSampleDescriptionIndex: view.getUint32(8),\n                defaultSampleDuration: view.getUint32(12),\n                defaultSampleSize: view.getUint32(16),\n                sampleDependsOn: data[20] & 0x03,\n                sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n                sampleHasRedundancy: (data[21] & 0x30) >> 4,\n                samplePaddingValue: (data[21] & 0x0e) >> 1,\n                sampleIsDifferenceSample: !!(data[21] & 0x01),\n                sampleDegradationPriority: view.getUint16(22)\n            };\n        },\n        trun: function (data) {\n            let result: {\n                    version: number;\n                    flags: Uint8Array;\n                    samples: Array<any>;\n                    dataOffset?: number;\n                } = {\n                    version: data[0],\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    samples: []\n                },\n                view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                dataOffsetPresent = result.flags[2] & 0x01,\n                firstSampleFlagsPresent = result.flags[2] & 0x04,\n                sampleDurationPresent = result.flags[1] & 0x01,\n                sampleSizePresent = result.flags[1] & 0x02,\n                sampleFlagsPresent = result.flags[1] & 0x04,\n                sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n                sampleCount = view.getUint32(4),\n                offset = 8,\n                sample;\n\n            if (dataOffsetPresent) {\n                result.dataOffset = view.getUint32(offset);\n                offset += 4;\n            }\n            if (firstSampleFlagsPresent && sampleCount) {\n                sample = {\n                    flags: parseSampleFlags(data.subarray(offset, offset + 4))\n                };\n                offset += 4;\n                if (sampleDurationPresent) {\n                    sample.duration = view.getUint32(offset);\n                    offset += 4;\n                }\n                if (sampleSizePresent) {\n                    sample.size = view.getUint32(offset);\n                    offset += 4;\n                }\n                if (sampleCompositionTimeOffsetPresent) {\n                    sample.compositionTimeOffset = view.getUint32(offset);\n                    offset += 4;\n                }\n                result.samples.push(sample);\n                sampleCount--;\n            }\n            while (sampleCount--) {\n                sample = {};\n                if (sampleDurationPresent) {\n                    sample.duration = view.getUint32(offset);\n                    offset += 4;\n                }\n                if (sampleSizePresent) {\n                    sample.size = view.getUint32(offset);\n                    offset += 4;\n                }\n                if (sampleFlagsPresent) {\n                    sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n                    offset += 4;\n                }\n                if (sampleCompositionTimeOffsetPresent) {\n                    sample.compositionTimeOffset = view.getUint32(offset);\n                    offset += 4;\n                }\n                result.samples.push(sample);\n            }\n            return result;\n        },\n        'url ': function (data) {\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4))\n            };\n        },\n        vmhd: function (data) {\n            //let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4))\n                //graphicsmode: view.getUint16(4),\n                //opcolor: new Uint16Array([view.getUint16(6),\n                //                          view.getUint16(8),\n                //                          view.getUint16(10)])\n            };\n        }\n    };\n\n/**\n * Return a javascript array of box objects parsed from an ISO base media file.\n * @param data - the binary data of the media to be inspected\n * @return a javascript array of potentially nested box objects\n */\nlet mp4toJSON = function (data: Uint8Array): Array<any> {\n    let i = 0,\n        result = [],\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        size,\n        type,\n        end,\n        box;\n\n    while (i < data.byteLength) {\n        // parse box data\n        (size = view.getUint32(i)), (type = parseType(data.subarray(i + 4, i + 8)));\n        end = size > 1 ? i + size : data.byteLength;\n\n        // parse type-specific data\n        box = (\n            parse[type] ||\n            function (data) {\n                return {\n                    data: data\n                };\n            }\n        )(data.subarray(i + 8, end));\n        box.size = size;\n        box.type = type;\n\n        // store this box and move to the next\n        result.push(box);\n        i = end;\n    }\n    return result;\n};\n\nexport const MP4Inspect = {\n    mp4toJSON: mp4toJSON\n};\n","/**\n * @file: demux.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport DemuxFacade from '../demux-facade';\nimport { GlobalOptions } from '../types/globals';\nimport logger from '../util/logger';\nimport { MP4Inspect } from './mp4-inspector';\n\n/**\n * mp4.\n */\nexport class MP4Demux extends DemuxFacade {\n    constructor(options: GlobalOptions = {}) {\n        super(options);\n\n        super.listenEndStream_();\n    }\n\n    /**\n     * This is end pipeline stream\n     */\n    get endStream() {\n        return this;\n    }\n\n    /**\n     * The MP4 data pushed into stream should be complete data.\n     * @param buffer\n     */\n    push(buffer: ArrayBuffer | Uint8Array) {\n        let newBuf: Uint8Array = super.constraintPushData_(buffer);\n\n        logger.log(`mp4 demux received ${newBuf.byteLength} bytes`);\n\n        let result = MP4Inspect.mp4toJSON(newBuf);\n\n        this.emit('data', result);\n    }\n}\n","/**\n * @file: created at Wednesday, 13th May 2020 4:15:40 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nexport const HEAD_LEN = 9;\nexport const MIN_BODY_LEN = 4;\nexport const PREVIOUS_TAG_SIZE = 4;\nexport const MIN_TAG_LEN = PREVIOUS_TAG_SIZE;\n\nexport enum FLVParseStage {\n    HEAD = 0,\n    BODY\n}\n","/**\n * @file: created at Saturday, 23rd May 2020 11:46:18 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nenum FlvTagTypes {\n    SCRIPT_DATA = 18,\n    VIDEO = 9,\n    AUDIO = 8\n}\n\nexport default FlvTagTypes;\n","/**\n * @file: tag.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * tag structure.\n */\nimport DataViewReader from '../../util/dv';\nimport FlvTagTypes from '../../enum/flv-tag-types';\n\n/**\n * @extends DataViewReader\n */\nexport default class FlvTag extends DataViewReader {\n    tagType: number;\n    dataSize: number;\n    timestamp: number;\n    timestampExtended: number;\n    streamId: number;\n    payload: Uint8Array;\n    previousTagSize: number;\n    totalSize: number;\n\n    /**\n     * @param buffer\n     */\n    constructor(buffer: Uint8Array) {\n        super();\n\n        this.tagType = buffer[0];\n\n        this.dataSize = this.readUint32(buffer, 0) & 0x00ffffff;\n\n        let timestamp = this.readUint32(buffer, 3) & 0x00ffffff; // the lower 24 bits of the timestamp\n        let timestampExtended = buffer[7]; // This field represents the upper 8 bits of timestamp\n\n        this.timestamp = (timestampExtended << 24) + timestamp;\n\n        this.streamId = this.readUint32(buffer, 8) & 0x00ffffff; // Always 0\n\n        this.payload = buffer.subarray(11, 11 + this.dataSize);\n\n        this.previousTagSize = this.readUint32(buffer, 11 + this.dataSize);\n\n        this.totalSize = this.previousTagSize + 4;\n    }\n\n    valid(): boolean {\n        let { tagType, dataSize, previousTagSize } = this;\n        return (\n            previousTagSize === 11 + dataSize &&\n            (tagType === FlvTagTypes.SCRIPT_DATA || tagType === FlvTagTypes.VIDEO || tagType === FlvTagTypes.AUDIO)\n        );\n    }\n}\n","/**\n * @file: elementary.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport muxErrorCode from '../../mux-error-code';\nimport { Context, GlobalOptions } from '../../types/globals';\nimport CacheBuffer from '../../util/cache-buffer';\nimport logger from '../../util/logger';\nimport Stream from '../../util/stream';\nimport { HEAD_LEN, MIN_TAG_LEN, PREVIOUS_TAG_SIZE } from '../flv-const';\nimport FlvTag from '../structs/flv-tag';\nimport AVContext from '../types/av-context';\n\nclass BodyStream extends Stream {\n    private ctx_: Context;\n    private flv_: AVContext;\n    private options_: GlobalOptions;\n    private cache_buffer_: CacheBuffer;\n\n    constructor(ctx: Context, flvCtx: AVContext, options: GlobalOptions = {}) {\n        super();\n\n        this.ctx_ = ctx;\n        this.flv_ = flvCtx;\n        this.options_ = options;\n        this.cache_buffer_ = new CacheBuffer();\n    }\n\n    /**\n     * Push a body buffer\n     */\n    push(bodyBuffer: Uint8Array): void {\n        const { ctx_, flv_, cache_buffer_ } = this;\n        let buffer: Uint8Array | null;\n\n        cache_buffer_.append(bodyBuffer);\n\n        if (flv_.pos === HEAD_LEN) {\n            if (cache_buffer_.byteLength > PREVIOUS_TAG_SIZE + MIN_TAG_LEN) {\n                // drop PreviousTagSize0\n                cache_buffer_.cut(PREVIOUS_TAG_SIZE);\n\n                flv_.pos += PREVIOUS_TAG_SIZE;\n            }\n        }\n\n        while (cache_buffer_.byteLength > 0) {\n            // buffer start with tag\n            buffer = cache_buffer_.bytes;\n\n            if (buffer.length >= MIN_TAG_LEN) {\n                let tagHeadSize = 11; // 10 is tag header\n                let tagPayloadSize = (buffer[1] << 16) + (buffer[2] << 8) + buffer[3];\n                let previousTagSize = 4;\n                let tagSize = tagHeadSize + tagPayloadSize + previousTagSize;\n\n                if (buffer.length >= tagSize) {\n                    let tagBuffer = cache_buffer_.cut(tagSize);\n                    let tag = new FlvTag(tagBuffer);\n\n                    if (tag.valid()) {\n                        this.emit('data', tag);\n                        flv_.pos += tag.totalSize;\n                    } else {\n                        let errMsg = `Encounter invalid flv tag, tag_length(${tag.previousTagSize}), cache_length(${cache_buffer_.byteLength}), data(${tagBuffer})`;\n\n                        logger.error(errMsg);\n\n                        this.reset();\n\n                        ctx_.emit('error', muxErrorCode.TS_SYNC_BYTE, errMsg);\n                    }\n                } else {\n                    break;\n                }\n            } else {\n                break;\n            }\n        }\n    }\n\n    reset(): void {\n        const { cache_buffer_ } = this;\n\n        cache_buffer_.clear();\n        this.emit('reset');\n    }\n}\n\nexport default BodyStream;\n","/**\n * @file: created at Sunday, 24th May 2020 2:21:46 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\n\nexport function AMFdeSerialize(data: Uint8Array) {\n    let result = {};\n    let item = parseData_(data);\n    result[item.key] = item.value;\n    return result;\n}\n\nfunction parseData_(source: Uint8Array, isString = false) {\n    let key = null,\n        value = null,\n        data = null;\n\n    if (isString) {\n        try {\n            data = new Uint8Array(source.length + 1);\n        } catch (e) {\n            logger.error(`flv parseData failed: ${e.message}`);\n        }\n        data[0] = 2;\n        data.set(source, 1, source.length);\n    } else {\n        data = source;\n    }\n    key = deSerialize_(data);\n    if (isString) {\n        key.valueLength -= 1;\n    }\n    let temp = source.subarray(key.valueLength, source.byteLength);\n    value = deSerialize_(temp);\n\n    return {\n        key: key.value,\n        value: value.value,\n        valueLength: key.valueLength + value.valueLength\n    };\n}\n\ntype SerializeResult = Partial<{\n    value: any;\n    valueLength: number;\n}>;\n\nfunction deSerialize_(data: Uint8Array) {\n    let result: SerializeResult = {};\n    let valueLength = 0;\n    let a = new DataViewReader();\n\n    switch (data[0]) {\n        case 0:\n            valueLength = 8;\n            result.value = uint8ToDouble_(data.subarray(1, 9));\n            result.valueLength = 1 + valueLength;\n            break;\n        case 1:\n            valueLength = 1;\n            result.value = data[1] !== 0;\n            result.valueLength = 1 + valueLength;\n            break;\n        case 2:\n            valueLength = (data[1] << 8) | data[2];\n            result.value = uint8ToStr_(data.subarray(3, 3 + valueLength));\n            result.valueLength = 1 + 2 + valueLength;\n            break;\n        case 3:\n            valueLength = 1;\n            result.value = {};\n            while (data[valueLength] != 0x00 || data[valueLength + 1] != 0x00 || data[valueLength + 2] != 0x09) {\n                let objData = data.subarray(valueLength, data.byteLength);\n                let item = parseData_(objData, true);\n                result.value[item.key] = item.value;\n                valueLength += item.valueLength;\n                objData = null;\n            }\n            valueLength += 3;\n            result.valueLength = valueLength;\n            break;\n        case 4:\n            valueLength = (data[1] << 8) | data[2];\n            result.value = uint8ToStr_(data.subarray(3, 3 + valueLength));\n            result.valueLength = 1 + 2 + valueLength;\n            break;\n        case 5:\n            result.value = null;\n            valueLength = 1;\n            result.valueLength = valueLength;\n            break;\n        case 6:\n            result.value = undefined;\n            valueLength = 1;\n            result.valueLength = valueLength;\n            break;\n        case 7:\n            result.value = a.readUint16(data, 1);\n            valueLength = 2 + 1;\n            result.valueLength = valueLength;\n            break;\n        case 8:\n            {\n                let arrLength = (data[1] << 24) | (data[2] << 16) | (data[3] << 8) | data[4];\n                valueLength = 1 + 4;\n                result.value = {};\n                for (let count = 0; count < arrLength; count++) {\n                    let itemData = data.subarray(valueLength, data.byteLength);\n                    let item2 = parseData_(itemData, true);\n                    result.value[item2.key] = item2.value;\n                    valueLength += item2.valueLength;\n                }\n                valueLength += 3;\n                result.valueLength = valueLength;\n            }\n            break;\n        case 9:\n            break;\n        case 10:\n            {\n                let arr = [];\n                let arrLength2 = a.readUint32(data, 1);\n                for (let i = 0; i < arrLength2; i++) {\n                    let objData2 = data.subarray(i * 9 + 4 + 1, data.byteLength);\n                    arr.push(deSerialize_(objData2).value);\n                }\n                result.value = arr;\n                valueLength = arr.length * 9 + 4 + 1;\n                result.valueLength = valueLength;\n            }\n            break;\n        case 11:\n            result.value = uint8ToDouble_(data.subarray(0, 8));\n            valueLength = 8 + 1 + 2;\n            result.valueLength = valueLength;\n            break;\n        case 12:\n            valueLength = (data[1] << 24) | (data[2] << 16) | (data[3] << 8) | data[4];\n            result.value = uint8ToStr_(data.subarray(5, 5 + valueLength));\n            result.valueLength = 1 + 4 + valueLength;\n            break;\n        default:\n            return null;\n    }\n    a = null;\n    return result;\n}\n\nfunction uint8ToStr_(data: Uint8Array) {\n    return String.fromCharCode.apply(null, data);\n}\n\nfunction uint8ToDouble_(data: Uint8Array) {\n    let temp = new Uint8Array(data);\n    let dv = new DataView(temp.buffer);\n    let str = dv.getFloat64(0);\n    dv = null;\n    temp = null;\n    return str;\n}\n","/**\n * @file: created at Saturday, 9th May 2020 4:38:35 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport { AudioSpecificConfig } from '../../codec/aac/aac';\nimport { AVCDecoderConfigurationRecord } from '../../codec/avc';\nimport Stream from '../../util/stream';\nimport { FLVParseStage } from '../flv-const';\n\nexport enum AudioSoundFormat {\n    AAC = 10\n}\n\nexport enum AudioSoundType {\n    MONO = 0,\n    STEREO = 1 // For AAC: always 1\n}\n\nexport default class AVContext extends Stream {\n    stage: FLVParseStage;\n    pos: number = 0; // parse byte position relative to flv first byte;\n\n    version: number;\n    hasAudio: boolean;\n    hasVideo: boolean;\n\n    keyframeTimes: number[];\n    keyframeFilePositions: number[];\n\n    decoderConfigurationRecord: AVCDecoderConfigurationRecord;\n    audioSpecificConfig: AudioSpecificConfig;\n}\n","/**\n * @file: created at Monday, 25th May 2020 12:36:52 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * AVCVideoPacket structure.\n */\nimport { AudioSpecificConfig, AAC_SAMPLING_FREQUENCIES } from '../../codec/aac/aac';\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\n\n// 0: AAC sequence header\n// 1: AAC raw\nexport enum AACPacketType {\n    SEQUENCE_HEAD = 0, // 0 : AVCDecoderConfigurationRecord（AVC sequence header）\n    AAC_RAW = 1 // 1 : One or more NALUs (Full frames are required)\n}\n\n/**\n * ISO/IEC 14496-3 1.6.2.1 AudioSpecificConfig\n * @param buffer\n */\nexport function parseAudioSpecificConfig(buffer: Uint8Array): AudioSpecificConfig {\n    let LOG = 'AudioSpecificConfig';\n\n    // ISO/IEC 14496-3 Table 1.16 – Syntax of GetAudioObjectType()\n    let audioObjectType = buffer[0] >> 3;\n    if (audioObjectType == 31) {\n        logger.error(`${LOG} unsupported audioObjectType`);\n        // audioObjectType = 32 + audioObjectTypeExt;\n    }\n\n    let samplingFrequencyIndex = ((buffer[0] & 0x7) << 1) | (buffer[1] >> 7);\n    if (samplingFrequencyIndex === 0xf) {\n        logger.error(`${LOG} unsupported samplingFrequencyIndex`);\n    }\n    let channelConfiguration = (buffer[1] >> 3) & 0x0f;\n    if (channelConfiguration < 0 || channelConfiguration >= 8) {\n        logger.error('${LOG} unsupported channel configuration');\n    }\n\n    let sampleCount = ((buffer[1] >> 2) & 0x01) == 0 ? 1024 : 1024;\n    let sampleRate = AAC_SAMPLING_FREQUENCIES[samplingFrequencyIndex];\n\n    return {\n        audioObjectType,\n        samplingFrequencyIndex,\n        channelConfiguration,\n        sampleCount,\n        sampleRate\n    };\n}\n\n/**\n * @extends DataViewReader\n */\nexport default class AACAudioData extends DataViewReader {\n    dts: number;\n    pts: number;\n    aacPacketType: AACPacketType;\n    payload: Uint8Array;\n    audioSpecificConfig?: AudioSpecificConfig;\n\n    /**\n     * @param buffer\n     */\n    constructor(buffer: Uint8Array, timestamp: number) {\n        super();\n\n        this.dts = timestamp;\n        this.pts = timestamp;\n\n        this.aacPacketType = buffer[0];\n        this.payload = buffer.subarray(1);\n\n        if (this.aacPacketType === 0) {\n            this.audioSpecificConfig = parseAudioSpecificConfig(this.payload);\n        }\n    }\n}\n","/**\n * @file: created at Monday, 25th May 2020 2:51:52 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * audio data structure.\n */\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\nimport { AudioSoundFormat, AudioSoundType } from '../types/av-context';\nimport AACAudioData from './flv-tag-aac-audio-data';\n\n// 0 = Linear PCM, platform endian\n// 1 = ADPCM\n// 2 = MP3\n// 3 = Linear PCM, little endian\n// 4 = Nellymoser 16-kHz mono\n// 5 = Nellymoser 8-kHz mono\n// 6 = Nellymoser\n// 7 = G.711 A-law logarithmic PCM 8 = G.711 mu-law logarithmic PCM 9 = reserved\n// 10 = AAC\n// 11 = Speex\n// 14 = MP3 8-Khz\n// 15 = Device-specific sound\n\n/**\n * @extends DataViewReader\n */\nexport default class FlvTagAudioData extends DataViewReader {\n    soundFormat: AudioSoundFormat;\n    soundRate: number;\n    sampleSize: number; // Size of each sample\n    soundType: AudioSoundType;\n    soundData: AACAudioData;\n\n    /**\n     * @param buffer\n     */\n    constructor(buffer: Uint8Array, timestamp: number) {\n        super();\n\n        this.soundFormat = (buffer[0] & 0xf0) >> 4;\n        this.soundRate = (buffer[0] & 0x0c) >> 2;\n\n        let soundSize = (buffer[0] & 0x02) >> 1;\n\n        switch (soundSize) {\n            case 0:\n                this.sampleSize = 8; // bit\n                break;\n            case 1:\n                this.sampleSize = 16; // bit\n                break;\n        }\n        this.soundType = buffer[0] & 1;\n\n        switch (this.soundFormat) {\n            case AudioSoundFormat.AAC:\n                this.soundData = new AACAudioData(buffer.subarray(1), timestamp);\n                break;\n            default:\n                logger.error(`flv tag audioData encounter unknown soundFormat ${this.soundFormat}`);\n        }\n    }\n}\n","/**\n * @file: created at Monday, 25th May 2020 12:36:52 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * AVCVideoPacket structure.\n */\nimport { AVCCodec, AVCCodecData, AVCDecoderConfigurationRecord } from '../../codec/avc';\nimport NALU from '../../codec/avc/nalu';\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\nimport { PipelineContext } from '../types/flv-pipeline';\n\n// 0 : AVCDecoderConfigurationRecord（AVC sequence header）\n// 1 : One or more NALUs (Full frames are required)\n// 2 : AVC end of sequence\nexport enum AVCPacketTypes {\n    SEQUENCE_HEAD = 0, // 0 : AVCDecoderConfigurationRecord（AVC sequence header）\n    NALU = 1, // 1 : One or more NALUs (Full frames are required)\n    SEQUENCE_END = 2 // 2 : AVC end of sequence\n}\n\n/**\n * ISO/IEC 14496-15  5.2.4.1.1 Syntax\n * @param data\n */\nexport function parseAVCDecoderConfigurationRecord(data: Uint8Array): AVCDecoderConfigurationRecord {\n    let version = data[0];\n    let profile = data[1];\n    let profileCompatibility = data[2];\n    let level = data[3];\n    let naluSizeLength = 1 + (data[4] & 0x03);\n    let ppsNalus = [],\n        spsNalus = [];\n\n    let pos = 5;\n    let numOfSPS = data[pos] & 0x1f;\n\n    if (numOfSPS === 0) {\n        logger.error(`Flv: Invalid AVCDecoderConfigurationRecord: No SPS`);\n    } else if (numOfSPS > 0) {\n        if (numOfSPS > 1) {\n            logger.warn(`Flv: Strange AVCDecoderConfigurationRecord: SPS Count = ${numOfSPS}`);\n        }\n\n        pos++;\n        for (let i = 0; i < numOfSPS; i++) {\n            let spsDataLength = (data[pos] << 8) | data[pos + 1];\n            pos += 2;\n\n            spsNalus.push(data.subarray(pos, pos + spsDataLength));\n            pos += spsDataLength;\n        }\n    }\n\n    let numOfPPS = data[pos];\n\n    if (numOfPPS === 0) {\n        logger.error(`Flv: Invalid AVCDecoderConfigurationRecord: No PPS`);\n    } else if (numOfPPS > 0) {\n        if (numOfPPS > 1) {\n            logger.warn(`Flv: Strange AVCDecoderConfigurationRecord: PPS Count = ${numOfPPS}`);\n        }\n\n        pos++;\n        for (let i = 0; i < numOfPPS; i++) {\n            let ppsDataLength = (data[pos] << 8) | data[pos + 1];\n            pos += 2;\n\n            ppsNalus.push(data.subarray(pos, pos + ppsDataLength));\n            pos += ppsDataLength;\n        }\n    }\n\n    return {\n        version,\n        profile,\n        profileCompatibility,\n        level,\n        naluSizeLength,\n        spsNalus,\n        ppsNalus\n    };\n}\n\nconst avcCodec = new AVCCodec();\nconst naluList_: NALU[] = [];\n\navcCodec.on('nalu', (nalu: NALU) => {\n    naluList_.push(nalu);\n});\n\n/**\n * @extends DataViewReader\n */\nexport default class AVCVideoPacket extends DataViewReader {\n    avcPacketType: AVCPacketTypes;\n    decoderConfigurationRecord?: AVCDecoderConfigurationRecord;\n    cts: number;\n    pts: number;\n    dts: number;\n    payload: Uint8Array;\n    naluList?: NALU[];\n\n    private avcCodec?: AVCCodec;\n\n    /**\n     * @param buffer\n     */\n    constructor(pipeCtx: PipelineContext, buffer: Uint8Array, timestamp: number) {\n        super();\n\n        const { flv, options } = pipeCtx;\n\n        this.avcPacketType = buffer[0];\n\n        if (this.avcPacketType === 1) {\n            let cts_uint32 = this.readUint32(buffer, 0) & 0x00ffffff;\n            this.cts = (cts_uint32 << 8) >> 8; // convert to 24-bit signed int\n        } else {\n            this.cts = 0;\n        }\n\n        this.dts = timestamp;\n        this.pts = this.dts + this.cts;\n\n        this.payload = buffer.subarray(4);\n\n        if (this.avcPacketType === 0) {\n            this.decoderConfigurationRecord = parseAVCDecoderConfigurationRecord(this.payload);\n\n            flv.decoderConfigurationRecord = this.decoderConfigurationRecord;\n        } else {\n            if (options.decodeCodec) {\n                this.naluList = [];\n\n                let raw: AVCCodecData = {\n                    pts: this.pts,\n                    dts: this.dts,\n                    payload: this.payload\n                };\n\n                if (!this.decoderConfigurationRecord) {\n                    if (flv.decoderConfigurationRecord) {\n                        raw.naluSizeLength = flv.decoderConfigurationRecord.naluSizeLength;\n                    }\n\n                    avcCodec.push(raw);\n\n                    // Clone nalu to videoData\n                    for (let i = 0; i < naluList_.length; i++) {\n                        this.naluList.push(naluList_[i]);\n                    }\n\n                    // empty cache\n                    naluList_.splice(0, naluList_.length);\n                }\n            }\n        }\n    }\n}\n","/**\n * @file: tag.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * video data structure.\n */\nimport DataViewReader from '../../util/dv';\nimport logger from '../../util/logger';\nimport { PipelineContext } from '../types/flv-pipeline';\nimport AVCVideoPacket from './flv-tag-avc-video-packet';\n\n// If CodecID == 2 H263VIDEOPACKET\n// If CodecID == 3 SCREENVIDEOPACKET\n// If CodecID == 4 VP6FLVVIDEOPACKET\n// If CodecID == 5 VP6FLVALPHAVIDEOPACKET\n// If CodecID == 6 SCREENV2VIDEOPACKET\n// if CodecID == 7 AVCVIDEOPACKET\n// Video frame payload or UI8 (see note following table)\n\nexport enum VideoCodecIDs {\n    AVC = 7 // AVC_VIDEO_PACKET\n}\n\n/**\n * @extends DataViewReader\n */\nexport default class FlvTagVideoData extends DataViewReader {\n    frameType: number;\n    isKeyframe: boolean;\n    codecId: VideoCodecIDs;\n    videoData: AVCVideoPacket;\n\n    /**\n     * @param buffer\n     */\n    constructor(pipeCtx: PipelineContext, buffer: Uint8Array, timestamp: number) {\n        super();\n\n        this.frameType = (buffer[0] >> 4) & 0x0f;\n        this.isKeyframe = this.frameType === 1;\n        this.codecId = buffer[0] & 0x0f;\n\n        switch (this.codecId) {\n            case VideoCodecIDs.AVC:\n                this.videoData = new AVCVideoPacket(pipeCtx, buffer.subarray(1), timestamp);\n                break;\n            default:\n                logger.error(`flv tag videoData encounter unknown codecId ${this.codecId}`);\n        }\n    }\n}\n","/**\n * @file: created at Saturday, 9th May 2020 3:49:22 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * FLV Tags Stream.\n */\nimport FlvTagTypes from '../../enum/flv-tag-types';\nimport { Context, GlobalOptions } from '../../types/globals';\nimport logger from '../../util/logger';\nimport Stream from '../../util/stream';\nimport { AMFdeSerialize } from '../structs/flv-amf';\nimport FlvTag from '../structs/flv-tag';\nimport FlvTagAudioData from '../structs/flv-tag-audio-data';\nimport FlvTagVideoData from '../structs/flv-tag-video-data';\nimport AVContext from '../types/av-context';\nimport { PipelineContext, TagEmitData } from '../types/flv-pipeline';\n\nclass TagsStream extends Stream {\n    private flv_: AVContext;\n    private options_: GlobalOptions;\n    private pipeCtx: PipelineContext;\n\n    constructor(ctx: Context, flv: AVContext, options: GlobalOptions = {}) {\n        super();\n\n        this.flv_ = flv;\n        this.options_ = options;\n\n        this.pipeCtx = {\n            ctx,\n            flv,\n            options\n        };\n    }\n\n    push(tag: FlvTag) {\n        switch (tag.tagType) {\n            case FlvTagTypes.SCRIPT_DATA:\n                this.parseScriptData_(tag.payload);\n                break;\n            case FlvTagTypes.VIDEO:\n                this.parseVideoData_(tag);\n                break;\n            case FlvTagTypes.AUDIO:\n                this.parseAudioData_(tag);\n                break;\n            default:\n                logger.error(`still not supported flv tag type ${tag.tagType}`);\n        }\n    }\n\n    flush() {\n        const self = this;\n\n        self.emit('done');\n    }\n\n    reset() {\n        this.emit('reset');\n    }\n\n    private parseScriptData_(buffer: Uint8Array) {\n        const { flv_ } = this;\n        let result = AMFdeSerialize(buffer);\n\n        flv_.emit('data', {\n            type: 'tag',\n            tagType: FlvTagTypes.SCRIPT_DATA,\n            ...result\n        });\n    }\n\n    private parseVideoData_(tag: FlvTag) {\n        const { flv_ } = this;\n        const data = new FlvTagVideoData(this.pipeCtx, tag.payload, tag.timestamp);\n\n        let ret: TagEmitData = {\n            type: 'tag',\n            tagType: FlvTagTypes.VIDEO,\n            timestamp: tag.timestamp,\n            ...data\n        };\n\n        flv_.emit('data', ret);\n    }\n\n    private parseAudioData_(tag: FlvTag) {\n        const { /*options_,*/ flv_ } = this;\n\n        const data = new FlvTagAudioData(tag.payload, tag.timestamp);\n        const { /*sampleSize,*/ soundData } = data;\n\n        if (soundData.audioSpecificConfig) {\n            flv_.audioSpecificConfig = soundData.audioSpecificConfig;\n        } else {\n            // let stubTime = options_.config.stubTime;\n            // if (isNumber(stubTime)) {\n            // \tlet start = soundData.pts;\n            // \tlet duration =\n            // \t\tsoundData.pts +\n            // \t\tsoundData.payload.byteLength / (sampleSize / 8) / flv_.audioSpecificConfig.sampleCount;\n            // \tlet end = start + duration;\n            // \tif (end < stubTime) {\n            // \t\tlogger.warn(`drop aac tag, start/end/stubTime(${start}/${end}/${stubTime})`);\n            // \t\treturn;\n            // \t}\n            // }\n        }\n\n        let ret: TagEmitData = {\n            type: 'tag',\n            tagType: FlvTagTypes.AUDIO,\n            timestamp: tag.timestamp,\n            ...data\n        };\n\n        flv_.emit('data', ret);\n    }\n}\n\nexport default TagsStream;\n","/**\n * @file: created at Thursday, 14th May 2020 10:18:11 am\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * FLV Head Structure.\n */\nimport DataViewReader from '../../util/dv';\n\n/**\n * @extends DataViewReader\n */\nclass FlvHead extends DataViewReader {\n    signature: string;\n    version: number;\n    hasAudio: boolean;\n    hasVideo: boolean;\n    offset: number;\n\n    /**\n     * @param buffer\n     */\n    constructor(buffer: Uint8Array) {\n        super();\n\n        this.signature =\n            String.fromCharCode(buffer[0]) + // F\n            String.fromCharCode(buffer[1]) + // L\n            String.fromCharCode(buffer[2]); //V\n\n        this.version = buffer[3];\n        this.hasAudio = (buffer[4] & 4) >>> 2 == 1;\n        this.hasVideo = (buffer[4] & 1) == 1;\n        this.offset = this.readUint32(buffer, 5);\n    }\n\n    valid(): boolean {\n        return this.signature === 'FLV';\n    }\n}\n\nexport default FlvHead;\n","/**\n * flv demuxer.\n */\nimport DemuxFacade from '../demux-facade';\nimport muxErrorCode from '../mux-error-code';\nimport { GlobalOptions, PushConf } from '../types/globals';\nimport { isNumber } from '../util/is';\nimport logger from '../util/logger';\nimport { FLVParseStage, HEAD_LEN, MIN_BODY_LEN } from './flv-const';\nimport BodyStream from './streams/body';\nimport TagsStream from './streams/tag';\nimport FlvHead from './structs/flv-head';\nimport AVContext from './types/av-context';\n\n/**\n * flv\n */\nexport class FLVDemux extends DemuxFacade {\n    // private complex_: FlvComplex;\n    private flv_: AVContext;\n    private tags_: TagsStream;\n    private body_: BodyStream;\n\n    constructor(options: GlobalOptions = {}) {\n        super(options);\n\n        this.flv_ = new AVContext();\n        this.flv_.stage = FLVParseStage.HEAD;\n\n        // this. = 0;\n\n        this.body_ = new BodyStream(this.ctx_, this.flv_, options);\n        this.tags_ = new TagsStream(this.ctx_, this.flv_, options);\n\n        // Compose pipeline\n        this.pipe(this.body_);\n        this.body_.pipe(this.tags_);\n\n        super.listenEndStream_();\n    }\n\n    get endStream() {\n        return this.flv_;\n    }\n\n    /**\n     * @param buffer\n     * @param conf\n     * @param conf.offsetByte\n     */\n    push(buffer: ArrayBuffer | Uint8Array, conf: PushConf = {}) {\n        const { options_, ctx_, flv_, cache_buffer_ } = this;\n        const data: Uint8Array = super.constraintPushData_(buffer);\n        let cacheByteLength = this.cache_buffer_.byteLength;\n\n        logger.log(`flv demux received ${data.byteLength} bytes, cache ${cacheByteLength} bytes.`);\n\n        options_.config = conf;\n        if (isNumber(conf.offsetPos)) {\n            if (cacheByteLength === 0) {\n                if (flv_.pos !== conf.offsetPos) {\n                    ctx_.emit('error', muxErrorCode.FLV_NOT_EXPECTED_ADJACENT_DATA);\n                }\n\n                flv_.pos = conf.offsetPos;\n            }\n        }\n\n        cache_buffer_.append(data);\n\n        // if file byteOffset is provided, then specify the stage of parser.\n        if (flv_.pos < HEAD_LEN) {\n            flv_.stage === FLVParseStage.HEAD;\n        } else {\n            flv_.stage === FLVParseStage.BODY;\n        }\n\n        while (true) {\n            if (flv_.stage === FLVParseStage.HEAD) {\n                if (cache_buffer_.byteLength >= HEAD_LEN) {\n                    // has enough header\n                    let chunk = cache_buffer_.cut(HEAD_LEN);\n\n                    let head = new FlvHead(chunk);\n\n                    if (head.valid()) {\n                        flv_.emit('data', {\n                            type: 'head',\n                            signature: head.signature,\n                            version: head.version,\n                            hasAudio: head.hasAudio,\n                            hasVideo: head.hasVideo,\n                            offset: head.offset\n                        });\n\n                        // Change parse state -> body\n                        flv_.stage = FLVParseStage.BODY;\n                        flv_.pos = HEAD_LEN;\n                    } else {\n                        ctx_.emit('error', muxErrorCode.FLV_HEAD_SIGNATURE);\n                        break;\n                    }\n                } else {\n                    break;\n                }\n            } else if (flv_.stage === FLVParseStage.BODY) {\n                // At least has 4 body byte to parse\n                if (cache_buffer_.byteLength >= MIN_BODY_LEN) {\n                    let cbLen = cache_buffer_.byteLength;\n                    let nextBytes = cache_buffer_.bytes;\n\n                    cache_buffer_.clear();\n\n                    if (nextBytes) {\n                        this.emit('data', nextBytes);\n                    }\n\n                    flv_.pos += cbLen;\n                }\n\n                break;\n            }\n        }\n    }\n}\n"],"names":["Events","console","global","AVCStream","FlvTagTypes"],"mappings":"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"}