{"version":3,"file":"demuxer.mp4.umd.js","sources":["../src/enum/events.ts","../src/util/event-emitter.ts","../src/types/globals.ts","../src/util/is.ts","../src/util/cache-buffer.ts","../src/util/multi-map.ts","../src/util/event-manager.ts","../src/util/global.ts","../src/util/logger.ts","../src/util/stream.ts","../src/demux-facade.ts","../src/mp4/mp4-inspector.ts","../src/mp4/demux.ts"],"sourcesContent":["/**\n * @file= events.js, created at Monday, 23rd December 2019 3=47=23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nexport enum Events {\n    ERROR = 'ERROR',\n    INFO = 'INFO',\n    DATA = 'DATA',\n    DEMUX_DATA = 'DEMUX_DATA',\n    DONE = 'DONE'\n}\n","/**\n * @copyright https://github.com/nodejs/node/blob/master/lib/events.js\n */\n/* eslint-disable */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill;\nvar objectKeys = Object.keys || objectKeysPolyfill;\nvar bind = Function.prototype.bind || functionBindPolyfill;\n\n// By default Dispatchers will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nlet defaultMaxListeners = 10;\n\nexport default class EventEmitter {\n    static listenerCount(emitter, type) {\n        if (typeof emitter.listenerCount === 'function') {\n            return emitter.listenerCount(type);\n        } else {\n            return listenerCount.call(emitter, type);\n        }\n    }\n\n    static defaultMaxListeners: number;\n\n    _maxListeners?: number;\n    _eventsCount: number;\n    _events: any;\n\n    constructor() {\n        if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n            this._events = objectCreate(null);\n            this._eventsCount = 0;\n        }\n\n        this._maxListeners = this._maxListeners || undefined;\n    }\n\n    // // Obviously not all Emitters should be limited to 10. This function allows\n    // // that to be increased. Set to zero for unlimited.\n    // setMaxListeners(n) {\n    //     if (typeof n !== 'number' || n < 0 || isNaN(n))\n    //         throw new TypeError('\"n\" argument must be a positive number');\n    //     this._maxListeners = n;\n    //     return this;\n    // }\n    //\n    // getMaxListeners() {\n    //     return $getMaxListeners(this);\n    // }\n\n    emit(type: string, ...rest) {\n        var er, handler, len, args, i, events;\n        var doError = type === 'error';\n\n        events = this._events;\n        if (events) doError = doError && events.error == null;\n        else if (!doError) return false;\n\n        // If there is no 'error' event listener then throw.\n        if (doError) {\n            if (arguments.length > 1) er = arguments[1];\n            if (er instanceof Error) {\n                throw er; // Unhandled 'error' event\n            } else {\n                // At least give some kind of context to the user\n                var err = new Error('Unhandled \"error\" event. (' + er + ')');\n                err['context'] = er;\n                throw err;\n            }\n        }\n\n        handler = events[type];\n\n        if (!handler) return false;\n\n        var isFn = typeof handler === 'function';\n        len = arguments.length;\n        switch (len) {\n            // fast cases\n            case 1:\n                emitNone(handler, isFn, this);\n                break;\n            case 2:\n                emitOne(handler, isFn, this, arguments[1]);\n                break;\n            case 3:\n                emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n                break;\n            case 4:\n                emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n                break;\n            // slower\n            default:\n                args = new Array(len - 1);\n                for (i = 1; i < len; i++) args[i - 1] = arguments[i];\n                emitMany(handler, isFn, this, args);\n        }\n\n        return true;\n    }\n\n    on(type: string, listener: Function) {\n        return _addListener(this, type, listener);\n    }\n\n    once(type, listener) {\n        if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n        this.on(type, _onceWrap(this, type, listener));\n        return this;\n    }\n\n    off(type, listener) {\n        return _removeListener.call(this, type, listener);\n    }\n\n    removeAllListeners(type) {\n        var listeners, events, i;\n\n        events = this._events;\n        if (!events) return this;\n\n        // not listening for off, no need to emit\n        if (!events.off) {\n            if (arguments.length === 0) {\n                this._events = objectCreate(null);\n                this._eventsCount = 0;\n            } else if (events[type]) {\n                if (--this._eventsCount === 0) this._events = objectCreate(null);\n                else delete events[type];\n            }\n            return this;\n        }\n\n        // emit off for all listeners on all events\n        if (arguments.length === 0) {\n            var keys = objectKeys(events);\n            var key;\n            for (i = 0; i < keys.length; ++i) {\n                key = keys[i];\n                if (key === 'off') continue;\n                this.removeAllListeners(key);\n            }\n            this.removeAllListeners('off');\n            this._events = objectCreate(null);\n            this._eventsCount = 0;\n            return this;\n        }\n\n        listeners = events[type];\n\n        if (typeof listeners === 'function') {\n            this.off(type, listeners);\n        } else if (listeners) {\n            // LIFO order\n            for (i = listeners.length - 1; i >= 0; i--) {\n                this.off(type, listeners[i]);\n            }\n        }\n\n        return this;\n    }\n\n    listeners(type) {\n        return _listeners(this, type, true);\n    }\n\n    rawListeners(type) {\n        return _listeners(this, type, false);\n    }\n\n    listenerCount() {\n        return EventEmitter.listenerCount.apply(this, arguments);\n    }\n}\n\nlet hasDefineProperty;\ntry {\n    var o = {};\n    if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n    hasDefineProperty = o['x'] === 0;\n} catch (err) {\n    hasDefineProperty = false;\n}\nif (hasDefineProperty) {\n    Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n        enumerable: true,\n        get: function () {\n            return defaultMaxListeners;\n        },\n        set: function (arg) {\n            // check whether the input is a positive number (whose value is zero or\n            // greater and not a NaN).\n            if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n                throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n            defaultMaxListeners = arg;\n        }\n    });\n} else {\n    EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\nfunction $getMaxListeners(that) {\n    if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n    return that._maxListeners;\n}\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n    if (isFn) handler.call(self);\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i) {\n            try {\n                listeners[i].call(self);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\nfunction emitOne(handler, isFn, self, arg1) {\n    if (isFn) handler.call(self, arg1);\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i) {\n            try {\n                listeners[i].call(self, arg1);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n    if (isFn) handler.call(self, arg1, arg2);\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i) {\n            try {\n                listeners[i].call(self, arg1, arg2);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n    if (isFn) handler.call(self, arg1, arg2, arg3);\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i) {\n            try {\n                listeners[i].call(self, arg1, arg2, arg3);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n    if (isFn) handler.apply(self, args);\n    else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i) {\n            try {\n                listeners[i].apply(self, args);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\n\nfunction _addListener(target: EventEmitter, type, listener: Function) {\n    var m;\n    var events;\n    var existing;\n\n    if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\n    events = target._events;\n    if (!events) {\n        events = target._events = objectCreate(null);\n        target._eventsCount = 0;\n    } else {\n        // To avoid recursion in the case that type === \"newListener\"! Before\n        // adding it to the listeners, first emit \"newListener\".\n        if (events.newListener) {\n            target.emit('newListener', type, listener['listener'] ? listener['listener'] : listener);\n\n            // Re-assign `events` because a newListener handler could have caused the\n            // this._events to be assigned to a new object\n            events = target._events;\n        }\n        existing = events[type];\n    }\n\n    if (!existing) {\n        // Optimize the case of one listener. Don't need the extra array object.\n        existing = events[type] = listener;\n        ++target._eventsCount;\n    } else {\n        if (typeof existing === 'function') {\n            // Adding the second element, need to change to array.\n            existing = events[type] = [existing, listener];\n        } else {\n            existing.push(listener);\n        }\n\n        // Check for listener leak\n        if (!existing.warned) {\n            m = $getMaxListeners(target);\n            if (m && m > 0 && existing.length > m) {\n                existing.warned = true;\n\n                class CustomError extends Error {\n                    emitter: any;\n                    type: string;\n                    count: number;\n                }\n                let w: CustomError = new CustomError(\n                    'Possible Dispatcher memory leak detected. ' +\n                        existing.length +\n                        ' \"' +\n                        String(type) +\n                        '\" listeners ' +\n                        'added. Use emitter.setMaxListeners() to ' +\n                        'increase limit.'\n                );\n                w.name = 'MaxListenersExceededWarning';\n                w.emitter = target;\n                w.type = type;\n                w.count = existing.length;\n\n                if (typeof console === 'object' && console.warn) {\n                    console.warn('%s: %s', w.name, w.message);\n                }\n            }\n        }\n    }\n\n    return target;\n}\n\nfunction _removeListener(type, listener) {\n    var list, events, position, i, originalListener;\n\n    if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\n    events = this._events;\n    if (!events) return this;\n\n    list = events[type];\n    if (!list) return this;\n\n    if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0) this._events = objectCreate(null);\n        else {\n            delete events[type];\n            if (events.off) this.emit('off', type, list.listener || listener);\n        }\n    } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n            if (list[i] === listener || list[i].listener === listener) {\n                originalListener = list[i].listener;\n                position = i;\n                break;\n            }\n        }\n\n        if (position < 0) return this;\n\n        if (position === 0) list.shift();\n        else spliceOne(list, position);\n\n        if (list.length === 1) events[type] = list[0];\n\n        if (events.off) this.emit('off', type, originalListener || listener);\n    }\n\n    return this;\n}\n\nfunction onceWrapper() {\n    if (!this.fired) {\n        this.target.off(this.type, this.wrapFn);\n        this.fired = true;\n        switch (arguments.length) {\n            case 0:\n                return this.listener.call(this.target);\n            case 1:\n                return this.listener.call(this.target, arguments[0]);\n            case 2:\n                return this.listener.call(this.target, arguments[0], arguments[1]);\n            case 3:\n                return this.listener.call(this.target, arguments[0], arguments[1], arguments[2]);\n            default:\n                var args = new Array(arguments.length);\n                for (var i = 0; i < args.length; ++i) args[i] = arguments[i];\n                this.listener.apply(this.target, args);\n        }\n    }\n}\n\nfunction _onceWrap(target, type, listener) {\n    var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n    var wrapped = bind.call(onceWrapper, state);\n    wrapped.listener = listener;\n    state.wrapFn = wrapped;\n    return wrapped;\n}\n\nfunction _listeners(target, type, unwrap) {\n    var events = target._events;\n\n    if (!events) return [];\n\n    var evlistener = events[type];\n    if (!evlistener) return [];\n\n    if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n    return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nfunction listenerCount(type) {\n    var events = this._events;\n\n    if (events) {\n        var evlistener = events[type];\n\n        if (typeof evlistener === 'function') {\n            return 1;\n        } else if (evlistener) {\n            return evlistener.length;\n        }\n    }\n\n    return 0;\n}\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n    for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) list[i] = list[k];\n    list.pop();\n}\n\nfunction arrayClone(arr, n) {\n    var copy = new Array(n);\n    for (var i = 0; i < n; ++i) copy[i] = arr[i];\n    return copy;\n}\n\nfunction unwrapListeners(arr) {\n    var ret = new Array(arr.length);\n    for (var i = 0; i < ret.length; ++i) {\n        ret[i] = arr[i].listener || arr[i];\n    }\n    return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n    var F = function () {};\n    F.prototype = proto;\n    return new F();\n}\n\nfunction objectKeysPolyfill(obj) {\n    var keys = [];\n    for (var k in obj)\n        if (Object.prototype.hasOwnProperty.call(obj, k)) {\n            keys.push(k);\n        }\n    return k;\n}\n\nfunction functionBindPolyfill(context) {\n    var fn = this;\n    return function () {\n        return fn.apply(context, arguments);\n    };\n}\n","import EventEmitter from '../util/event-emitter';\n\nexport class Context extends EventEmitter {}\n\nexport type PushConf = Partial<{\n    done: boolean;\n    stubTime: number;\n    offsetPos: number; // Represents the start byte of the pushed data relative to the entire file\n}>;\n\nexport type GlobalOptions = Partial<{\n    debug: boolean;\n    decodeCodec: boolean;\n    config: PushConf;\n}>;\n\nexport interface IDemux {\n    /**\n     * Pipe the arrayBuffer to the demuxer.\n     * @param buf\n     * @param conf\n     */\n    push(buf: ArrayBuffer | Uint8Array, conf: PushConf): void;\n\n    reset(): void;\n\n    destroy(): void;\n}\n","/**\n * @file: is.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = Object.prototype.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nexport function isObjectLike(value: any): boolean {\n    return !!value && typeof value == 'object';\n}\n\nexport function isEmptyObject(obj: object): boolean {\n    for (var prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n            return false;\n        }\n    }\n    return JSON.stringify(obj) === JSON.stringify({});\n}\n\n/**\n * @param url\n */\nexport function isHttps(url?: string): boolean {\n    return /^https/gi.test(url || window.location.protocol);\n}\n\n/**\n * @param num\n */\nexport function isNumber(num: any): boolean {\n    return typeof num === 'number' && !isNaN(num);\n}\n\n/**\n * @param value\n */\nexport function isArrayBuffer(value: any): boolean {\n    return isObjectLike(value) && objectToString.call(value).toLowerCase() === '[object arraybuffer]';\n}\n\n/**\n * @param value\n */\nexport function isUint8Array(value: any): boolean {\n    return isObjectLike(value) && objectToString.call(value).toLowerCase() === '[object uint8array]';\n}\n","/**\n * @file: cache-buffer.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport { isNumber } from './is';\n\n/**\n * Cache Buffer util.\n * It's applicable for streaming data cutting and retaining the data,\n * the algorithm minimizes memory application as much as possible.\n */\n\nexport default class CacheBuffer {\n    get byteLength(): number {\n        if (!isNumber(this.byteLength_)) {\n            let len = 0;\n\n            for (let i = 0, item: Uint8Array; i < this.list_.length; i++) {\n                item = this.list_[i];\n                len += item.byteLength;\n            }\n            this.byteLength_ = len;\n        }\n\n        return this.byteLength_;\n    }\n\n    /**\n     * maybe return new allocated memory or original memory\n     */\n    get bytes(): Uint8Array | null {\n        const { bufferList } = this;\n        let bytes = null;\n\n        if (bufferList.length > 0) {\n            if (bufferList.length === 0) {\n                bytes = bufferList[0];\n            } else {\n                bytes = this.toNewBytes();\n            }\n        }\n\n        return bytes;\n    }\n\n    get empty() {\n        return this.list_.length === 0;\n    }\n\n    get bufferList() {\n        return this.list_;\n    }\n\n    /**\n     * Used to cache calculations, reduce the number of CPU calculations.\n     * When internal data changes, the value needs to be cleared and recalculated.\n     */\n    private byteLength_: number | null;\n\n    private list_: Array<Uint8Array> = [];\n\n    clear() {\n        let len = this.list_.length;\n        if (len > 0) {\n            this.list_.splice(0, len);\n        }\n        this.byteLength_ = null;\n    }\n\n    toNewBytes(): Uint8Array | null {\n        let bytes = null;\n        let tryCount: number = 0;\n        let maxTryCount: number = 50;\n\n        // The following retry strategies are provided for failed memory applications\n        // In terms of a better strategy, a failed memory application retry should be\n        // an asynchronous process, which does not return until the application succeeds.\n        // But the original design of the library is synchronous.\n        while (bytes === null) {\n            try {\n                tryCount++;\n                bytes = new Uint8Array(this.byteLength);\n            } catch (e) {\n                if (tryCount > maxTryCount) {\n                    throw e;\n                }\n            }\n        }\n\n        for (let i = 0, offset = 0; i < this.list_.length; i++) {\n            let payload = this.list_[i];\n\n            bytes.set(payload, offset);\n            offset += payload.byteLength;\n        }\n\n        return bytes;\n    }\n\n    append(newBuffer: Uint8Array | CacheBuffer): void {\n        if (newBuffer instanceof CacheBuffer) {\n            this.list_ = this.list_.concat(newBuffer.bufferList);\n        } else {\n            this.list_.push(newBuffer);\n        }\n\n        this.byteLength_ = null;\n    }\n\n    /**\n     * This function cuts a complete TypedArray from CacheBuffer and retains the remainder of CacheBuffer.\n     * The following points should be noted when using this function:\n     * 1. If the cut needs to return the cut-out part, the cut length should be as small as possible to reduce the errors in memory application.\n     * 2. If the cutting is only to preserve the remaining parts, the cutting size is within the total number of bytes, without considering memory applications.\n     * @param {number} fixedLength\n     * @param {boolean} [needCutResult] - If not, just retain the remaining parts after cutting.\n     */\n    cut(fixedLength: number, needCutResult: boolean = true): Uint8Array {\n        let chunk = null;\n\n        if (fixedLength > 0 && !this.empty) {\n            let list = this.list_;\n\n            let offset = 0;\n            let loopIndex = 0;\n\n            while (list.length > 0) {\n                let cur = list.shift();\n\n                if (loopIndex === 0) {\n                    if (cur.byteLength >= fixedLength) {\n                        if (needCutResult) {\n                            // Here is the key point for optimize memory alloc\n                            chunk = cur.subarray(0, fixedLength);\n                        }\n\n                        if (cur.byteLength > fixedLength) {\n                            cur = cur.subarray(fixedLength);\n                            list.unshift(cur);\n                        }\n                        break;\n                    } else {\n                        if (needCutResult) {\n                            try {\n                                chunk = new Uint8Array(fixedLength);\n                            } catch (e) {\n                                throw `alloc_memory_error@ cache buffer: ${fixedLength} ${e.message}`;\n                            }\n\n                            chunk.set(cur, 0);\n                        }\n                        offset += cur.byteLength;\n                    }\n                } else {\n                    let subLen = fixedLength - offset;\n\n                    if (cur.byteLength >= subLen) {\n                        if (needCutResult) {\n                            chunk.set(cur.subarray(0, subLen), offset);\n                        }\n\n                        cur = cur.subarray(subLen);\n\n                        if (cur.byteLength > 0) {\n                            list.unshift(cur);\n                        }\n\n                        break;\n                    } else {\n                        if (needCutResult) {\n                            chunk.set(cur, offset);\n                        }\n                        offset += cur.byteLength;\n                        break;\n                    }\n                }\n\n                loopIndex++;\n            }\n\n            this.byteLength_ = null;\n        }\n\n        return chunk;\n    }\n}\n","/**\n * @fileOverview A simple multimap template.\n */\n\ninterface MapData {\n    [index: string]: Array<any>;\n}\n\nexport default class MultiMap {\n    private map_: MapData;\n\n    constructor() {\n        this.map_ = {};\n    }\n\n    /**\n     * Add a key, value pair to the map.\n     * @param key\n     * @param value\n     */\n    push(key: string, value: any) {\n        if (Object.prototype.hasOwnProperty.call(this.map_, key)) {\n            this.map_[key].push(value);\n        } else {\n            this.map_[key] = [value];\n        }\n    }\n\n    /**\n     * Get a list of values by key.\n     * @param key\n     */\n    get(key: string): Array<any> {\n        let list = this.map_[key];\n        // slice() clones the list so that it and the map can each be modified\n        // without affecting the other.\n        return list ? list.slice() : null;\n    }\n\n    /**\n     * Get a list of all values.\n     */\n    getAll(): Array<any> {\n        let list = [];\n        for (let key in this.map_) {\n            list.push.apply(list, this.map_[key]);\n        }\n        return list;\n    }\n\n    /**\n     * Remove a specific value, if it exists.\n     * @param key\n     * @param value\n     */\n    remove(key: string, value: any): void {\n        let list = this.map_[key];\n        if (list) {\n            for (let i = 0; i < list.length; ++i) {\n                if (list[i] == value) {\n                    list.splice(i, 1);\n                    --i;\n                }\n            }\n        }\n    }\n\n    /**\n     * Clear all keys and values from the multimap.\n     */\n    clear(): void {\n        this.map_ = {};\n    }\n\n    /**\n     * @param callback\n     */\n    forEach(callback: Function): void {\n        for (let key in this.map_) {\n            callback(key, this.map_[key]);\n        }\n    }\n}\n","import MultiMap from './multi-map';\n\n/**\n * Creates a new Binding_ and attaches the event listener to the event target.\n */\nclass Binding_ {\n    target: any;\n    type: string;\n    listener: Function;\n\n    /**\n     * @param target - The event target.\n     * @param type - The event type.\n     * @param listener - The event listener.\n     */\n    constructor(target: any, type: string, listener: Function) {\n        this.target = target;\n        this.type = type;\n        this.listener = listener;\n\n        if (this.target.addEventListener) {\n            this.target.addEventListener(type, listener, false);\n        } else if (this.target.on) {\n            this.target.on(type, listener, false);\n        }\n    }\n\n    /**\n     * Detaches the event listener from the event target.\n     * This does nothing if the event listener is already detached.\n     */\n    off() {\n        if (this.target.removeEventListener) {\n            this.target.removeEventListener(this.type, this.listener, false);\n        } else if (this.target.off) {\n            this.target.off(this.type, this.listener, false);\n        }\n\n        this.target = null;\n        this.listener = null;\n    }\n}\n\n/**\n * Creates a new EventManager.\n * An EventManager maintains a collection of \"event bindings\" between event targets and event listeners.\n */\nexport default class EventManager {\n    private bindingMap_: MultiMap;\n    // static Binding_: Binding;\n\n    constructor() {\n        /**\n         * Maps an event type to an array of event bindings.\n         */\n        this.bindingMap_ = new MultiMap();\n    }\n\n    /**\n     * Detaches all event listeners.\n     * @override\n     */\n    destroy(): void {\n        this.removeAll();\n        this.bindingMap_ = null;\n    }\n\n    /**\n     * Attaches an event listener to an event target.\n     * @param target - The event target.\n     * @param type  - The event type.\n     * @param listener  - The event listener.\n     */\n    on(target: any, type: string, listener: Function): EventManager {\n        if (!this.bindingMap_) return;\n\n        let binding = new Binding_(target, type, listener);\n        this.bindingMap_.push(type, binding);\n\n        return this;\n    }\n\n    /**\n     * Attaches an event listener to an event target.\n     * The listener will be removed when the first instance of the event is fired.\n     * @param {EventTarget} target The event target.\n     * @param {string} type The event type.\n     * @param {function} listener The event listener.\n     */\n    once(target: any, type: string, listener: Function) {\n        // Install a shim listener that will stop listening after the first event.\n        this.on(\n            target,\n            type,\n            function (event: any) {\n                // Stop listening to this event.\n                this.off(target, type);\n                // Call the original listener.\n                listener(event);\n            }.bind(this)\n        );\n    }\n\n    /**\n     * Detaches an event listener from an event target.\n     * @param {EventTarget} target The event target.\n     * @param {string} type The event type.\n     */\n    off(target: any, type: string): void {\n        if (!this.bindingMap_) return;\n\n        let list = this.bindingMap_.get(type) || [];\n\n        for (let i = 0; i < list.length; ++i) {\n            let binding = list[i];\n\n            if (binding.target == target) {\n                binding.off();\n                this.bindingMap_.remove(type, binding);\n            }\n        }\n    }\n\n    /**\n     * Detaches all event listeners from all targets.\n     */\n    removeAll(): void {\n        if (!this.bindingMap_) return;\n\n        let list = this.bindingMap_.getAll();\n\n        for (let i = 0; i < list.length; ++i) {\n            list[i].off();\n        }\n\n        this.bindingMap_.clear();\n    }\n}\n\n// EventManager.Binding_ = Binding;\n","/**\n * @file: global.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * @description provide global scope.\n */\nlet global: any;\n\n// see https://stackoverflow.com/a/11237259/589493\nif (typeof window === 'undefined') {\n    /* eslint-disable-next-line no-undef */\n    global = self;\n} else {\n    global = window;\n}\n\nexport default global;\n","/**\n * @file: logger.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * utils - logger\n */\n/* global WorkerGlobalScope */\nimport global from './global';\nimport EventEmitter from './event-emitter';\n\nlet console = global.console;\nconst isWorker =\n    typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope &&\n    typeof importScripts != 'undefined';\nconst prefix = '>>>';\n\nclass Logger extends EventEmitter {\n    private MSG_NAME: string;\n    private _enable: boolean;\n\n    get enable() {\n        return this._enable;\n    }\n\n    set enable(value: boolean) {\n        this._enable = value;\n\n        this.MSG_NAME = '__log__';\n    }\n\n    constructor() {\n        super();\n        this._enable = false;\n    }\n\n    log(...restArgs: any) {\n        if (isWorker) {\n            logger.emit(this.MSG_NAME, 'log', [...restArgs].join(''));\n        } else {\n            if (this._enable) {\n                console.log.call(console, prefix, ...restArgs);\n            }\n        }\n    }\n\n    debug(...restArgs: any) {\n        if (isWorker) {\n            logger.emit(this.MSG_NAME, 'debug', [...restArgs].join(''));\n        } else {\n            if (this._enable && console.debug) {\n                console.debug.call(console, prefix, ...restArgs);\n            }\n        }\n    }\n\n    assert(...restArgs: any) {\n        if (this._enable && console.assert) {\n            let condition = restArgs[0];\n            let sliceArgs = Array.prototype.slice.call(restArgs, 1);\n            sliceArgs.unshift(prefix);\n\n            console.assert.call(console, condition, ...sliceArgs);\n        }\n    }\n\n    warn(...restArgs: any) {\n        if (isWorker) {\n            logger.emit(this.MSG_NAME, 'warn', [...restArgs].join(''));\n        } else {\n            if (this._enable) {\n                console.warn.call(console, prefix, ...restArgs);\n            }\n        }\n    }\n\n    error(...restArgs: any) {\n        if (isWorker) {\n            logger.emit(this.MSG_NAME, 'error', [...restArgs].join(''));\n        } else {\n            if (this._enable) {\n                console.error.call(console, prefix, ...restArgs);\n            }\n        }\n    }\n}\n\nlet logger = new Logger();\n\n/**\n * @param {Object} obj - custom logger\n */\nexport function setLogger(obj) {\n    console = obj;\n}\n\nexport function getLogger() {\n    return logger;\n}\n\nexport default logger;\n","/**\n * @file: stream.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/**\n * simple stream implementation.\n */\n\nimport { PushConf } from '../types/globals';\nimport EventEmitter from './event-emitter';\n\nclass Stream extends EventEmitter {\n    constructor() {\n        super();\n    }\n\n    /**\n     * connect to the next pipeline stream.\n     * @param destination\n     */\n    pipe(destination: Stream): Stream {\n        this.on('reset', function () {\n            destination.reset();\n        });\n\n        this.on('data', function (data) {\n            destination.push(data);\n        });\n\n        this.on('done', function (flushSource) {\n            destination.flush(flushSource);\n        });\n\n        return destination;\n    }\n\n    /**\n     * detaches the next pipeline stream previously attached.\n     */\n    unpipe(): Stream {\n        this.removeAllListeners('reset');\n        this.removeAllListeners('data');\n        this.removeAllListeners('done');\n\n        return this;\n    }\n\n    /**\n     * push data to current pipeline.\n     * @param data\n     */\n    push(data: any, conf?: PushConf): void {\n        if (conf) {\n        }\n        this.emit('data', data);\n    }\n\n    /**\n     * flush current pipeline.\n     * @param flushSource\n     */\n    flush(flushSource: Stream): void {\n        this.emit('done', flushSource);\n    }\n\n    reset(): void {\n        this.emit('reset');\n    }\n}\n\nexport default Stream;\n","/**\n * @file: demuxer.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\nimport { Events } from './enum/events';\nimport { Context, GlobalOptions, IDemux, PushConf } from './types/globals';\nimport CacheBuffer from './util/cache-buffer';\nimport EventManager from './util/event-manager';\nimport { isArrayBuffer, isUint8Array } from './util/is';\nimport logger from './util/logger';\nimport Stream from './util/stream';\n\nexport default abstract class DemuxFacade extends Stream implements IDemux {\n    readonly endStream?: Stream;\n    protected eventManager_: EventManager;\n    protected ctx_: Context;\n    protected options_: GlobalOptions;\n    protected cache_buffer_: CacheBuffer;\n\n    protected listenEndStream_(): void {\n        this.eventManager_ = new EventManager();\n\n        this.eventManager_\n            .on(this.endStream, 'data', (data) => {\n                this.emit(Events.DEMUX_DATA, data);\n            })\n            .on(this.endStream, 'done', (data) => {\n                this.emit(Events.DONE, data);\n            })\n            .on(this.ctx_, 'error', (data) => {\n                this.emit(Events.ERROR, data);\n            });\n    }\n\n    constructor(options: GlobalOptions = {}) {\n        super();\n\n        if (options.debug) {\n            logger.enable = true;\n        }\n\n        this.ctx_ = new Context();\n        this.options_ = options;\n        this.cache_buffer_ = new CacheBuffer();\n    }\n\n    /**\n     * Pipe the arrayBuffer to the demuxer.\n     * @param buf\n     * @param conf\n     */\n    abstract push(buf: ArrayBuffer | Uint8Array, conf: PushConf): void;\n\n    /**\n     * transfer data to Uint8Array\n     * @param buf\n     */\n    protected constraintPushData_(buf: ArrayBuffer | Uint8Array): Uint8Array | null {\n        let newBuf = null;\n        if (!isArrayBuffer(buf) && !isUint8Array(buf)) {\n            logger.error(`Data pushed is not an ArrayBuffer or Uint8Array: ${buf}`);\n            return newBuf;\n        }\n\n        if (isArrayBuffer(buf)) {\n            newBuf = new Uint8Array(buf);\n        } else {\n            newBuf = buf;\n        }\n\n        return newBuf;\n    }\n\n    reset(): void {}\n\n    destroy(): void {\n        this.unpipe();\n        this.endStream.unpipe();\n\n        this.eventManager_.removeAll();\n    }\n}\n","/**\n * @file: mp4-inspector.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\n/* eslint-disable */\nlet /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer - a four-byte buffer to translate\n     * @return the corresponding string\n     */\n    parseType = function (buffer: Uint8Array): string {\n        let result = '';\n        result += String.fromCharCode(buffer[0]);\n        result += String.fromCharCode(buffer[1]);\n        result += String.fromCharCode(buffer[2]);\n        result += String.fromCharCode(buffer[3]);\n        return result;\n    },\n    parseMp4Date = function (seconds: number): Date {\n        return new Date(seconds * 1000 - 2082844800000);\n    },\n    parseSampleFlags = function (flags: Uint8Array) {\n        return {\n            isLeading: (flags[0] & 0x0c) >>> 2,\n            dependsOn: flags[0] & 0x03,\n            isDependedOn: (flags[1] & 0xc0) >>> 6,\n            hasRedundancy: (flags[1] & 0x30) >>> 4,\n            paddingValue: (flags[1] & 0x0e) >>> 1,\n            isNonSyncSample: flags[1] & 0x01,\n            degradationPriority: (flags[2] << 8) | flags[3]\n        };\n    },\n    nalParse = function (avcStream) {\n        let avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n            result = [],\n            i,\n            length;\n        for (i = 0; i < avcStream.length; i += length) {\n            length = avcView.getUint32(i);\n            i += 4;\n            switch (avcStream[i] & 0x1f) {\n                case 0x01:\n                    result.push('NDR');\n                    break;\n                case 0x05:\n                    result.push('IDR');\n                    break;\n                case 0x06:\n                    result.push('SEI');\n                    break;\n                case 0x07:\n                    result.push('SPS');\n                    break;\n                case 0x08:\n                    result.push('PPS');\n                    break;\n                case 0x09:\n                    result.push('AUD');\n                    break;\n                default:\n                    result.push(avcStream[i] & 0x1f);\n                    break;\n            }\n        }\n        return result;\n    },\n    // registry of handlers for individual mp4 box types\n    parse = {\n        // codingname, not a first-class box type. stsd entries share the\n        // same format as real boxes so the parsing infrastructure can be\n        // shared\n        avc1: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n            return {\n                dataReferenceIndex: view.getUint16(6),\n                width: view.getUint16(24),\n                height: view.getUint16(26),\n                horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n                vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n                frameCount: view.getUint16(40),\n                depth: view.getUint16(74),\n                config: mp4toJSON(data.subarray(78, data.byteLength))\n            };\n        },\n        avcC: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result = {\n                    configurationVersion: data[0],\n                    avcProfileIndication: data[1],\n                    profileCompatibility: data[2],\n                    avcLevelIndication: data[3],\n                    lengthSizeMinusOne: data[4] & 0x03,\n                    sps: [],\n                    pps: []\n                },\n                numOfSequenceParameterSets = data[5] & 0x1f,\n                numOfPictureParameterSets,\n                nalSize,\n                offset,\n                i;\n\n            // iterate past any SPSs\n            offset = 6;\n            for (i = 0; i < numOfSequenceParameterSets; i++) {\n                nalSize = view.getUint16(offset);\n                offset += 2;\n                result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n                offset += nalSize;\n            }\n            // iterate past any PPSs\n            numOfPictureParameterSets = data[offset];\n            offset++;\n            for (i = 0; i < numOfPictureParameterSets; i++) {\n                nalSize = view.getUint16(offset);\n                offset += 2;\n                result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n                offset += nalSize;\n            }\n            return result;\n        },\n        btrt: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n            return {\n                bufferSizeDB: view.getUint32(0),\n                maxBitrate: view.getUint32(4),\n                avgBitrate: view.getUint32(8)\n            };\n        },\n        esds: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4)),\n                esId: (data[6] << 8) | data[7],\n                streamPriority: data[8] & 0x1f,\n                decoderConfig: {\n                    objectProfileIndication: data[11],\n                    streamType: (data[12] >>> 2) & 0x3f,\n                    bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n                    maxBitrate: (data[16] << 24) | (data[17] << 16) | (data[18] << 8) | data[19],\n                    avgBitrate: (data[20] << 24) | (data[21] << 16) | (data[22] << 8) | data[23],\n                    decoderConfigDescriptor: {\n                        tag: data[24],\n                        length: data[25],\n                        // audioObjectType: (data[26] >>> 3) & 0x1f,\n                        // samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n                        //   ((data[27] >>> 7) & 0x01),\n                        // channelConfiguration: (data[27] >>> 3) & 0x0f,\n                        // FIXME\n                        audioObjectType: (data[35] >>> 3) & 0x1f,\n                        samplingFrequencyIndex: ((data[35] & 0x07) << (8 + (data[36] & 0x80))) >> 7,\n                        channelConfiguration: (data[36] & 0x78) >> 3\n                    }\n                }\n            };\n        },\n        ftyp: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result = {\n                    majorBrand: parseType(data.subarray(0, 4)),\n                    minorVersion: view.getUint32(4),\n                    compatibleBrands: []\n                },\n                i = 8;\n            while (i < data.byteLength) {\n                result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n                i += 4;\n            }\n            return result;\n        },\n        dinf: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        dref: function (data) {\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4)),\n                dataReferences: mp4toJSON(data.subarray(8))\n            };\n        },\n        hdlr: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result = {\n                    version: view.getUint8(0),\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    handlerType: parseType(data.subarray(8, 12)),\n                    name: ''\n                },\n                i = 8;\n\n            // parse out the name field\n            for (i = 24; i < data.byteLength; i++) {\n                if (data[i] === 0x00) {\n                    // the name field is null-terminated\n                    i++;\n                    break;\n                }\n                result.name += String.fromCharCode(data[i]);\n            }\n            // decode UTF-8 to javascript's internal representation\n            // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n            result.name = decodeURIComponent(decodeURIComponent(result.name));\n\n            return result;\n        },\n        // mdat: function(data) {\n        // \treturn {\n        // \t\tbyteLength: data.byteLength,\n        // \t\tnals: nalParse(data),\n        // \t\trealData: data\n        // \t};\n        // },\n        mdhd: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                i = 4,\n                language,\n                result = {\n                    version: view.getUint8(0),\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    language: '',\n                    creationTime: new Date(),\n                    modificationTime: new Date(),\n                    timescale: 0,\n                    duration: 0\n                };\n            if (result.version === 1) {\n                i += 4;\n                result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n                i += 8;\n                result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n                i += 4;\n                result.timescale = view.getUint32(i);\n                i += 8;\n                result.duration = view.getUint32(i); // truncating top 4 bytes\n            } else {\n                result.creationTime = parseMp4Date(view.getUint32(i));\n                i += 4;\n                result.modificationTime = parseMp4Date(view.getUint32(i));\n                i += 4;\n                result.timescale = view.getUint32(i);\n                i += 4;\n                result.duration = view.getUint32(i);\n            }\n            i += 4;\n            // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n            // each field is the packed difference between its ASCII value and 0x60\n            language = view.getUint16(i);\n            result.language += String.fromCharCode((language >> 10) + 0x60);\n            result.language += String.fromCharCode(((language & 0x03c0) >> 5) + 0x60);\n            result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n            return result;\n        },\n        mdia: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        mfhd: function (data) {\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4)),\n                sequenceNumber: (data[4] << 24) | (data[5] << 16) | (data[6] << 8) | data[7]\n            };\n        },\n        minf: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        // codingname, not a first-class box type. stsd entries share the\n        // same format as real boxes so the parsing infrastructure can be\n        // shared\n        mp4a: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result = {\n                    // 6 bytes reserved\n                    dataReferenceIndex: view.getUint16(6),\n                    // 4 + 4 bytes reserved\n                    channelcount: view.getUint16(16),\n                    samplesize: view.getUint16(18),\n                    // 2 bytes pre_defined\n                    // 2 bytes reserved\n                    samplerate: view.getUint16(24) + view.getUint16(26) / 65536,\n                    streamDescriptor: undefined\n                };\n\n            // if there are more bytes to process, assume this is an ISO/IEC\n            // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n            if (data.byteLength > 28) {\n                result.streamDescriptor = mp4toJSON(data.subarray(28))[0];\n            }\n            return result;\n        },\n        moof: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        moov: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        mvex: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        mvhd: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                i = 4,\n                result = {\n                    version: view.getUint8(0),\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    creationTime: new Date(),\n                    modificationTime: new Date(),\n                    timescale: 0,\n                    duration: 0,\n                    rate: 0,\n                    volume: 0,\n                    matrix: new Uint32Array(0),\n                    nextTrackId: 0\n                };\n\n            if (result.version === 1) {\n                i += 4;\n                result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n                i += 8;\n                result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n                i += 4;\n                result.timescale = view.getUint32(i);\n                i += 8;\n                result.duration = view.getUint32(i); // truncating top 4 bytes\n            } else {\n                result.creationTime = parseMp4Date(view.getUint32(i));\n                i += 4;\n                result.modificationTime = parseMp4Date(view.getUint32(i));\n                i += 4;\n                result.timescale = view.getUint32(i);\n                i += 4;\n                result.duration = view.getUint32(i);\n            }\n            i += 4;\n\n            // convert fixed-point, base 16 back to a number\n            result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n            i += 4;\n            result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n            i += 2;\n            i += 2;\n            i += 2 * 4;\n            result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n            i += 9 * 4;\n            i += 6 * 4;\n            result.nextTrackId = view.getUint32(i);\n            return result;\n        },\n        pdin: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n            return {\n                version: view.getUint8(0),\n                flags: new Uint8Array(data.subarray(1, 4)),\n                rate: view.getUint32(4),\n                initialDelay: view.getUint32(8)\n            };\n        },\n        sdtp: function (data) {\n            let result = {\n                    version: data[0],\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    samples: []\n                },\n                i;\n\n            for (i = 4; i < data.byteLength; i++) {\n                result.samples.push({\n                    dependsOn: (data[i] & 0x30) >> 4,\n                    isDependedOn: (data[i] & 0x0c) >> 2,\n                    hasRedundancy: data[i] & 0x03\n                });\n            }\n            return result;\n        },\n        sidx: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result = {\n                    version: data[0],\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    references: [],\n                    referenceId: view.getUint32(4),\n                    timescale: view.getUint32(8),\n                    earliestPresentationTime: view.getUint32(12),\n                    firstOffset: view.getUint32(16)\n                },\n                referenceCount = view.getUint16(22),\n                i;\n\n            for (i = 24; referenceCount; i += 12, referenceCount--) {\n                result.references.push({\n                    referenceType: (data[i] & 0x80) >>> 7,\n                    referencedSize: view.getUint32(i) & 0x7fffffff,\n                    subsegmentDuration: view.getUint32(i + 4),\n                    startsWithSap: !!(data[i + 8] & 0x80),\n                    sapType: (data[i + 8] & 0x70) >>> 4,\n                    sapDeltaTime: view.getUint32(i + 8) & 0x0fffffff\n                });\n            }\n\n            return result;\n        },\n        stbl: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        stco: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n            let entryCount = view.getUint32(4);\n            let result = {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4)),\n                entryCount: entryCount,\n                chunkOffsets: []\n            };\n            for (let i = 8; entryCount; i += 4, entryCount--) {\n                result.chunkOffsets.push(view.getUint32(i));\n            }\n            return result;\n        },\n        stsc: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                entryCount = view.getUint32(4),\n                result = {\n                    version: data[0],\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    sampleToChunks: []\n                },\n                i;\n            for (i = 8; entryCount; i += 12, entryCount--) {\n                result.sampleToChunks.push({\n                    firstChunk: view.getUint32(i),\n                    samplesPerChunk: view.getUint32(i + 4),\n                    sampleDescriptionIndex: view.getUint32(i + 8)\n                });\n            }\n            return result;\n        },\n        stsd: function (data) {\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4)),\n                boxes: mp4toJSON(data.subarray(8))\n            };\n        },\n        stsz: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result = {\n                    version: data[0],\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    sampleSize: view.getUint32(4),\n                    entries: []\n                },\n                i;\n            for (i = 12; i < data.byteLength; i += 4) {\n                result.entries.push(view.getUint32(i));\n            }\n            return result;\n        },\n        stts: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result = {\n                    version: data[0],\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    timeToSamples: []\n                },\n                entryCount = view.getUint32(4),\n                i;\n\n            for (i = 8; entryCount; i += 8, entryCount--) {\n                result.timeToSamples.push({\n                    sampleCount: view.getUint32(i),\n                    sampleDelta: view.getUint32(i + 4)\n                });\n            }\n            return result;\n        },\n        styp: function (data) {\n            return parse.ftyp(data);\n        },\n        tfdt: function (data) {\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4)),\n                baseMediaDecodeTime: (data[4] << 24) | (data[5] << 16) | (data[6] << 8) | data[7]\n            };\n        },\n        tfhd: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                result: {\n                    version: number;\n                    flags: Uint8Array;\n                    trackId: number;\n                    baseDataOffset?: number;\n                    sampleDescriptionIndex?: number;\n                    defaultSampleDuration?: number;\n                    defaultSampleSize?: number;\n                    defaultSampleFlags?: number;\n                } = {\n                    version: data[0],\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    trackId: view.getUint32(4)\n                },\n                baseDataOffsetPresent = result.flags[2] & 0x01,\n                sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n                defaultSampleDurationPresent = result.flags[2] & 0x08,\n                defaultSampleSizePresent = result.flags[2] & 0x10,\n                defaultSampleFlagsPresent = result.flags[2] & 0x20,\n                i;\n\n            i = 8;\n            if (baseDataOffsetPresent) {\n                i += 4; // truncate top 4 bytes\n                result.baseDataOffset = view.getUint32(12);\n                i += 4;\n            }\n            if (sampleDescriptionIndexPresent) {\n                result.sampleDescriptionIndex = view.getUint32(i);\n                i += 4;\n            }\n            if (defaultSampleDurationPresent) {\n                result.defaultSampleDuration = view.getUint32(i);\n                i += 4;\n            }\n            if (defaultSampleSizePresent) {\n                result.defaultSampleSize = view.getUint32(i);\n                i += 4;\n            }\n            if (defaultSampleFlagsPresent) {\n                result.defaultSampleFlags = view.getUint32(i);\n            }\n            return result;\n        },\n        tkhd: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                i = 4,\n                result = {\n                    version: view.getUint8(0),\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    creationTime: new Date(),\n                    modificationTime: new Date(),\n                    trackId: 0,\n                    duration: 0,\n                    layer: 0,\n                    alternateGroup: 0,\n                    volume: 0,\n                    width: 0,\n                    height: 0,\n                    matrix: new Uint32Array(0)\n                };\n            if (result.version === 1) {\n                i += 4;\n                result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n                i += 8;\n                result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n                i += 4;\n                result.trackId = view.getUint32(i);\n                i += 4;\n                i += 8;\n                result.duration = view.getUint32(i); // truncating top 4 bytes\n            } else {\n                result.creationTime = parseMp4Date(view.getUint32(i));\n                i += 4;\n                result.modificationTime = parseMp4Date(view.getUint32(i));\n                i += 4;\n                result.trackId = view.getUint32(i);\n                i += 4;\n                i += 4;\n                result.duration = view.getUint32(i);\n            }\n            i += 4;\n            i += 2 * 4;\n            result.layer = view.getUint16(i);\n            i += 2;\n            result.alternateGroup = view.getUint16(i);\n            i += 2;\n            // convert fixed-point, base 16 back to a number\n            result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n            i += 2;\n            i += 2;\n            result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n            i += 9 * 4;\n            result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n            i += 4;\n            result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n            return result;\n        },\n        traf: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        trak: function (data) {\n            return {\n                boxes: mp4toJSON(data)\n            };\n        },\n        trex: function (data) {\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4)),\n                trackId: view.getUint32(4),\n                defaultSampleDescriptionIndex: view.getUint32(8),\n                defaultSampleDuration: view.getUint32(12),\n                defaultSampleSize: view.getUint32(16),\n                sampleDependsOn: data[20] & 0x03,\n                sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n                sampleHasRedundancy: (data[21] & 0x30) >> 4,\n                samplePaddingValue: (data[21] & 0x0e) >> 1,\n                sampleIsDifferenceSample: !!(data[21] & 0x01),\n                sampleDegradationPriority: view.getUint16(22)\n            };\n        },\n        trun: function (data) {\n            let result: {\n                    version: number;\n                    flags: Uint8Array;\n                    samples: Array<any>;\n                    dataOffset?: number;\n                } = {\n                    version: data[0],\n                    flags: new Uint8Array(data.subarray(1, 4)),\n                    samples: []\n                },\n                view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n                dataOffsetPresent = result.flags[2] & 0x01,\n                firstSampleFlagsPresent = result.flags[2] & 0x04,\n                sampleDurationPresent = result.flags[1] & 0x01,\n                sampleSizePresent = result.flags[1] & 0x02,\n                sampleFlagsPresent = result.flags[1] & 0x04,\n                sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n                sampleCount = view.getUint32(4),\n                offset = 8,\n                sample;\n\n            if (dataOffsetPresent) {\n                result.dataOffset = view.getUint32(offset);\n                offset += 4;\n            }\n            if (firstSampleFlagsPresent && sampleCount) {\n                sample = {\n                    flags: parseSampleFlags(data.subarray(offset, offset + 4))\n                };\n                offset += 4;\n                if (sampleDurationPresent) {\n                    sample.duration = view.getUint32(offset);\n                    offset += 4;\n                }\n                if (sampleSizePresent) {\n                    sample.size = view.getUint32(offset);\n                    offset += 4;\n                }\n                if (sampleCompositionTimeOffsetPresent) {\n                    sample.compositionTimeOffset = view.getUint32(offset);\n                    offset += 4;\n                }\n                result.samples.push(sample);\n                sampleCount--;\n            }\n            while (sampleCount--) {\n                sample = {};\n                if (sampleDurationPresent) {\n                    sample.duration = view.getUint32(offset);\n                    offset += 4;\n                }\n                if (sampleSizePresent) {\n                    sample.size = view.getUint32(offset);\n                    offset += 4;\n                }\n                if (sampleFlagsPresent) {\n                    sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n                    offset += 4;\n                }\n                if (sampleCompositionTimeOffsetPresent) {\n                    sample.compositionTimeOffset = view.getUint32(offset);\n                    offset += 4;\n                }\n                result.samples.push(sample);\n            }\n            return result;\n        },\n        'url ': function (data) {\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4))\n            };\n        },\n        vmhd: function (data) {\n            //let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n            return {\n                version: data[0],\n                flags: new Uint8Array(data.subarray(1, 4))\n                //graphicsmode: view.getUint16(4),\n                //opcolor: new Uint16Array([view.getUint16(6),\n                //                          view.getUint16(8),\n                //                          view.getUint16(10)])\n            };\n        }\n    };\n\n/**\n * Return a javascript array of box objects parsed from an ISO base media file.\n * @param data - the binary data of the media to be inspected\n * @return a javascript array of potentially nested box objects\n */\nlet mp4toJSON = function (data: Uint8Array): Array<any> {\n    let i = 0,\n        result = [],\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        size,\n        type,\n        end,\n        box;\n\n    while (i < data.byteLength) {\n        // parse box data\n        (size = view.getUint32(i)), (type = parseType(data.subarray(i + 4, i + 8)));\n        end = size > 1 ? i + size : data.byteLength;\n\n        // parse type-specific data\n        box = (\n            parse[type] ||\n            function (data) {\n                return {\n                    data: data\n                };\n            }\n        )(data.subarray(i + 8, end));\n        box.size = size;\n        box.type = type;\n\n        // store this box and move to the next\n        result.push(box);\n        i = end;\n    }\n    return result;\n};\n\nexport const MP4Inspect = {\n    mp4toJSON: mp4toJSON\n};\n","/**\n * @file: demux.js, created at Monday, 23rd December 2019 3:47:23 pm\n * @copyright Copyright (c) 2020\n * @author gem <gems.xu@gmail.com>\n */\n\nimport DemuxFacade from '../demux-facade';\nimport { GlobalOptions } from '../types/globals';\nimport logger from '../util/logger';\nimport { MP4Inspect } from './mp4-inspector';\n\n/**\n * mp4.\n */\nexport class MP4Demux extends DemuxFacade {\n    constructor(options: GlobalOptions = {}) {\n        super(options);\n\n        super.listenEndStream_();\n    }\n\n    /**\n     * This is end pipeline stream\n     */\n    get endStream() {\n        return this;\n    }\n\n    /**\n     * The MP4 data pushed into stream should be complete data.\n     * @param buffer\n     */\n    push(buffer: ArrayBuffer | Uint8Array) {\n        let newBuf: Uint8Array = super.constraintPushData_(buffer);\n\n        logger.log(`mp4 demux received ${newBuf.byteLength} bytes`);\n\n        let result = MP4Inspect.mp4toJSON(newBuf);\n\n        this.emit('data', result);\n    }\n}\n"],"names":["Events","console","global"],"mappings":"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"}